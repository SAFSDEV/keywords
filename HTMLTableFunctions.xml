<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE keyword_library SYSTEM "keyword_library.dtd">
<keyword_library>

    <libraryType type="COMPONENT" />
    
    <libraryInfo name="HTMLTableFunctions" 
                 doc="HTMLTableFunctions.htm" 
                 sourcecode="HTMLTableFunctions.sbl" 
                 chainTo="HTMLFunctions"
                 class="HTMLTABLE">

        <description>
           <short_desc> 
              Actions for working with HTMLTable objects
           </short_desc>
           <detailed_desc>
                <p>
                NOTE: The RobotJ version has enabled *ALL* of the
                keywords available to the JavaTableFunctions. See that
                documentation for a description of those keywords.
                The only differences are thus:  The columns cannot be
                named, but must evaluate to a numerical value.
                </p>
           </detailed_desc>
        </description>

    </libraryInfo>
    <runtime platform="Windows" engine="Robot" version="2002" />
    <keywords>
    
    <keyword name="CLICK" 
             displayText="Click" 
             deprecated="YES" 
             deprecatedFor="Generic CLICK" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description>
              <short_desc> 
                Attempts to perform a standard Click on an HTMLTable on a webpage.
              </short_desc>
              <detailed_desc> 
                <p>Attempts to perform a standard Click on an HTMLTable on a webpage.
                We can optionally click on a particular area of the table 
                rather than a generic click (Coords=1,1).</p>
                <p> 
                The click area lookup is done with the component name AND an additional
                app map reference provided in Field #5.</p>
                <p>
                Typical Data Table records:</p>
                <p>
                (1) t BrowserWin ATable Click<br/>
                (2) t BrowserWin ATable Click AMappedRegion</p>
                <p>
                #1 above should merely click in the top-left corner of the table.</p>
                <p>
                #2 above will contain a ATable entry in the BrowserWin section with 
                normal recognition information for it.  ATable will also have it's
                own section in the Application Map in which there will be entries
                defining specific indexed or named regions for the table.</p>
                <p>
                Examples:</p>
                <p>
                [BrowserWin]<br/>
                BrowserWin=WindowTag=WEBBrowser<br/>
                ATable=Type=HTMLFrame;HTMLID=top;Type=HTMLTable;Index=1<br/>
                ...</p>
                <p>
                [ATable]<br/>
                AMappedRegion=Coords=10,10<br/>
                ANamedRegion=Coords=10,10,25,25<br/>
                AnIndexedRegion=Col=1;Row=1</p>
              </detailed_desc>
           </description>
           
       <engines>
           <engine name="WinRunner" 
	   	since="20021101" 
	   	tool="WinRunner" 
	   	vendor="Mercury Interactive">
	   	<libraryInfo class="HTMLTABLE" 
	   		     name="HTMLTableFunctions" 
	   	   	     sourcecode="HTMLTableFunctions">
	   	</libraryInfo>
           </engine>
       </engines>

       <parameters>
        <parameter name="APPMAPSUBKEY" displayText="AppMapSubkey" optional="YES">
           <description>
              <short_desc> 
                Name of the AppMap subkey to lookup and use for the click.
              </short_desc>
              <detailed_desc>
                <p>Name of the AppMap subkey to lookup and use for the click.
                The AppMap can contain the item in any of the following formats:</p>
                <p>
                [ATable]<br/>
                AMappedRegion=Coords=10,10<br/>
                ANamedRegion=Coords=10,10,25,25<br/>
                AnIndexedRegion=Col=1;Row=1</p>
                <p>
                Any valid content used with the HTMLTable Click command can be part 
                of this AppMap entry.</p>
                <p>
                Both Fields #3 and #5 are used to locate the item in the App Map.
                This routine does not specify an App Map so only the current Map
                is used and it is expected to be valid.</p>
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>

        <example>
           <usage>T, WebBrowser, WebTable, CLICK, Centert</usage>
           <description>
              <short_desc> 
                A single-click is performed on the WebTable at the location referenced in the App Map for Centert.
              </short_desc>
              <detailed_desc> 
                <p>Field [5]: TQ String.  Optional reference identified in the Application Map identifying
                where to click.</p>
                <p>[WebTable]<br/>
                Center=Coords=10,10<br/>
                Field10=Col=10;Row=1</p>
                <p>
                If no reference is given then Coords 1,1 will be clicked.</p>
              </detailed_desc>
           </description>
        </example>
     </examples></keyword>
     
  <keyword name="CLICKCELL" 
           displayText="ClickCell" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Click on a cell specified by row and column.
              </short_desc>
              <detailed_desc> 
                Click on a cell specified by row and column
                parameters.
                <p>
                Note, for the RobotJ version, (and maybe other engines
                as well), the row and column values are true to the TR
                and TD elements of the web page, so if a TR or TD has
                no text in it, then it may seem confusing. In other
                words, a table may only seem to have lets say 5
                columns, but there may actually be more based on the
                contents of the cells.
                </p>
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="HTMLTableFunctions" 
                            doc="HTMLTableFunctions.htm" 
                            sourcecode="HTMLTableFunctions.sbl" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031218" >
	       <libraryInfo name="CFTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="JAVATABLE" />
           </engine>
           <engine name="WinRunner" 
	   	   	   	   			       since="20021101" 
	   	   	   	   			       tool="WinRunner" 
	   	   	   	   			       vendor="Mercury Interactive">
	   	   	   	   		       <libraryInfo class="HTMLTABLE" 
	   	   	   	   					name="HTMLTableFunctions" 
	   	   	   	   					sourcecode="HTMLTableFunctions">
	   	   	   	   		       </libraryInfo>
           </engine>
	   <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070308" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="NO">
           <description>
              <short_desc> 
                The row of the cell to click.
              </short_desc>
              <detailed_desc>
                The cell is fully defined by the intersection of
                the row and column values.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The column of the cell to click.
              </short_desc>
              <detailed_desc>
                The cell is fully defined by the intersection of
                the row and column values.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, ClickCell, 1, 3</usage>
           <description>
              <short_desc> 
                A single-click is performed on the WebTable at row 1, column 3.
              </short_desc>
           </description>
        </example>
     </examples></keyword>
     
  <keyword name="COMPARESTOREDPROPERTIES" 
           displayText="CompareStoredProperties" 
           deprecated="YES" 
           deprecatedFor="Generic CompareStoredProperties" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Performs a HTMLTableVP CompareProperties on an HTMLTable object.
              </short_desc>
              <detailed_desc> 
                <p>Performs a HTMLTableVP CompareProperties on an HTMLTable object.</p>
                <p>
                THE BENCHMARK VP MUST ALREADY EXIST AND BE AN ASSET OF THE CURRENTLY
                RUNNING SCRIPT.</p>
                <p>  
                Modified VP parameter information can be added to the standard
                VP=VPName by including the VPName reference in the application map
                in a section defined for the HTMLTable.  If this is done, the value 
                retrieved from the application map will be appended to VP=VPName.
                The required semicolon for this append will be provided by this routine.</p>
                <p>
                Example 1: Perform a standard HTMLTable CompareProperties.  To perform
                a basic CompareProperties the name "StoredVP" will not exist in the app map:</p>
                <p>
                The Step File call:</p>
                <p>
                BrowserWindow AnHTMLTable CompareStoredProperties StoredVP</p>
                <p>
                This will produce a CompareProperties VP with "VP=StoredVP;Wait=2,10".</p>
                <p>
                The StoredVP baseline MUST already exist as an asset of the
                currently running script.</p>
                <p>
                Example 2: Perform a HTMLTable CompareProperties providing addition 
                parameter information (such as ExpectedResult=FAIL).  To do this the
                HTMLTable object must have its own section in the app map and an item
                with the same name as the StoredVP.  The value of that item will be
                appended to the standard VP argument with a semicolon.</p>
                <p>
                Part of App Map:</p>
                <p>
                [BrowserWindow]<br/>
                BrowserWindow=WindowTag=WEBBrowser<br/>
                AnHTMLTable=&lt;snipped for brevity&gt;;\;Type=HTMLTable;HTMLID=TableID<br/>
                ...<br/>
                [AnHTMLTable]<br/>
                StoredVP=ExpectedResult=FAIL;Wait=3,30</p>
                <p>
                The Step File call:</p>
                <p>
                BrowserWindow AnHTMLTable CompareStoredProperties StoredVP</p>
                <p>
                This will produce a CompareProperties VP with all the parameters appended
                like this: "VP=StoredVP;ExpectedResult=FAIL;Wait=3,30".
                NOTE:When stored parameters are found in the app map then the default Wait= 
                parameter used in the standard compare is no longer provided.  If you still 
                need a Wait= parameter, then it must be included in the stored parameters.</p>
                <p>
                The StoredVP baseline MUST already exist as an asset of the
                currently running script.</p>
              </detailed_desc>
           </description>
           
       <engines>
           <engine name="WinRunner" 
	   	since="20021101" 
	   	tool="WinRunner" 
	   	vendor="Mercury Interactive">
	   	<libraryInfo class="HTMLTABLE" 
	   	    name="HTMLTableFunctions" 
	   	    sourcecode="HTMLTableFunctions">
	   	</libraryInfo>
           </engine>
       </engines>

       <parameters>
        <parameter name="VPASSET" displayText="VPAsset" optional="NO">
           <description>
              <short_desc>
                Name of the pre-existing VP asset stored in the currently running script.
              </short_desc>
              <detailed_desc>
                Name of the pre-existing VP asset stored in the currently running script.
                If the name also exists in the app map under the component then the
                additional stored parameters are appended to the VP call.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>

        <example>
           <usage>T, WebBrowser, WebPage, COMPARESTOREDPROPERTIES, "AStoredVP"</usage>
           <description>
              <short_desc> 
                This action performs a CompareProperties on the WebPage object against "AStoredVP".
              </short_desc>
              <detailed_desc> 
                Field  5 : TQ String. The name of a stored CompareProperties VP which must exist as
                an asset of the currently running script.
                You can also specify additional VP parameters by including a reference in the application map.
                [WebPage]<br/>
                AStoredVP=ExpectedResult=FAIL;Wait=3,30<br/>
              </detailed_desc>
           </description>
        </example>
     </examples></keyword>
     
  <keyword name="COMPARESTOREDDATA" 
           displayText="CompareStoredData" 
           deprecated="YES" 
           deprecatedFor="Generic CompareStoredData" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Performs a HTMLTableVP CompareData on an HTMLTable object.
              </short_desc>
              <detailed_desc> 
                <p>Performs a HTMLTableVP CompareProperties on an HTMLTable object.</p>
                <p>
                THE BENCHMARK VP MUST ALREADY EXIST AND BE AN ASSET OF THE CURRENTLY
                RUNNING SCRIPT.</p>
                <p>  
                Modified VP parameter information can be added to the standard
                VP=VPName by including the VPName reference in the application map
                in a section defined for the HTMLTable.  If this is done, the value 
                retrieved from the application map will be appended to VP=VPName.
                The required semicolon for this append will be provided by this routine.</p>
                <p>
                Example 1: Perform a standard HTMLTable CompareProperties.  To perform
                a basic CompareProperties the name "StoredVP" will not exist in the app map:</p>
                <p>
                The Step File call:</p>
                <p>
                BrowserWindow AnHTMLTable CompareStoredProperties StoredVP</p>
                <p>
                This will produce a CompareProperties VP with "VP=StoredVP;Wait=2,10".</p>
                <p>
                The StoredVP baseline MUST already exist as an asset of the
                currently running script.</p>
                <p>
                Example 2: Perform a HTMLTable CompareProperties providing addition 
                parameter information (such as ExpectedResult=FAIL).  To do this the
                HTMLTable object must have its own section in the app map and an item
                with the same name as the StoredVP.  The value of that item will be
                appended to the standard VP argument with a semicolon.</p>
                <p>
                Part of App Map:</p>
                <p>
                [BrowserWindow]<br/>
                BrowserWindow=WindowTag=WEBBrowser<br/>
                AnHTMLTable=&lt;snipped for brevity&gt;;\;Type=HTMLTable;HTMLID=TableID<br/>
                ...<br/>
                [AnHTMLTable]<br/>
                StoredVP=ExpectedResult=FAIL;Wait=3,30</p>
                <p>
                The Step File call:</p>
                <p>
                BrowserWindow AnHTMLTable CompareStoredProperties StoredVP</p>
                <p>
                This will produce a CompareProperties VP with all the parameters appended
                like this: "VP=StoredVP;ExpectedResult=FAIL;Wait=3,30".
                NOTE:When stored parameters are found in the app map then the default Wait= 
                parameter used in the standard compare is no longer provided.  If you still 
                need a Wait= parameter, then it must be included in the stored parameters.</p>
                <p>
                The StoredVP baseline MUST already exist as an asset of the
                currently running script.</p>
              </detailed_desc>
           </description>
           
       <engines>
           <engine name="WinRunner" 
	       since="20021101" 
	       tool="WinRunner" 
	       vendor="Mercury Interactive">
	       <libraryInfo class="HTMLTABLE" 
	   	            name="HTMLTableFunctions" 
	   		    sourcecode="HTMLTableFunctions">
	       </libraryInfo>
           </engine>
       </engines>

       <parameters>
        <parameter name="VPASSET" displayText="VPAsset" optional="NO">
           <description>
              <short_desc> 
                Name of the pre-existing VP asset stored in the currently running script.
              </short_desc>
              <detailed_desc>
                Name of the pre-existing VP asset stored in the currently running script.
                If the name also exists in the app map under the component then the
                additional stored parameters are appended to the VP call.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>

        <example>
           <usage>T, WebBrowser, WebPage, COMPARESTOREDDATA, "AStoredVP"</usage>
           <description>
              <short_desc> 
                This action compares stored data on the WebPage object against "AStoredVP".
              </short_desc>
              <detailed_desc> 
                <p>Field  5 : TQ String. The name of a stored CompareData VP which must exist as
                an asset of the currently running script.
                You can also specify additional VP parameters by including a reference
                in the application map.</p>
                <p>[WebPage]<br/>
                AStoredVP=ExpectedResult=FAIL;Wait=3,30</p>
              </detailed_desc>
           </description>
        </example>
     </examples></keyword>
     
     <keyword name="VERIFYCELLVALUE" 
                displayText="VerifyCellValue" 
                deprecated="NO" 
                expectFailSupport="NO" 
                expectWarnSupport="NO">
                
            <description>
                   <short_desc> 
                     Verify the value of a specific Cell.
                   </short_desc>
                   <detailed_desc> 
                     Attemps to verify the contents of a table cell on a webpage
		     should the command not contain what cell to verify it will default
		     to 1,1
                   </detailed_desc>
                </description>
                
            <engines>
            	<engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       			<libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           		</engine> 
                <engine name="WinRunner" 
				       since="20021101" 
				       tool="WinRunner" 
				       vendor="Mercury Interactive">
			       <libraryInfo class="HTMLTABLE" 
						name="HTMLTableFunctions" 
						sourcecode="HTMLTableFunctions">
			       </libraryInfo>
                </engine>
                <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	     <libraryInfo name="CFHTMLTable" 
			     doc="org/safs/selenium/CFHTMLTable.html" 
			     sourcecode="org.safs.selenium.CFHTMLTable.java" 
			     class="CFHTMLTable" />
                </engine>                        
            </engines>
     
            <parameters>
             <parameter name="EXPECTEDVALUE" displayText="ExpectedValue" optional="NO">
                <description>
                   <short_desc> 
                     The Expected Value of the cell.
                   </short_desc>
                   <detailed_desc>
                     The Expected Value of the cell, this will be used to compare with
		     the actual value of the cell and logged as a pass or fail. This value
		     is case sensitive and should acurately reflect the text string of the
		     cell being tested.
                   </detailed_desc>
                </description>
             </parameter>
             <parameter name="CELL" displayText="Cell" optional="YES">
                <description>
                   <short_desc> 
                     This is the optional cell location to be tested
                   </short_desc>
                   <detailed_desc>
                     This is the optional cell location to be tested, it will be assummed if 
		     value is not present that the command is referencing cell 1,1
                   </detailed_desc>
                </description>
             </parameter>
          </parameters><examples>
             <example>
                <usage>T, WebBrowser, WebTable, VerifyCellValue, ExpectedValue</usage>
                <description>
                   <short_desc> 
                     The value is verified at row 1, column 1.
                   </short_desc>
                </description>
             </example>
             <example>
		     <usage>T, WebBrowser, WebTable, VerifyCellValue, ExpectedValue, "2,2"</usage>
		     <description>
			<short_desc> 
			  The value is verified at row 2, column 2.
			</short_desc>
		     </description>
             </example>
     </examples></keyword>
     
  <keyword name="RIGHTCLICKCELL" 
              displayText="RightClickCell" 
              deprecated="NO" 
              expectFailSupport="NO" 
              expectWarnSupport="NO">
             
         <description>
              <short_desc> 
                Attempts to perform a right click on a cell in a Table.
              </short_desc>
              <detailed_desc> 
                Right clicks on a particular row/column of the table. 
                The default location is Row=1, Col=1 unless either parameter 
                is specified otherwise.
                <p>
                RJ: CFHTMLTable gets this support from subclassing CFTable.</p>
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20051017" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row in the row/col specification.
              </short_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column in the row/col specification.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, RightClickCell</usage>
           <description>
              <short_desc> 
                Right click the cell at row,col cell 1,1.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WebBrowser, WebTable, RightClickCell, 3, 4</usage>
           <description>
              <short_desc> 
                Right click the cell at row,col cell 3,4.
              </short_desc>
           </description>
        </example>
     </examples></keyword>

  <keyword name="DOUBLECLICKCELL" 
           displayText="DoubleClickCell" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to perform a double click on a cell in a Table.
              </short_desc>
              <detailed_desc> 
                Clicks on a particular row/column of the table. 
                The default location is Row=1, Col=1 unless either parameter 
                is specified otherwise.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20051017" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
	   <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070308" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row in the row/col specification.
              </short_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column in the row/col specification.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, DoubleClickCell</usage>
           <description>
              <short_desc> 
                Click the cell at row,col cell 1,1.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WebBrowser, WebTable, DoubleClickCell, 3, 4</usage>
           <description>
              <short_desc> 
                Click the cell at row,col cell 3,4.
              </short_desc>
           </description>
        </example>
     </examples></keyword>
     
  <keyword name="ACTIVATECELL" 
           displayText="ActivateCell" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to perform a double click on a Table cell.
              </short_desc>
              <detailed_desc> 
                Clicks on a particular row/column of the table. 
                The default location is Row=1, Col=1 unless either parameter 
                is specified otherwise.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
	   <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070308" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row in the row/col specification.
              </short_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column in the row/col specification.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, ActivateCell</usage>
           <description>
              <short_desc> 
                Click the cell at row,col cell 1,1.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WebBrowser, WebTable, ActivateCell, 3, 4</usage>
           <description>
              <short_desc> 
                Click the cell at row,col cell 3,4.
              </short_desc>
           </description>
        </example>
     </examples></keyword>
     
  <keyword name="ASSIGNVARIABLECELLTEXT" 
           displayText="AssignVariableCellText" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to extract a particular cell value and assign 
                it to the provided variable name.
              </short_desc>
              <detailed_desc>
               Note, if you supply the name of the variable and include the leading
               caret (^) symbol then the variable must be enclosed in quotes.
               Otherwise, that variable will be used like any other variable and the
               substituted value of that variable will be interpretted as the name
               of the variable you wish to use.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
	   <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070308" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc>
             The name of the variable to receive the property value.
              </short_desc> <detailed_desc>
               The name of the variable to receive the property value.
               Note, if you supply the name of the variable and include the leading
               caret (^) symbol then the variable must be enclosed in quotes.
               Otherwise, that variable will be used like any other variable and the
               substituted value of that variable will be interpretted as the name
               of the variable you wish to use.
              </detailed_desc> </description> </parameter>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification.
              </short_desc>
              <detailed_desc>
                RJ: Does not yet support using a unique row value in column 1 as a row identifier.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification.
              </short_desc>
              <detailed_desc>
                RJ: Does not yet support using a unique col header value as a column identifier.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, AssignVariableCellText, AVariableName</usage>
           <description> <short_desc>
             Assign the value of cell 1,1 to DDVariable ^AVariableName.
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, AssignVariableCellText, "AVariableName", 1 , 1 </usage>
           <description> <short_desc>
             Assign the value of cell 1,1 to DDVariable ^AVariableName.
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, AssignVariableCellText, "^AVariableName", ^row=4, ^col="5"</usage>
           <description> <short_desc>
             Assign the value of cell 4,5 to DDVariable ^AVariableName.
              </short_desc> 
              </description> </example>
        <example>
           <usage>C, SetVariableValues, ^AVariableName="NextVariableName" <br />
                  T, WebBrowser, WebTable, AssignVariableCellText, ^AVariableName, ^row="5", ^col=2</usage>
           <description> <short_desc>
             Assign the value of cell 5,2 to DDVariable ^NextVariableName.
              </short_desc> 
              </description> </example>
     </examples></keyword>

  <keyword name="VERIFYCELLTEXT" 
           displayText="VerifyCellText" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to verify a particular cell value.
              </short_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
	   <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070308" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>

       <parameters>
        <parameter name="BENCHVALUE" displayText="BenchValue" optional="NO">
           <description> <short_desc>
             The case-sensitive expected value for the specified cell.
              </short_desc></description> </parameter>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification.
              </short_desc>
              <detailed_desc>
                RJ: Does not yet support using a row value in Column 1 as a row identifier.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification.
              </short_desc>
              <detailed_desc>
                RJ: Does not yet support using a column header value as a column identifier.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellText, FirstCellValue</usage>
           <description> <short_desc>
             Compares the value of cell 1,1 to bench text "FirstCellValue".
              </short_desc> 
              <detailed_desc>
                  Default row and column indices substituted for missing parameters.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellText, "FirstCellValue", 1 , 1 </usage>
           <description> <short_desc>
             Compares the value of cell 1,1 to bench text "FirstCellValue".
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellText, "BenchValue", ^row=4, ^col="5"</usage>
           <description> <short_desc>
             Compares the value of cell 4,5 to bench text "BenchValue".
              </short_desc> 
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellText, "BenchData", ^row="5", ^col=2</usage>
           <description> <short_desc>
             Compares the value of cell 5,2 to bench text "BenchData".
              </short_desc> 
              </description> </example>
     </examples></keyword>
     
  <keyword name="VERIFYCELLTEXTCONTAINS" 
           displayText="VerifyCellTextContains" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to verify a particular cell value.
              </short_desc>
              <detailed_desc> 
                The value comparison is NOT case-sensitive and can be a substring.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
	   <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070308" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>

       <parameters>
        <parameter name="BENCHVALUE" displayText="BenchValue" optional="NO">
           <description> <short_desc>
                  The expected value for the specified cell.
              </short_desc>
              <detailed_desc>
                  The value can be a substring of the full expected 
                  value and is NOT case-sensitive.
              </detailed_desc>
           </description> </parameter>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification.
              </short_desc>
              <detailed_desc>
                RJ: Does not yet support using a unique row value in Column 1 as a row specifier.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification.
              </short_desc>
              <detailed_desc>
                RJ: Does not yet support using a unique column header value as a column specifier.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellTextContains, FirstCellValue</usage>
           <description> <short_desc>
             Matches the "FirstCellValue" value of cell 1,1 to bench text "FirstCellValue".
              </short_desc> 
              <detailed_desc>
                  In this case, they happen to be an exact match.  Default row and 
                  column indices are used for missing parameters.
              </detailed_desc>
           </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellTextContains, "firstcell", 1 , 1 </usage>
           <description> <short_desc>
             Matches the "FirstCellValue" value of cell 1,1 to bench text "firstcell".
              </short_desc>
              <detailed_desc>
                  "firstcell" is a valid substring match since it is not case-sensitive.
              </detailed_desc>
           </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellTextContains, "bench", ^row=4, ^col="5"</usage>
           <description> <short_desc>
             Matches the "BenchValue" value of cell 4,5 to bench text "bench".
              </short_desc>
              <detailed_desc>
                  "bench" is a valid substring match since it is not case-sensitive.<br />
              </detailed_desc>
           </description> </example>
     </examples></keyword>
     
  <keyword name="VERIFYCELLEDITABLE" 
           displayText="VerifyCellEditable" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Verifies whether the specified cell is editable.
              </short_desc>
              <detailed_desc> 
	        RJ: Invokes the "editCellAt" method on a specific cell.
		That method returns a boolean which is used for the verification.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20040206" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
	   <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070308" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="NO">
           <description> <short_desc>
	    The 1-based cell row in the row/col specification.
              </short_desc></description> </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc>
	       The 1-based cell column in the row/col specification.
              </short_desc>
          </description>
        </parameter>
        <parameter name="EXPECTEDVALUE" displayText="ExpectedValue" optional="NO">
           <description>
              <short_desc> 
	         The case-insensitive value we expect for the editable value ("true" or"false").
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellEditable, "2", "3", "true"</usage>
           <description> <short_desc>
                Verifies that the cell in 2,3 is editable.
              </short_desc> 
              </description> </example>
     </examples></keyword>
     
  <keyword name="SELECTCELLTEXTSPECIAL" 
           displayText="SelectCellTextSpecial" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
	        Holds down either key Control or Shift while making a cell selection
		with emulating either a Left or Right mouse click.
              </short_desc>
              <detailed_desc>
	        Special cell selection which can be used to select multiple rows.
              </detailed_desc>
       </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20040209" >
	       <libraryInfo name="CFHTMLTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
       </engines>

       <parameters>
        <parameter name="SPECIALKEY" displayText="SpecialKey" optional="NO">
           <description> <short_desc>
             The special key command used in the row selection.
	     For now, ownly "Control" and "Shift" are supported.
              </short_desc></description> </parameter>
        <parameter name="MOUSECLICK" displayText="MouseClick" optional="NO">
           <description>
              <short_desc> 
	        The type of mouse click needed.
		For now, ownly "Left" and "Right" are supported.
              </short_desc>
           </description>
        </parameter>
        <parameter name="ROW" displayText="Row" optional="NO">
           <description>
              <short_desc> 
	        The 1-based cell row in the row/col specification.
              </short_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
	        The 1-based cell column in the row/col specification.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellTextSpecial, Control, Left, 2, 3</usage>
           <description> <short_desc>
	     Performs a LeftClick on cell 2,3 while holding down the CONTROL key.
              </short_desc> 
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellTextSpecial, Shift, Left, 2, 3</usage>
           <description> <short_desc>
	     Performs a LeftClick on cell 2,3 while holding down the SHIFT key.
              </short_desc> 
              </description> </example>
     </examples></keyword>
    
    <!--#######################################################################-->
     
     <keyword name="SELECTCELL" 
           displayText="SelectCell" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Same as ClickCell.
              </short_desc>
              <detailed_desc> 
                Clicks on a particular row/column of the table. 
                The default location is Row=1, Col=1 unless either parameter 
                is specified otherwise.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110719" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>           
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row in the row/col specification.
              </short_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column in the row/col specification.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCell</usage>
           <description>
              <short_desc> 
                Click the cell at row,col cell 1,1.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCell, 3, 4</usage>
           <description>
              <short_desc> 
                Click the cell at row,col cell 3,4.
              </short_desc>
           </description>
        </example>
     </examples></keyword>
 
 	<keyword name="SELECTCELLCONTAINSTEXTFIND" 
           displayText="SelectCellContainsTextFind" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                  Attempts to select a particular cell by finding the row based on cell values.
              </short_desc>
              <detailed_desc>
                  This is the same as SelectFuzzyCellTextFind.<br/>
                  The row # for the cell is also assigned to a user-defined variable.
                  The parameter values are not case-sensitive, and can be substrings of the actual 
                  table values.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="VAR" displayText="Var" optional="NO">
           <description>
              <short_desc> 
                The variable which gets assigned the row found.
              </short_desc>
              <detailed_desc>
                The variable which gets assigned the row found. If not
                found then it will get a zero length string
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The 1-based cell column # or header value, identifying the column for the select.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.
                <p>
                These comparisons are not case-sensitive and can be substrings of the actual table text.
                </p>
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLN" displayText="ColN" optional="NO">
           <description>
              <short_desc> 
                A 1-based cell column #, or header value, identifying the column to locate the VALUEN below.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.  
                This must be accompanied by the next parameter, 'ValueN', and as many of the
                ColN/ValueN parameter pairs can be supplied as desired in order to match for a row 
                based on cell contents.
                <p>
                These comparisons are not case-sensitive and can be substrings of the actual table text.
                </p>
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VALUEN" displayText="ValueN" optional="NO">
           <description>
              <short_desc> 
                A Value to search for in the 'COLN' column
              </short_desc>
              <detailed_desc>
                The values are not case-sensitive and can be substrings of the actual table text.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellContainsTextFind, Variable, "Date","Time", "09:58 AM", "Change","Change #2","Revision", "2"</usage>
           <description> <short_desc>
                Selects the cell in the first row matching the colN/valueN values.
              </short_desc> 
              <detailed_desc>
                  Selects the "Date" cell in the row matching the colN/valueN
                  values: "Time"/"09:58 AM", "Change"/"Change #2", "Revision"/"2".
                  The variable 'Variable' will be assigned the matching row number.
                  <p>
                  These comparisons are not case-sensitive and can be substrings of the actual table text.
                  </p>
              </detailed_desc>
              </description> </example>
     </examples></keyword>
 
 	<keyword name="SELECTCELLTEXT" 
           displayText="SelectCellText" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to select a particular cell.
              </short_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification or a unique row value in column 1.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a cell value
                in column 1.  If no match is found, it will expect the value to be a valid 
                1-based row number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellText</usage>
           <description> <short_desc>
             Selects cell 1,1 in WebTable.
              </short_desc> 
              <detailed_desc>
                  Default row and column indices substituted for missing parameters.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellText, 1 , 1 </usage>
           <description> <short_desc>
             Selects cell 1,1 in WebTable.
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellText, 4, "Field5"</usage>
           <description> <short_desc>
             Selects cell 4, Field5 in WebTable.
              </short_desc> 
              <detailed_desc>
                  The column is determined by matching the text "Field5" to the 
                  field headers in the WebTable.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellText, "ADatum", 5</usage>
           <description> <short_desc>
             Selects cell ADatum,5 in WebTable.
              </short_desc> 
              <detailed_desc>
                  The row is determined by matching the text "ADatum" to the first cell in 
                  column 1 in the WebTable that contains "ADatum".
              </detailed_desc>
              </description> </example>
     </examples></keyword>     

  <keyword name="SELECTCELLTEXTFIND" 
           displayText="SelectCellTextFind" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                  Attempts to select a particular cell by finding the row based on cell values.
              </short_desc>
              <detailed_desc>
                  The row # for the cell is also assigned to a user-defined variable.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="VAR" displayText="Var" optional="NO">
           <description>
              <short_desc> 
                The variable which gets assigned the row found.
              </short_desc>
              <detailed_desc>
                The variable which gets assigned the row found. If not
                found then it will get a zero length string
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The 1-based cell column # or header value, identifying the column for the select.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLN" displayText="ColN" optional="NO">
           <description>
              <short_desc> 
                A 1-based cell column #, or header value, identifying the column to locate the VALUEN below.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.  
                This must be accompanied by the next parameter, 'ValueN', and as many of the
                ColN/ValueN parameter pairs can be supplied as desired in order to match for a row 
                based on cell contents.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VALUEN" displayText="ValueN" optional="NO">
           <description>
              <short_desc> 
                A Value to search for in the 'COLN' column
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, SelectCellTextFind, Variable, "Date","Time", "09:58 AM", "Change","Change #2","Revision", "2"</usage>
           <description> <short_desc>
                Selects the cell in the first row matching the colN/valueN values.
              </short_desc> 
              <detailed_desc>
                  Selects the "Date" cell in the row matching the colN/valueN
                  values: "Time"/"09:58 AM", "Change"/"Change #2", "Revision"/"2".
                  The variable 'Variable' will be assigned the matching row number.
              </detailed_desc>
              </description> </example>
     </examples></keyword>
     
  <keyword name="SELECTFUZZYCELLTEXTFIND" 
           displayText="SelectFuzzyCellTextFind" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to select a particular cell by finding the row based on fuzzy cell values.
              </short_desc>
              <detailed_desc> 
                This is the same as SelectCellContainsTextFind.<br/>
                "Fuzzy" matches come into play when using header field text 
                or column1 row text to specify row and column identities.  The 
                specified column/cell text does NOT have to be an exact match--it is NOT 
                case-sensitive and can be just a substring of the desired value 
                in the table.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="VAR" displayText="Var" optional="NO">
           <description>
              <short_desc> 
                The variable which gets assigned the row found.
              </short_desc>
              <detailed_desc>
                The variable which gets assigned the row found. If not
                found then it will get a zero length string
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or fuzzy column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to fuzzy-match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLN" displayText="ColN" optional="NO">
           <description>
              <short_desc> 
                A 1-based cell column # in the row/col specification or fuzzy column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to fuzzy-match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.  This must be accompanied by
                the next parameter, 'ValueN', and as many of the
                ColN/ValueN parameter pairs can be supplied as desired
                in order to match for a row based on cell contents.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VALUEN" displayText="ValueN" optional="NO">
           <description>
              <short_desc> 
                A Value to search for in a cell under the 'ColN' column
              </short_desc>
              <detailed_desc>
                A Value to search for in a cell under the 'ColN' column
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, SelectFuzzyCellTextFind, Variable, "Da","Ti", "09:58 AM", "Cha","Change #2","Rev", "2"</usage>
           <description> <short_desc>
                Selects the cell in the row matching the colN/valueN values.
              </short_desc> 
              <detailed_desc>
                  Selects the "Da" cell in the row fuzzy-matching the colN/valueN
                  values: "Ti"/"09:58 AM", "Cha"/"Change #2", "Rev"/"2".
                  The variable 'Variable' will be assigned the
                  matching row number.
              </detailed_desc>
              </description> </example>
     </examples></keyword>
     
  <keyword name="SELECTFUZZYCELLTEXT" 
           displayText="SelectFuzzyCellText" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to select a particular cell.
              </short_desc>
              <detailed_desc> 
                "Fuzzy" matches come into play when using header field text 
                or column1 row text to specify row and column identities.  The 
                specified text does NOT have to be an exact match--it is NOT 
                case-sensitive and can be just a substring of the desired value 
                in the table.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification or a unique row value in column 1.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a cell value
                in column 1.  If no match is found, it will expect the value to be a valid 
                1-based row number.  This command allows for case-insensitive substring 
                matches for row text when used in place of an actual row index.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.  This command allows for case-insensitive substring 
                matches for header text when used in place of an actual column index.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, SelectFuzzyCellText</usage>
           <description> <short_desc>
             Selects cell 1,1 in WebTable.
              </short_desc> 
              <detailed_desc>
                  Default row and column indices substituted for missing parameters.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectFuzzyCellText, 1 , 1 </usage>
           <description> <short_desc>
             Selects cell 1,1 in WebTable.
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectFuzzyCellText, 4, "field5"</usage>
           <description> <short_desc>
             Selects cell 4, "Field5" in WebTable.
              </short_desc> 
              <detailed_desc>
                  The column is determined by case-insensitive comparing the text "field5" to the 
                  field headers in the WebTable.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, SelectFuzzyCellText, "datum", 5</usage>
           <description> <short_desc>
             Selects cell ADatum,Field5 in WebTable.
              </short_desc> 
              <detailed_desc>
                  The row is determined by seeking the first cell in column 1 in the 
                  WebTable that contains substring "datum".  The "5" also shows up 
                  as a substring match to the column header "Field5".  So be cautious, here.
              </detailed_desc>
              </description> </example>
     </examples></keyword>     







  	<keyword name="VERIFYFUZZYCELLTEXTCONTAINS" 
           displayText="VerifyFuzzyCellTextContains" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to verify a particular cell value.
              </short_desc>
              <detailed_desc> 
                "Fuzzy" matches come into play when using header field text 
                or column1 row text to specify row and column identities.  The 
                specified text does NOT have to be an exact match--it is NOT 
                case-sensitive and can be just a substring of the desired value 
                in the table.<br />
                The Benchmark comparison is NOT case-sensitive and can be a substring.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="BENCHVALUE" displayText="BenchValue" optional="NO">
           <description> <short_desc>
                  The expected value for the specified cell.
              </short_desc>
              <detailed_desc>
                  The value can be a substring of the full expected 
                  value and is NOT case-sensitive.
              </detailed_desc>
           </description> </parameter>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification or a unique row value in column 1.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a cell value
                in column 1.  If no match is found, it will expect the value to be a valid 
                1-based row number.  This command allows for case-insensitive substring 
                matches for row text when used in place of an actual row index.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.  This command allows for case-insensitive substring 
                matches for header text when used in place of an actual column index.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellTextContains, FirstCellValue</usage>
           <description> <short_desc>
             Matches the "FirstCellValue" value of cell 1,1 in WebTable to bench text "FirstCellValue".
              </short_desc> 
              <detailed_desc>
                  Default row and column indices substituted for missing parameters.<br />
                  This also happens to be an exact text match.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellTextContains, "firstcell", 1 , 1 </usage>
           <description> <short_desc>
             Matches the "FirstCellValue" value of cell 1,1 in WebTable to bench text "firstcell".
              </short_desc> 
              <detailed_desc>
                  "firstcell" is a matching substring of the retrieved cell value.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellTextContains, bench, 4, "field5"</usage>
           <description> <short_desc>
             Matches the "ABenchValue" value of cell 4, "Field5" in WebTable to bench text "bench".
              </short_desc> 
              <detailed_desc>
                  The column is determined by case-insensitive comparing the text "field5" to the 
                  field headers in the WebTable.  "bench" is a matching substring of the retrieved cell value.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellText, bench, "datum", 5</usage>
           <description> <short_desc>
             Matches the "ABenchValue" value of cell ADatum,Field5 in WebTable to bench text "bench".
              </short_desc> 
              <detailed_desc>
                  The row is determined by seeking the first cell in column 1 in the 
                  WebTable that contains substring "datum".  The "5" also shows up 
                  as a substring match to the column header "Field5".  So be cautious, here.<br />
                  "bench" is a matching substring of the retrieved cell value.
              </detailed_desc>
              </description> </example>
     </examples></keyword>
     
  	<keyword name="VERIFYCELLTEXTFIND" 
           displayText="VerifyCellTextFind" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to verify a particular cell by finding the row based on cell values.
              </short_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="BENCHVALUE" displayText="BenchValue" optional="NO">
           <description> <short_desc>
             The case-sensitive expected value for the specified cell.
              </short_desc></description> </parameter>
        <parameter name="VAR" displayText="Var" optional="NO">
           <description>
              <short_desc> 
                The variable which gets assigned the row found.
              </short_desc>
              <detailed_desc>
                The variable which gets assigned the row found. If not
                found then it will get a zero length string
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLN" displayText="ColN" optional="NO">
           <description>
              <short_desc> 
                A 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.  This must be accompanied by
                the next parameter, 'ValueN', and as many of the
                ColN/ValueN parameter pairs can be supplied as desired
                in order to match for a row based on cell contents.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VALUEN" displayText="ValueN" optional="NO">
           <description>
              <short_desc> 
                A Value to search for in a cell under the 'ColN' column
              </short_desc>
              <detailed_desc>
                A Value to search for in a cell under the 'ColN' column
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyCellTextFind, "10/09/2003", Variable, "Date","Time", "09:58 AM", "Change","Change #2","Revision", "2"</usage>
           <description> <short_desc>
                Verifies the cell in the row matching the colN/valueN values.
              </short_desc> 
              <detailed_desc>
                  Verifies the "Date" cell in the row matching the colN/valueN
                  values: "Time"/"09:58 AM", "Change"/"Change #2", "Revision"/"2" is equal "10/09/2003".
                  The variable 'Variable' will be assigned the
                  matching row number.
              </detailed_desc>
              </description> </example>
     </examples></keyword>
     
  <keyword name="VERIFYFUZZYCELLTEXTFIND" 
           displayText="VerifyFuzzyCellTextFind" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to verify a particular cell by finding the row based on fuzzy cell values.
              </short_desc>
              <detailed_desc> 
                "Fuzzy" matches come into play when using header field text 
                or column1 row text to specify row and column identities.  The 
                specified column/cell text does NOT have to be an exact match--it is NOT 
                case-sensitive and can be just a substring of the desired value 
                in the table.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="BENCHVALUE" displayText="BenchValue" optional="NO">
           <description> <short_desc>
             The case-sensitive expected value for the specified cell.
              </short_desc></description> </parameter>
        <parameter name="VAR" displayText="Var" optional="NO">
           <description>
              <short_desc> 
                The variable which gets assigned the row found.
              </short_desc>
              <detailed_desc>
                The variable which gets assigned the row found. If not
                found then it will get a zero length string
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or fuzzy column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to fuzzy-match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLN" displayText="ColN" optional="NO">
           <description>
              <short_desc> 
                A 1-based cell column # in the row/col specification or fuzzy column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to fuzzy-match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.  This must be accompanied by
                the next parameter, 'ValueN', and as many of the
                ColN/ValueN parameter pairs can be supplied as desired
                in order to match for a row based on cell contents.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VALUEN" displayText="ValueN" optional="NO">
           <description>
              <short_desc> 
                A Value to search for in a cell under the 'ColN' column
              </short_desc>
              <detailed_desc>
                A Value to search for in a cell under the 'ColN' column
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellTextFind, "10/09/2003", Variable, "Da","Ti", "09:58 AM", "Cha","Change #2","Rev", "2"</usage>
           <description> <short_desc>
                Verifies the cell in the row matching the colN/valueN values.
              </short_desc> 
              <detailed_desc>
                  Verifies the "Da" cell in the row fuzzy-matching the colN/valueN
                  values: "Ti"/"09:58 AM", "Cha"/"Change #2", "Rev"/"2" is equal "10/09/2003".
                  The variable 'Variable' will be assigned the
                  matching row number.
              </detailed_desc>
              </description> </example>
     </examples></keyword>
     
     <keyword name="VERIFYCOLUMNLABEL" 
           displayText="VerifyColumnLabel" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to verify a particular column's label when given a column number.
              </short_desc>
              <detailed_desc> 
                Verifies a column label when given the column number.  It currently
		does NOT work with columns with multi-line names.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="COLLABEL" displayText="ColLabel" optional="NO">
           <description> <short_desc>
             The case-insensitive expected value for the specified column label.
              </short_desc>
           </description> </parameter>
        <parameter name="COLNUMBER" displayText="ColNumber" optional="NO">
           <description>
              <short_desc> 
                The 1-based column number of the label that needs verified.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyColumnLabel, "Foo", "4"</usage>
           <description> <short_desc>
                Verifies that the 4th column in the table has the label "Foo".
              </short_desc> 
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyColumnLabel, "Foo SecondFoo", "4"</usage>
           <description> <short_desc>
                Verifies that the 4th column in the table has the label "Foo SecondFoo"
              </short_desc>
              <detailed_desc>
                  This will verify correctly if the column label is all on one line, but if
		  "Foo" is on one line, and "SecondFoo" is on a separate line, this verification
		  will not work.
              </detailed_desc>
              </description> </example>
     </examples></keyword> 

  	<keyword name="VERIFYFUZZYCELLTEXT" 
           displayText="VerifyFuzzyCellText" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Attempts to verify a particular cell value.
              </short_desc>
              <detailed_desc> 
                "Fuzzy" matches come into play when using header field text 
                or column1 row text to specify row and column identities.  The 
                specified text does NOT have to be an exact match--it is NOT 
                case-sensitive and can be just a substring of the desired value 
                in the table.<br />
                The Benchmark must be exact, however.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110824" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="BENCHVALUE" displayText="BenchValue" optional="NO">
           <description> <short_desc>
             The case-sensitive expected value for the specified cell.
              </short_desc></description> </parameter>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification or a unique row value in column 1.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a cell value
                in column 1.  If no match is found, it will expect the value to be a valid 
                1-based row number.  This command allows for case-insensitive substring 
                matches for row text when used in place of an actual row index.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.  This command allows for case-insensitive substring 
                matches for header text when used in place of an actual column index.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellText, FirstCellValue</usage>
           <description> <short_desc>
             Compares the value of cell 1,1 in WebTable to bench Text "FirstCellValue".
              </short_desc> 
              <detailed_desc>
                  Default row and column indices substituted for missing parameters.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellText, "FirstCellValue", 1 , 1 </usage>
           <description> <short_desc>
             Compares the value of cell 1,1 in WebTable to bench text "FirstCellValue".
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellText, ABenchValue, 4, "field5"</usage>
           <description> <short_desc>
             Compares the value of cell 4, "Field5" in WebTable to bench text "ABenchValue".
              </short_desc> 
              <detailed_desc>
                  The column is determined by case-insensitive comparing the text "field5" to the 
                  field headers in the WebTable.
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, VerifyFuzzyCellText, ^ABenchValue, "datum", 5</usage>
           <description> <short_desc>
             Compares the value of cell ADatum,Field5 in WebTable to bench text in variable ^ABenchValue.
              </short_desc> 
              <detailed_desc>
                  The row is determined by seeking the first cell in column 1 in the 
                  WebTable that contains substring "datum".  The "5" also shows up 
                  as a substring match to the column header "Field5".  So be cautious, here.
              </detailed_desc>
              </description> </example>
     </examples></keyword>     

  <keyword name="CAPTURERANGETOFILE" 
           displayText="CaptureRangeToFile" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Saves a range of values to the specified file.
              </short_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110719" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>           
       </engines>

       <parameters>
        <parameter name="FILENAME" displayText="FileName" optional="NO">
           <description> <short_desc>
             The name of the file to receive the data.
              </short_desc> <detailed_desc>
                  The data will be output as TAB delimited values.
                  The filename is usually just the short filename.ext 
                  and as such will be stored in the project's Datapool\Test 
                  directory.  <br />
                  If you specify a relative path, the path 
                  is relative to the project's root directory.  "Datapool" 
                  is a subdirectory of that root directory.<br />
                  Any specified full or relative path must already exist.
              </detailed_desc> </description> </parameter>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification or a unique row value in column 1.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a cell value
                in column 1.  If no match is found, it will expect the value to be a valid 
                1-based row number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="ROWS" displayText="Rows" optional="YES" default="">
           <description>
              <short_desc> 
                The number of rows to capture.
              </short_desc>
              <detailed_desc>
                If there are not enough rows to satisfy the request then we 
                will obviously only capture up to the last available row.<br />
                If the parameter is not provided, all subsequent rows from 
                the specified starting row are captured.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLUMNS" displayText="Columns" optional="YES" default="">
           <description>
              <short_desc> 
                The number of columns to capture.
              </short_desc>
              <detailed_desc>
                If there are not enough columns to satisfy the request then we 
                will obviously only capture up to the last available column.<br />
                If the parameter is not provided, all subsequent columns from 
                the specified starting column are captured.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="FILEENCODING" displayText="FileEncoding" optional="YES" default="">
           <description> <short_desc>
             Specify a character encoding to be used when saving data to a file.
			 If it is not specified, the system default file encoding will be used.
             The encoding should be a valid string supported by Java; if it is not valid,
             the system default file encoding will be used instead.
            </short_desc> </description>
        </parameter>        
        <parameter name="FILTERMODE" displayText="FilterMode" optional="YES" default="">
           <description>
              <short_desc> 
                (FUTURE) A file filter to use when processing the text values.
              </short_desc>
           </description>
        </parameter>
        <parameter name="FILTEROPTIONS" displayText="FilterOptions" optional="YES" default="">
           <description>
              <short_desc> 
                (FUTURE) Filter options to use with the file filter.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureRangeToFile, AFileName.txt</usage>
           <description> <short_desc>
                  Saves the entire table into &gt;project&gt;\Datapool\Test\AFileName.txt
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureRangeToFile, AFileName.txt, 1 , 1 </usage>
           <description> <short_desc>
                  Saves the entire table into &lt;project&gt;\Datapool\Test\AFileName.txt
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureRangeToFile, AFileName.txt, 4, "Field5", 2, 5</usage>
           <description> <short_desc>
                  Saves a 2 rows by 5 columns range of cells starting at cell 4, Field5.
              </short_desc> 
              <detailed_desc>
                  The starting column is determined by matching the text "Field5" to the 
                  field headers in the WebTable.  The values are saved into 
                  &lt;project&gt;\Datapool\Test\AFileName.txt
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureRangeToFile, AFileName.txt, "ADatum", 5, , 2</usage>
           <description> <short_desc>
                  Saves a range of all remaining rows by 2 columns wide starting at cell "ADatum", 5.
              </short_desc> 
              <detailed_desc>
                  The starting row is determined by matching the text "ADatum" to the first cell in 
                  column 1 in the WebTable that contains "ADatum".  Since no ROWS parameter 
                  was provided, all subsequest rows from the 2 columns are captured.
                  The values are saved into &lt;project&gt;\Datapool\Test\AFileName.txt
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureRangeToFile, AFileName.txt, , , , , "UTF-8"</usage>
           <description> <short_desc>
                  Saves the entire table into &gt;project&gt;\Datapool\Test\AFileName.txt
              </short_desc> 
              <detailed_desc>
      			  Saves the entire table into &gt;project&gt;\Datapool\Test\AFileName.txt<BR/>
      			  Writing file with "UTF-8" encoding.
              </detailed_desc>
           </description> </example>            
     </examples></keyword>
     
  <keyword name="CAPTUREFUZZYRANGETOFILE" 
           displayText="CaptureFuzzyRangeToFile" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                Saves a range of values to the specified file.
              </short_desc>
              <detailed_desc>
                "Fuzzy" matches come into play when using header field text 
                or column1 row text to specify row and column identities.  The 
                specified text does NOT have to be an exact match--it is NOT 
                case-sensitive and can be just a substring of the desired value 
                in the table.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080407" >
	       <libraryInfo name="CFHtmlTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="HTMLTABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110719" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>           
       </engines>

       <parameters>
        <parameter name="FILENAME" displayText="FileName" optional="NO">
           <description> <short_desc>
             The name of the file to receive the data.
              </short_desc> <detailed_desc>
                  The data will be output as TAB delimited values.
                  The filename is usually just the short filename.ext 
                  and as such will be stored in the project's Datapool\Test 
                  directory.  <br />
                  If you specify a relative path, the path 
                  is relative to the project's root directory.  "Datapool" 
                  is a subdirectory of that root directory.<br />
                  Any specified full or relative path must already exist.
              </detailed_desc> </description> </parameter>
        <parameter name="ROW" displayText="Row" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell row # in the row/col specification or a unique row 
                value in column 1.  
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a cell value
                in column 1.  If no match is found, it will expect the value to be a valid 
                1-based row number.  This command allows for case-insensitive 
                substring matches for row text when used in place of an actual row index.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="YES" default="1">
           <description>
              <short_desc> 
                The 1-based cell column # in the row/col specification or column header text.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 
                1-based column number.  This command allows for case-insensitive 
                substring matches for header text when used in place of an actual column index.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="ROWS" displayText="Rows" optional="YES" default="">
           <description>
              <short_desc> 
                The number of rows to capture.
              </short_desc>
              <detailed_desc>
                If there are not enough rows to satisfy the request then we 
                will obviously only capture up to the last available row.<br />
                If the parameter is not provided, all subsequent rows from 
                the specified starting row are captured.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLUMNS" displayText="Columns" optional="YES" default="">
           <description>
              <short_desc> 
                The number of columns to capture.
              </short_desc>
              <detailed_desc>
                If there are not enough columns to satisfy the request then we 
                will obviously only capture up to the last available column.<br />
                If the parameter is not provided, all subsequent columns from 
                the specified starting column are captured.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="FILEENCODING" displayText="FileEncoding" optional="YES" default="">
           <description> <short_desc>
             Specify a character encoding to be used when saving data to a file.
			 If it is not specified, the system default file encoding will be used.
             The encoding should be a valid string supported by Java; if it is not valid,
             the system default file encoding will be used instead.
            </short_desc> </description>
        </parameter>
        <parameter name="FILTERMODE" displayText="FilterMode" optional="YES" default="">
           <description>
              <short_desc> 
                (FUTURE) A file filter to use when processing the text values.
              </short_desc>
           </description>
        </parameter>
        <parameter name="FILTEROPTIONS" displayText="FilterOptions" optional="YES" default="">
           <description>
              <short_desc> 
                (FUTURE) Filter options to use with the file filter.
              </short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureFuzzyRangeToFile, AFileName.txt</usage>
           <description> <short_desc>
                  Saves the entire table into &lt;project&gt;\Datapool\Test\AFileName.txt
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureFuzzyRangeToFile, AFileName.txt, 1 , 1 </usage>
           <description> <short_desc>
                  Saves the entire table into &lt;project&gt;\Datapool\Test\AFileName.txt
              </short_desc> </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureFuzzyRangeToFile, AFileName.txt, 4, "field5", 2, 5</usage>
           <description> <short_desc>
                  Saves a 2 rows by 5 columns range of cells starting at cell 4, Field5.
              </short_desc> 
              <detailed_desc>
                  The starting column is determined by fuzzy matching the text "field5" to the 
                  field headers in the WebTable.  The captured table values are saved into 
                  &lt;project&gt;\Datapool\Test\AFileName.txt
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureFuzzyRangeToFile, AFileName.txt, "datum", 5, , 2</usage>
           <description> <short_desc>
                  Saves a range of all remaining rows by 2 columns wide starting at cell "ADatum", "Field5".
              </short_desc> 
              <detailed_desc>
                  The starting row is determined by seeking the first cell in column 1 in the 
                  WebTable that contains substring "datum".  The "5" also shows up 
                  as a substring match to the column header "Field5".  So be cautious, here.
                  No ROWS parameter was provided. Thus, all subsequest rows from the 2 columns are captured.
                  The values are saved into &lt;project&gt;\Datapool\Test\AFileName.txt
              </detailed_desc>
              </description> </example>
        <example>
           <usage>T, WebBrowser, WebTable, CaptureFuzzyRangeToFile, AFileName.txt, , , , , "UTF-8"</usage>
           <description> <short_desc>
                  Saves the entire table into &lt;project&gt;\Datapool\Test\AFileName.txt
              </short_desc> 
              <detailed_desc>
                  Saves the entire table into &lt;project&gt;\Datapool\Test\AFileName.txt<BR/>
                  Writing file with "UTF-8" encoding.
              </detailed_desc>
              </description> </example>
     </examples></keyword>

     
  <keyword name="ASSIGNCELLTEXTROW" 
           displayText="AssignCellTextRow" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
      <description>
              <short_desc> 
                  Assigns a user-defined variable a row # based on matching cell values.
              </short_desc>
              <detailed_desc>
                  The cell value from the specified column in the found row is also assigned to 
                  a variable derived from the user-defined variable name.
              </detailed_desc>
           </description>
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080416" >
	       <libraryInfo name="CFTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="JAVATABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110719" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>           
       </engines>
       <parameters>
        <parameter name="VAR" displayText="Var" optional="NO">
           <description>
              <short_desc> 
                The variable which gets assigned the row found.
              </short_desc>
              <detailed_desc>
                The variable which gets assigned the row found. If not found then it will get a zero 
                length string.  This variable also is the rootname for the variable that will receive 
                the cell text value once the row # is identified.  The cell value variable will be this 
                user-defined variable +".Value".
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The 1-based cell column # or header value, identifying the column for extracting the 
                cell value into variable +".Value".
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLN" displayText="ColN" optional="NO">
           <description>
              <short_desc> 
                A 1-based cell column #, or header value, identifying the column to locate the VALUEN below.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.  
                This must be accompanied by the next parameter, 'ValueN', and as many of the
                ColN/ValueN parameter pairs can be supplied as desired in order to match for a row 
                based on cell contents.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VALUEN" displayText="ValueN" optional="NO">
           <description>
              <short_desc> 
                A Value to search for in the 'COLN' column
              </short_desc>
              <detailed_desc>
                These values are case-sensitive and must consititute an exact match.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, AssignCellTextRow, Variable, "Date","Time", "09:58 AM", "Change","Change #2","Revision", "2"</usage>
           <description> <short_desc>
                Assigns the variable "Variable" the first row # satisfying the matching colN/valueN values.
              </short_desc> 
              <detailed_desc>
                  Also assigns variable "Variable.Value" the cell value found in the "Date" column at the 
                  matching row.
              </detailed_desc>
              </description> </example>
     </examples></keyword>
     
  <keyword name="ASSIGNCELLCONTAINSTEXTROW" 
           displayText="AssignCellContainsTextRow" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
      <description>
              <short_desc> 
                  Assigns a user-defined variable a row # based on partial matching cell values.
              </short_desc>
              <detailed_desc>
                  The cell value from the specified column in the found row is also assigned to 
                  a variable derived from the user-defined variable name.
                  <p>
                  The cell value comparisons are not case-senstive, and provided values can be substrings 
                  of the actual cell value in the table.
                  </p>
              </detailed_desc>
           </description>
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080416" >
	       <libraryInfo name="CFTable" 
                            doc="org/safs/rational/CFTable.html" 
                            sourcecode="org.safs.rational.CFTable.java" 
                            class="JAVATABLE" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20110719" >
	    	<libraryInfo name="CFHTMLTable" 
			doc="org/safs/selenium/CFHTMLTable.html" 
			sourcecode="org.safs.selenium.CFHTMLTable.java" 
			class="CFHTMLTable" />
            </engine>
       </engines>
       <parameters>
        <parameter name="VAR" displayText="Var" optional="NO">
           <description>
              <short_desc> 
                The variable which gets assigned the row found.
              </short_desc>
              <detailed_desc>
                The variable which gets assigned the row found. If not found then it will get a zero 
                length string.  This variable also is the rootname for the variable that will receive 
                the cell text value once the row # is identified.  The cell value variable will be the  
                user-defined variable +".Value".
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COL" displayText="Col" optional="NO">
           <description>
              <short_desc> 
                The 1-based cell column # or header value, identifying the column for extracting the 
                cell value into variable +".Value".
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.
                  <p>
                  The field header comparisons are not case-senstive, and provided values can be substrings 
                  of the actual header value in the table.
                  </p>
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="COLN" displayText="ColN" optional="NO">
           <description>
              <short_desc> 
                A 1-based cell column #, or header value, identifying the column to locate the VALUEN below.
              </short_desc>
              <detailed_desc>
                The routine will first attempt to match any provided value with a field header. 
                If no match is found, it will expect the value to be a valid 1-based column number.  
                This must be accompanied by the next parameter, 'ValueN', and as many of the
                ColN/ValueN parameter pairs can be supplied as desired in order to match for a row 
                based on cell contents.
                <p>
                The field header comparisons are not case-senstive, and provided values can be substrings 
                of the actual header value in the table.
                </p>
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VALUEN" displayText="ValueN" optional="NO">
           <description>
              <short_desc> 
                A Value to search for in the 'COLN' column.
              </short_desc>
              <detailed_desc>
                These values can be partial substrings and are not case-sensitive.
              </detailed_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>T, WebBrowser, WebTable, AssignCellContainsTextRow, Variable, "Date","Time", "09:58 AM", "Change","Change #2","Revision", "2"</usage>
           <description> <short_desc>
                Assigns the variable "Variable" the first row # satisfying the matching colN/valueN values.
              </short_desc> 
              <detailed_desc>
                  Also assigns variable "Variable.Value" the cell value found in the "Date" column at the 
                  matching row.
              </detailed_desc>
              </description> </example>
     </examples></keyword>

              
</keywords>
</keyword_library>
