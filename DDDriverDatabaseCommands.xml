<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE keyword_library SYSTEM "keyword_library.dtd">
<keyword_library>
  <libraryType type="DRIVER">
  </libraryType>
  <libraryInfo class="DATABASE" doc="DDDriverDatabaseCommands.htm" name="DDDriverDatabaseCommands" sourcecode="DDDriverDatabaseCommands.sbl">
    <description>
      <short_desc>
        Driver Database Commands for the Cycle, Suite, and Step drivers
      </short_desc>
      <detailed_desc>
        <p>
          This keyword library provides Driver Database Commands that can be used by all three DDE Drivers--CycleDriver, SuiteDriver, and StepDriver.  That means they can be used in any keyword driven test tables regardless of the test tables level--Cycle, Suite, or Step.
        </p>
        <p>
          Each different driver command has different parameters as described in its documentation.  For reference, the first fields of ALL Driver Command test records are defined below:
        </p>
        <p>
          Most all commands here require a data source name, Since this driver
          uses jdbc, then a format like "jdbc:odbc:drivername" is
          usually supplied for that parameter.  Another examples could
          be: jdbc:oracle:thin:@machine:1111:DBNAME <br/>
          If the jdbc:odbc: is omitted, then the 'drivername' is
          assumed to be Sun's jdbc-odbc bridge
          (sun.jdbc.odbc.JdbcOdbcDriver) and that string (jdbc:odbc:)
          is automatically prepended. 
        </p>
        <p>
          Notice that for all of the commands here which accept the ADBAlias and
          ATableAlias parameters, that they are not used.  They are
          only there because there for compatibility with the
          Component Function versions of these commands (CFDatabase).
        </p>
        <p>
          In order to specify the driver, a 'setJdbcDriver' command
          can be used once at the beginning
        </p>
        <dl>
          <dd>
            Field #1
          </dd>
          <dt>
            The "C" = DRIVER COMMAND record type specifier.
          </dt>
          <dd>
            Field #2
          </dd>
          <dt>
            The Driver Command keyword.
          </dt>
        </dl>
        <p>
          Examples:
        </p>
        <code>
          C, setJdbcDriver, "sun.jdbc.odbc.JdbcOdbcDriver"
          C, setJdbcDriver, "oracle.jdbc.driver.OracleDriver"
        </code>
        <p>
          Driver Command parameters must be placed in the test record in the field position specified in the documentation. Some parameters are optional and can be skipped.   Optional parameters can only be skipped if all subsequent optional paramaters are also skipped.
        </p>
        <p>
          Example:
        </p>
        <code>
          c, deleteDBTableRecords, ADBAlias, ATableAlias, DBTableName, DBQueryCond, DBSourceName
        </code>
        <p>
          The above example skips the UserId, Password, and SQLStatus (they are not even included)
        </p>
        <dl>
          <dd>
            <a href="DDDriverCommands.htm" target="_blank">
              DDDriverCommands
            </a>
          </dd>
        </dl>
      </detailed_desc>
    </description>
  </libraryInfo>
  <runtime engine="RobotJ" platform="Any" version="Any">
  </runtime>
    <keywords>
    
    <keyword name="SETJDBCDRIVER" 
             displayText="SetJdbcDriver" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description><short_desc> 
                 set Jdbc Driver
              </short_desc>
              <detailed_desc>
                 sets a JDBC driver, can be called more than once with
                 multiple drivers.
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="DRIVERCLASSNAME" displayText="DriverClassName" optional="NO">
           <description>
              <short_desc> 
                 Name of the driver class
              </short_desc></description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetJdbcDriver, "oracle.jdbc.driver.OracleDriver"</usage>
           <description>
              <short_desc> 
                 sets driver oracle.jdbc.driver.OracleDriver
              </short_desc>
              <detailed_desc> 
                 sets driver oracle.jdbc.driver.OracleDriver using Class.forName
              </detailed_desc></description></example>
     </examples></keyword>

    <keyword name="VERIFYDBVALUE" 
             displayText="VerifyDBValue" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description><short_desc> 
                 Verifies the case-sensitive value of a field in a database table
              </short_desc>
              <detailed_desc>
                 Verifies the case-sensitive value of a field in a database table.
                 <p>
                 To return the value, it executes a SQL query sentence using a
                 data source to connect to the data base (using a 'SELECT').
                 </p><p>
                 A table and field name are required. You also have to specify data source name,
                 user id, password, and the expected value.
                 </p><p>
                 If the query returns more than one record, the returned value
                 is the corresponding to the first one, unless the field name
                 be something like COUNT(*) or SUM(InvoiceTot).
                 </p><p>
                 A query condition can be included. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br /> 
                 Including "where" in the expression itself is optional.  It will 
                 be prefixed to the expression if it is not provided.
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="DBFIELDNAME" displayText="DBFieldName" optional="NO">
           <description>
              <short_desc> 
                 Name of the FIELD within DBTableName used in the verification
              </short_desc></description> </parameter>

        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName</short_desc>
           </description></parameter>

        <parameter name="DBQUERYCOND" displayText="DBQueryCond" optional="NO">
           <description><short_desc> 
                 Expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
              </short_desc>
              <detailed_desc> 
                 A query condition can be included, if not then ""
                 must be supplied. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br />
                 "where" will be added to any expression if it is not provided.
              </detailed_desc></description></parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>

        <parameter name="USERID" displayText="UserID" optional="NO">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required, if
                 not then "" must be supplied).
              </short_desc></description></parameter>

        <parameter name="PASSWORD" displayText="Password" optional="NO">
           <description><short_desc> 
                 Password for accessing the Datasource (if required, if
                 not then "" must be supplied).
              </short_desc></description></parameter>

        <parameter name="EXPECTEDVALUE" displayText="ExpectedValue" optional="NO">
           <description> <short_desc> 
                 Benchmark value to compare against retrieved DBFieldName value
              </short_desc></description></parameter>

        <parameter name="SQLSTATUS" displayText="SQLStatus" optional="YES">
           <description> <short_desc> 
                 SQL status code as a result of executing the query gets stored in this variable
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, VerifyDBValue, ADBAlias, ATableAlias, LASTNAME, Clients, "CID = 25", ContactDatabase, "", "", "Smith", sqlStatusVariable</usage>
           <description>
              <short_desc> 
                 Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE contains "Smith" where the CID field = 25.
              </short_desc>
              <detailed_desc> 
                  Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE contains "Smith" for the first record 
                  whose CID field = 25.  No UserID or Password was required for this access.
              </detailed_desc></description></example>
     </examples></keyword>

  <keyword name="VERIFYDATABASEVALUE" 
           displayText="VerifyDatabaseValue" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
                 Verifies the case-sensitive value of a field in a database table
              </short_desc>
              <detailed_desc>
                 Verifies the case-sensitive value of a field in a database table.
                 <p>
                 To return the value, it executes a SQL query sentence using a
                 data source to connect to the data base (using a 'SELECT'). 
                 </p><p>
                 A table and field name are required. You also have to specify data source name,
                 user id, password, and the expected value.
                 </p><p>
                 If the query returns more than one record, the returned value
                 is the corresponding to the first one, unless the field name
                 be something like COUNT(*) or SUM(InvoiceTot).
                 </p><p>
                 A query condition can be included. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br /> 
                 Including "where" in the expression itself is optional.  It will 
                 be prefixed to the expression if it is not provided.
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBFIELDNAME" displayText="DBFieldName" optional="NO">
           <description>
              <short_desc> 
                 Name of the FIELD within DBTableName used in the verification
              </short_desc></description> </parameter>

        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName</short_desc>
           </description></parameter>

        <parameter name="DBQUERYCOND" displayText="DBQueryCond" optional="NO">
           <description><short_desc> 
                 Expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
              </short_desc>
              <detailed_desc> 
                 A query condition can be included, if not then ""
                 must be supplied. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br />
                 "where" will be added to any expression if it is not provided.
              </detailed_desc></description></parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>

        <parameter name="USERID" displayText="UserID" optional="NO">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required, if
                 not then "" must be supplied).
              </short_desc></description></parameter>

        <parameter name="PASSWORD" displayText="Password" optional="NO">
           <description><short_desc> 
                 Password for accessing the Datasource (if required, if
                 not then "" must be supplied).
              </short_desc></description></parameter>

        <parameter name="EXPECTEDVALUE" displayText="ExpectedValue" optional="NO">
           <description> <short_desc> 
                 Benchmark value to compare against retrieved DBFieldName value
              </short_desc></description></parameter>

        <parameter name="SQLSTATUS" displayText="SQLStatus" optional="YES">
           <description> <short_desc> 
                 SQL status code as a result of executing the query gets stored in this variable
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, VerifyDBValue, ADBAlias, ATableAlias, LASTNAME, Clients, "CID = 25", ContactDatabase, "", "", "Smith", sqlStatusVariable</usage>
           <description>
              <short_desc> 
                 Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE contains "Smith" where the CID field = 25.
              </short_desc>
              <detailed_desc> 
                  Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE contains "Smith" for the first record 
                  whose CID field = 25.  No UserID or Password was required for this access.
              </detailed_desc></description></example>
     </examples></keyword>
     
  <keyword name="VERIFYDBNULLVALUE" 
           displayText="VerifyDBNullValue" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
                 Verifies the value of a field in a database table is NULL
              </short_desc>
              <detailed_desc>
                 Verifies the value of a field in a database table is NULL.
                 <p>
                 Sometimes you have to check if a field's value is NULL. This
                 NULL value is different from any other (even zero for numerics
                 and null string for characters), so if you try to check it
                 using VerifyDBValue() function, if will fail.
                 </p><p>
                 A table and field name are required. You also have to specify data source name,
                 user id and password (the user id and password can be "" meaning not required).
                 </p><p>
                 A query condition can be included. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br /> 
                 Including "where" in the expression itself is optional.  It will 
                 be prefixed to the expression if it is not provided.
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBFIELDNAME" displayText="DBFieldName" optional="NO">
           <description>
              <short_desc> 
                 Name of the FIELD within DBTableName used in the verification
              </short_desc></description> </parameter>

        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName</short_desc>
           </description></parameter>

        <parameter name="DBQUERYCOND" displayText="DBQueryCond" optional="NO">
           <description><short_desc> 
                 Expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
              </short_desc>
              <detailed_desc> 
                 A query condition can be included, if not then ""
                 must be supplied. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br />
                 "where" will be added to any expression if it is not provided.
              </detailed_desc></description></parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>

        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>

        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>

        <parameter name="SQLSTATUS" displayText="SQLStatus" optional="YES">
           <description> <short_desc> 
                 SQL status code as a result of executing the query gets stored in this variable
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, VerifyDBNullValue, ADBAlias, ATableAlias, LASTNAME, Clients, "CID = 25", ContactDatabase, "", "", sqlStatusVariable</usage>
           <description>
              <short_desc> 
                 Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE is NULL where the CID field = 25.
              </short_desc>
              <detailed_desc> 
                  Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE is NULL for the first record 
                  whose CID field = 25.  No UserID or Password was required for this access.
              </detailed_desc></description></example>
     </examples></keyword>
     
  <keyword name="VERIFYDATABASENULLVALUE" 
           displayText="VerifyDatabaseNullValue" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
       
       <description><short_desc> 
                 Verifies the value of a field in a database table is NULL
              </short_desc>
              <detailed_desc>
                 Verifies the value of a field in a database table is NULL.
                 <p>
                 Sometimes you have to check if a field's value is NULL. This
                 NULL value is different from any other (even zero for numerics
                 and null string for characters), so if you try to check it
                 using VerifyDBValue() function, if will fail.
                 </p><p>
                 A table and field name are required. You also have to specify data source name,
                 user id and password (the user id and password can be "" meaning not required).
                 </p><p>
                 A query condition can be included. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br /> 
                 Including "where" in the expression itself is optional.  It will 
                 be prefixed to the expression if it is not provided.
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBFIELDNAME" displayText="DBFieldName" optional="NO">
           <description>
              <short_desc> 
                 Name of the FIELD within DBTableName used in the verification
              </short_desc></description> </parameter>

        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName</short_desc>
           </description></parameter>

        <parameter name="DBQUERYCOND" displayText="DBQueryCond" optional="NO">
           <description><short_desc> 
                 Expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
              </short_desc>
              <detailed_desc> 
                 A query condition can be included, if not then ""
                 must be supplied. It can be any 
                 valid expression allowed by the WHERE clause of the SELECT sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br />
                 "where" will be added to any expression if it is not provided.
              </detailed_desc></description></parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>

        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>

        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>

        <parameter name="SQLSTATUS" displayText="SQLStatus" optional="YES">
           <description> <short_desc> 
                 SQL status code as a result of executing the query gets stored in this variable
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, VerifyDatabaseNullValue, ADBAlias, ATableAlias, LASTNAME, Clients, "CID = 25", ContactDatabase, "", "", sqlStatusVariable</usage>
           <description>
              <short_desc> 
                 Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE is NULL where the CID field = 25.
              </short_desc>
              <detailed_desc> 
                  Verify the LASTNAME field in the CLIENTS table in CONTACTDATABASE is NULL for the first record 
                  whose CID field = 25.  No UserID or Password was required for this access.
              </detailed_desc></description></example>
     </examples></keyword>
     
  <keyword name="DELETEDBTABLERECORDS" 
           displayText="DeleteDBTableRecords" 
           deprecated="NO" expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
                 Deletes records in a database table
              </short_desc>
              <detailed_desc>
                 Deletes records in a database table.
                 <p>
                 A table name is required. You also have to specify data source name,
                 and optionally user id and password (this is because some drivers
                 don't need a user/password).
                 </p><p>
                 A query condition can be included. It can be any 
                 valid expression allowed by the WHERE clause of the DELETE FROM sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br /> 
                 Including "where" in the expression itself is optional.  It will 
                 be prefixed to the expression if it is not provided.
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName</short_desc>
           </description></parameter>

        <parameter name="DBQUERYCOND" displayText="DBQueryCond" optional="NO">
           <description><short_desc> 
                 Expression allowed by the WHERE clause of the DELETE FROM sentence of the SQL driver
              </short_desc>
              <detailed_desc> 
                 A query condition can be included, if not then "" is supplied. It can be any 
                 valid expression allowed by the WHERE clause of the DELETE FROM sentence of the SQL driver
                 you are using. For example: "CliBal &gt; 100000 and CliCat = 'C'".<br />
                 "where" will be added to any expression if it is not provided.
              </detailed_desc></description></parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>

        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>

        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>

        <parameter name="SQLSTATUS" displayText="SQLStatus" optional="YES">
           <description> <short_desc> 
                 SQL status code as a result of executing the query gets stored in this variable
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, DeleteDBTableRecords, ADBAlias, ATableAlias, Clients, "CID = 25", ContactDatabase, "", "", sqlStatusVar</usage>
           <description>
              <short_desc> 
                 Delete the records in the CLIENTS table in CONTACTDATABASE where the CID field = 25.
              </short_desc>
              <detailed_desc> 
                  Delete the records in the CLIENTS table in CONTACTDATABASE where the CID field = 25.<br />
                  No UserID or Password was required for this access.
              </detailed_desc></description></example>
     </examples></keyword>

  <keyword name="EXECSQLQUERY" 
           displayText="ExecSQLQuery" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
                 Executes the query provided in a queryStr on the database table.
              </short_desc>
              <detailed_desc>
                 Executes the query in a database table.
                 <p>
                 A data source name  and Query String is required. You also have to specify
                 a variable to get the status code.  And optionally user id and password (this is
                 because some drivers don't need a user/password).
                 </p><p>
                 Use this command with caution.  It doesn't return any value back other than the
                 SQL Status code.  So, remember not to use 'SELECT' command inside the queryStr.
                 It should rather be used to do an 'UPDATE', 'INSERT' or 'DELETE'.
                 </p> 
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>
        <parameter name="QUERYSTRING" displayText="queryStr" optional="NO">
           <description><short_desc> 
                 Actual query stored in a queryStr.
              </short_desc></description></parameter>
        <parameter name="SQLSTATUSCODE" displayText="SQLStatusCode" optional="NO">
           <description><short_desc> 
                 SQL status code as a result of executing the query.
              </short_desc></description></parameter>
        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>

        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, ExecSQLQuery, ADBAlias, ATableAlias, empODBC, "UPDATE Employee Set City = 'Pittsburgh' Where EmpID = '0023' ", sqlStatus</usage>
           <description>
              <short_desc> 
                 Executes the query provided in a queryStr against the database specified in the DSN.
              </short_desc>
              <detailed_desc> 
                  Executes the query provided in a queryStr i.e. updates the city column in the Employee table for a EmpID equals to 0023.
              </detailed_desc></description></example>
     </examples></keyword>

  <keyword name="GETDBTABLECOLUMNCOUNT" 
           displayText="GetDBTableColumnCount" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
                 Executes the query in a specified database table and returns the total column count.
              </short_desc>
              <detailed_desc>
                 Executes the query in a specified database table and returns the total column count.
                 <p>
                 A data source name  and Table name are required. You also have to specify a 
                 variable to get the result of the SQL and status code.  And optionally user id 
                 and password (this is because some drivers don't need a user/password).
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>
        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName
           </short_desc></description></parameter>
        <parameter name="COLUMNCOUNT" displayText="ColumnCount" optional="NO">
           <description><short_desc> 
                 SQL result get stored in this return variable.
              </short_desc> </description></parameter>
        <parameter name="SQLSTATUSCODE" displayText="SQLStatusCode" optional="NO">
           <description><short_desc> 
                 SQL status code as a result of executing the query.
              </short_desc></description></parameter>
        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>
        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, GetDBTableColumnCount, ADBAlias, ATableAlias, empODBC, Employee, columnCount, sqlStatus</usage>
           <description>
              <short_desc> 
                 Executes the query for the Table name (Employee) on the database specified in the DSN.
              </short_desc>
              <detailed_desc> 
                  Executes the query for given Table name (Employee) on the database specified in the DSN.  And 
                  this command returns total column count on the given table and SQL staus code.
              </detailed_desc></description></example>
     </examples></keyword>

  <keyword name="GETDBVALUE" 
           displayText="GetDBValue" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
                 Executes the query and returns the case-sensitive value as result of the execution.
              </short_desc>
              <detailed_desc>
                 Executes the query specified in the queryStr and returns the case-sensitive value
                 as result of the execution.
                 <p>
                 To return the value, it executes a SQL query sentence using a data source to 
                 connect to the data base (using a 'SELECT').
                 </p><p>
                 A queryStr and the two return variables to store the query result and SQL Status code
                 are required.  You also have to specify data source name and optionally user id and
                 password (this is because some drivers don't need a user/password).
                 </p><p>
                 If the query returns more than one record, the returned value is the corresponding to the
                 first one, unless the field name be something like COUNT(*) or SUM(InvoiceTot).
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>
        <parameter name="QUERYSTRING" displayText="queryStr" optional="NO">
           <description><short_desc>
                 Actual query stored in a queryStr.
              </short_desc></description></parameter>
        <parameter name="QUERYRESULT" displayText="QueryResult" optional="NO">
           <description><short_desc> 
                 SQL result get stored in this return variable.
              </short_desc> </description></parameter>
        <parameter name="SQLSTATUSCODE" displayText="SQLStatusCode" optional="NO">
           <description><short_desc> 
                 SQL status code as a result of executing the query.
              </short_desc></description></parameter>
        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>
        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, GetDBValue, ADBAlias, ATableAlias, empODBC, "Select LastName From Employee Where EmpID = '0023'", queryResult, sqlStatus</usage>
           <description>
              <short_desc> 
                 Executes the query in the queryStr on the database specified in the DSN.
              </short_desc>
              <detailed_desc> 
                  Executes the query in the queryStr on the database specified in the DSN.  And 
                  this command returns single value as result of the query execution and SQL staus code.
              </detailed_desc></description></example>
     </examples></keyword>
     
  <keyword name="GETDBTABLEROWCOUNT" 
           displayText="GetDBTableRowCount" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
                 Executes the query in a database table.
              </short_desc>
              <detailed_desc>
                 Executes the query in a database table.
                 <p>
                 A data source name  and Query String is required. You also have to specify
                 a variable to get the status code.  And optionally user id and password (this is
                 because some drivers don't need a user/password).
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>
        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName
           </short_desc> </description></parameter>
        <parameter name="ROWCOUNT" displayText="RowCount" optional="NO">
           <description><short_desc> 
                 SQL result get stored in this return variable.
              </short_desc> </description></parameter>
        <parameter name="SQLSTATUSCODE" displayText="SQLStatusCode" optional="NO">
           <description><short_desc> 
                 SQL status code as a result of executing the query.
              </short_desc></description></parameter>
        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>
        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, GetDBTableRowCount, ADBAlias, ATableAlias, empODBC, Employee, rowCount, sqlStatus</usage>
           <description>
              <short_desc> 
                 Executes the query for the Table name (Employee) on the database specified in the DSN.
              </short_desc>
              <detailed_desc> 
                  Executes the query for given Table name (Employee) on the database specified in the DSN.  And 
                  this command returns total row count on the given table and SQL staus code.
              </detailed_desc></description></example>
     </examples></keyword>
     
  <keyword name="COPYDBTABLETOFILE" 
           displayText="CopyDBTableToFile" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc> 
              This routine will copy the contents of a DBTable  to a file.
              </short_desc>
              <detailed_desc>
                 This routine will export the contents of a DBTable  to a delimeted file.
                 <p>
                 A data source name  and Query String is required. You also have to specify
                 a variable to get the status code.  And optionally user id and password (this is
                 because some drivers don't need a user/password).
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

       <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter name="DBSOURCENAME" displayText="DBSourceName" optional="NO">
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>
        <parameter name="FILEOUT" displayText="FileOut" optional="NO">
           <description><short_desc> 
                 Name of the output file. 
              </short_desc></description></parameter>
        <parameter name="DBTABLEName" displayText="DBTableName" optional="NO">
           <description><short_desc> 
                 Name of the TABLE to access within the DBSourceName
           </short_desc> </description></parameter>
        <parameter name="COLUMNCOUNT" displayText="ColumnCount" optional="YES">
           <description><short_desc> 
                 If specified the output file will contain only the number of columns specified.
              </short_desc> <detailed_desc> <p>
                 OPTIONAL parameter. If specified the output file will contain only the
                 number of columns specified. This number will become the first dimension
                 of the retreival array. If NOT specified then no maximum.
              </p></detailed_desc> </description></parameter>
        <parameter name="ROWCOUNT" displayText="RowCount" optional="YES">
           <description><short_desc> 
                 If specified the output file will contain only the number of rows specified. 
              </short_desc> <detailed_desc> <p>
                 OPTIONAL parameter. If specified the output file will contain only the
                 number of columns specified. This number will become the first dimension
                 of the retreival array. If NOT specified then no maximum.
              </p></detailed_desc> </description></parameter>
        <parameter name="SQLQUERY" displayText="SQLQuery" optional="YES">
           <description><short_desc> 
                 OPTIONAL parameter. If specified, the file will contain the results of the
                 executed Query. The query is NOT validated by this
                 function. If this is provided, the the DBTableName
                 must be ""
              </short_desc></description></parameter>
        <parameter name="DELIMITER" displayText="delimiter" optional="YES">
           <description><short_desc> 
                 OPTIONAL parameter. If not specified the default ',' seperator will be used.
              </short_desc></description></parameter>
        <parameter name="DIRECTORYOUT" displayText="DirectoryOut" optional="YES">
           <description><short_desc> 
                 OPTIONAL parameter. If not specified the file will be stored in the default 
                 test directory
              </short_desc></description></parameter>
        <parameter       name="SQLSTATUS" 
                  displayText="SQLStatus" 
                  optional="YES" >
           <description><short_desc> 
                 A variable which holds the current SQL run status.
              </short_desc></description></parameter>
        <parameter name="USERID" displayText="UserID" optional="YES">
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>
        <parameter name="PASSWORD" displayText="Password" optional="YES">
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C, CopyDBTableToFile, ADBAlias, ATableAlias, Data Source Name (dsn), OutputFileName, tableName, [ColumnCount],[rowCount], [SQLQuery], [Delimiter], [OutputDirectory], sqlStatus, "[UID]", "[PWD]"</usage>
           <description>
              <short_desc> 
                 This routine will export the contents of a DBTable  to a delimeted file.
              </short_desc>
              <detailed_desc> 
                  This routine will export the contents of a DBTable  to a delimeted file. 
              </detailed_desc></description></example>
     </examples></keyword>
     
  <keyword         name="COPYDBTABLECOLUMNTOFILE" 
            displayText="CopyDBTableColumnToFile" >
           <description><short_desc> 
              This routine will copy the contents of one or more DBTable column(s) to a file.
              </short_desc>
              <detailed_desc>
                 This routine will export the contents of one or more DBTable column(s) to
                 a delimeted file. If columnDelimiter is omitted, a horizontal tab is used
                 to delimit fields.
                 <p>
                 A data source name  and Query String is required. You also have to specify
                 a variable to get the status code.  And optionally user id and password (this is
                 because some drivers don't need a user/password).
                 </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031104" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverDatabaseCommands" 
                            doc="org/safs/DCDriverDatabaseCommands.html" 
                            sourcecode="org.safs.DCDriverDatabaseCommands.java" 
                            class="DATABASE" />
           </engine>
       </engines>

      <parameters>
          <parameter name="ADBAlias" displayText="ADBAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

          <parameter name="ATableAlias" displayText="ATableAlias" optional="NO">
           <description>
              <short_desc> 
                 not used
              </short_desc></description> </parameter>

        <parameter       name="DBSOURCENAME" 
                  displayText="DBSourceName" 
                  optional="NO" >
           <description><short_desc> 
                 Name of the Datasource containing the DBTable
              </short_desc></description></parameter>
        <parameter       name="FILEOUT" 
                  displayText="FileOut" 
                  optional="NO" >
           <description><short_desc> 
                 Name of the output file. 
              </short_desc></description></parameter>
        <parameter       name="SQLQUERY" 
                  displayText="SQLQuery" 
                  optional="NO" >
           <description><short_desc> 
                 The file will contain the results of the executed Query. The query is NOT validated 
                 by this function.
              </short_desc></description></parameter>
        <parameter       name="DIRECTORYOUT" 
                  displayText="DirectoryOut" 
                  optional="YES" >
           <description><short_desc> 
                 OPTIONAL parameter. If not specified the file will be stored in the default 
                 test directory
              </short_desc></description></parameter>
        <parameter       name="SQLSTATUS" 
                  displayText="SQLStatus" 
                  optional="YES" >
           <description><short_desc> 
                 A variable which holds the current SQL run status.
              </short_desc></description></parameter>
        <parameter       name="Delimiter" 
                  displayText="Delimiter" 
                  optional="YES" >
           <description><short_desc> 
                 Optional Delimiter to be used between columns written to file.
              </short_desc></description></parameter>
        <parameter       name="USERID" 
                  displayText="UserID" 
                  optional="YES" >
           <description><short_desc> 
                 UserID for accessing the Datasource (if required).
              </short_desc></description></parameter>
        <parameter       name="PASSWORD" 
                  displayText="Password" 
                  optional="YES" >
           <description><short_desc> 
                 Password for accessing the Datasource (if required).
              </short_desc></description></parameter>
     </parameters>
     <examples>
        <example>
           <usage>C, CopyDBTableColumnToFile, ADBAlias, ATableAlias, DataSourceName, OutputFileName, SQLQuery, OutputDirectory, sqlStatus, "|"</usage>
           <description>
              <short_desc> 
                 This routine will export the contents of a single DBTable column to a file.
              </short_desc>
              <detailed_desc> 
                  This routine will export the contents of a single
                 DBTable column to a file using | as delimeter
              </detailed_desc></description></example>
     </examples>        
  </keyword>
     
</keywords></keyword_library>
