<!-- XSLJavaComponentFunctionsClass.XSL
     
     Most commonly used in conjunction with:
     
         XSLJavaCommandModelPrep.BAT
         XSLJavaCommandModelPrep.XSL
         XSLQuickReference.XML
         
         which invokes:
         
         XSLJavaComponentFunctionsClass.XSL
         XSLComponentFunctions.XML
         
     This file is intended to process the keyword XML that documents all the 
     Component Function libraries defined for SAFS Engines.
     
     http://safsdev.sourceforge.net/sqabasic2000/RRAFSReference.htm
    
     The output of this transformation is Java sourcecode.  The sourcecode when 
     compiled will provide convenient static fields for all known Component Function libraries 
     in a single Class.
     
     Example invocation:
     
     msxsl.exe XSLComponentFunctions.xml XSLJavaComponentFunctionsClass.xsl -o org\safs\model\commands\ComponentFunctions.java
     
     ********************************************************************** -->
     
<xsl:stylesheet version='1.0'
		xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
		xmlns='http://www.w3.org/TR/REC-html40'>
    
    <xsl:output method="text" encoding="UTF-8" />
    <!-- xsl:include href="XSLJavaCommonFunctions.XSL"/ -->
    <xsl:include href="XSLJavaCommandModel.XSL"/>


<!-- ************************************************************************** 
     match="/"
     
     Output the class header and package information then begin processing each 
     Component Function //FILE href to create the static xxxFunctions fields. 
     
     Example:
     
     /****
      * Copyright ...
      ****
     package org.safs.model.commands;
     
     public class ComponentFunctions
    
     ********************************************************************** -->

<xsl:template match="/" >

        <xsl:text>&#xA;/******************************************************************************</xsl:text>
        <xsl:text>&#xA; * ComponentFunctions.java</xsl:text>
        <xsl:text>&#xA; *</xsl:text>
        <xsl:text>&#xA; * Copyright (c) by SAS Institute Inc., Cary, NC 27513</xsl:text>
        <xsl:text>&#xA; * General Public License: http://www.opensource.org/licenses/gpl-license.php</xsl:text>
        <xsl:text>&#xA; *</xsl:text>
        <xsl:text>&#xA; * !!! DO NOT EDIT THIS FILE !!!</xsl:text>
        <xsl:text>&#xA; * This file is automatically generated from XML source.  Any changes you make </xsl:text>
        <xsl:text>&#xA; * here will be erased the next time the file is generated.</xsl:text>
        <xsl:text>&#xA; *</xsl:text>
        <xsl:text>&#xA; * The following assets are needed to generate this file:</xsl:text>
        <xsl:text>&#xA; *</xsl:text>
        <xsl:text>&#xA; *   XSLComponentFunctions.xml</xsl:text>
        <xsl:text>&#xA; *   keyword_library.dtd</xsl:text>
        <xsl:text>&#xA; *   XSLJavaCommonFunctions.xsl</xsl:text>
        <xsl:text>&#xA; *   XSLJavaComponentFunctionsClass.xsl</xsl:text>
        <xsl:text>&#xA; *</xsl:text>
        <xsl:text>&#xA; * Example invocation to generate:</xsl:text>     
        <xsl:text>&#xA; *</xsl:text>
        <xsl:text>&#xA; *   msxsl.exe XSLComponentFunctions.xml XSLJavaComponentFunctionsClass.xsl -o ComponentFunctions.java</xsl:text>
        <xsl:text>&#xA; *</xsl:text>
        <xsl:text>&#xA; ******************************************************************************/ </xsl:text>
        <xsl:text>&#xA;package org.safs.model.commands;&#xA;&#xA;</xsl:text>
        <xsl:text>&#xA;import org.safs.model.ComponentFunction;&#xA;&#xA;</xsl:text>
        <xsl:text>&#xA;public class ComponentFunctions {&#xA;</xsl:text>
        <xsl:text>&#xA;    /*****************</xsl:text>
        <xsl:text>&#xA;    Private Constructor</xsl:text>
        <xsl:text>&#xA;    Static class needing no instantiation.</xsl:text>
        <xsl:text>&#xA;    ****************/</xsl:text>
        <xsl:text>&#xA;    private ComponentFunctions () {}&#xA;&#xA;</xsl:text>
        
        <!-- ***************************************************************************************
        Generate a public field holding a reference to each type of Component Function library supported.
        This enables the developer to see Component Functions according to the type or library 
        that implements them.
        ****************************************************************************************** -->
        <xsl:for-each select="//file" >
	    <xsl:variable name="library" select="document(@href)" />
            <xsl:apply-templates select="$library/keyword_library/libraryInfo" mode="StaticClass" />
        </xsl:for-each>    

        <xsl:text>&#xA;}&#xA;</xsl:text>
    </xsl:template>       
    
</xsl:stylesheet>
