<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE keyword_library SYSTEM "keyword_library.dtd">

<keyword_library><libraryType type="DRIVER" />
    
    <libraryInfo name="DDDriverDeprecatedCommands" 
                 doc="DDDriverDeprecatedCommands.htm" 
                 sourcecode="DDDriverDeprecatedCommands.sbl"
                 class="DEPRECATED" >
                 
        <description>
          <short_desc>
              Deprecated Driver Commands for the Cycle, Suite, and Step drivers
          </short_desc>
          <detailed_desc><p>
          This keyword library provides Driver Commands that 
          can be used by all three DDE Drivers--CycleDriver, 
          SuiteDriver, and StepDriver.  That means they can 
          be used in any keyword driven test tables regardless 
          of the test tables level--Cycle, Suite, or Step.</p>
          <p>
          Each different driver command has different parameters 
          as described in its documentation.  For reference, the 
          first fields of ALL Driver Command test records are defined 
          below:</p>
          <dl>
             <dd>Field #1</dd>
             <dt>The "C" = DRIVER COMMAND record type specifier.</dt>

             <dd>Field #2</dd>
             <dt>The Driver Command keyword.</dt>
          </dl>
          <p>
          Example:</p>

          <code>c , SetApplicationMap , "AppMap.map"</code>

          <p>
          Driver Command parameters must be placed in the test record 
          in the field position specified in the documentation.  
          Some parameters are optional.  However, the field associated 
          with that parameter must be honored.  If you wish to skip an 
          optional parameter you must still provide an empty field for 
          that parameter.</p>
          <p>
          Example:</p>

          <code>c, LaunchApplication, NOTEPAD, NOTEPAD.EXE, , , "AppMap.map"</code>

          <p>
          The above example shows two optional fields after NOTEPAD.EXE 
          which are given no value(skipped).</p>
          <p>
          Note that the full availablility of all Driver Commands is now 
          spread across several files.  Together, all of these files provide 
          all the Driver Commands available to the core framework.</p>
          <dl>
             <dd><a href="DDDriverCommands.htm" target="_blank">DDDriverCommands</a></dd>
             <dt>Miscellaneous and often used Commands.</dt>

             <dd><a href="DDDriverLogCommands.htm" target="_blank">DDDriverLogCommands</a></dd>
             <dt>Commands focused on logging test execution.</dt>

             <dd><a href="DDDriverFlowCommands.htm" target="_blank">DDDriverFlowCommands</a></dd>
             <dt>Commands focused on Error Recovery and Flow Control.</dt>

             <dd><a href="DDDriverCounterCommands.htm" target="_blank">DDDriverCounterCommands</a></dd>
             <dt>Commands focused on status tracking.</dt>

             <dd><a href="DDDriverDeprecatedCommands.htm" target="_blank">DDDriverDeprecatedCommands</a></dd>
             <dt>Commands that are still provided for backward compatibility, but are no longer supported.</dt>

             <dd><a href="DDDriverDebugCommands.htm" target="_blank">DDDriverDebugCommands</a></dd>
             <dt>Commands focused on debugging test execution.</dt>

          </dl>
          </detailed_desc>
        </description>
    </libraryInfo>
    <runtime platform="Windows" engine="Robot" version="2000" />
    <keywords>
    
    <keyword name="SETTESTCASE" 
             displayText="SetTestcase" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description><short_desc>
        DEPRECATED. Use StartTestCase instead.</short_desc>
        <detailed_desc>
          Log/process the beginning of testing associated with a user-defined Testcase.<br />
          Currently no processing is done with this.  Only a log entry occurs.
          Use StartTestCase which now implements the original intent of this command.<br /><br />
          
          In addition to the above functionality, WRAFS will create a new node in the 
          log used by Winrunner. Care should be taken to only use one SETTESTCASE at a time,
          nesting these will have unpredictable results.
        </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverDeprecatedCommands" 
                            doc="DDDriverDeprecatedCommands.htm" 
                            sourcecode="DDDriverDeprecatedCommands.sbl" 
                            class="DEPRECATED" />
           </engine>
           <engine name="WinRunner" 
			       since="20020903" 
			       tool="WinRunner" 
			       vendor="Mercury Interactive">
		       <libraryInfo class="DEPRECATED" 
					name="DDDriverCommands" 
					sourcecode="DDDriverCommands">
		       </libraryInfo>
           </engine>
       </engines>

       <parameters>
        <parameter name="TESTCASEID" displayText="TestCaseID" optional="NO">
           <description><short_desc>
              The user-defined ID of the Testcase.</short_desc>
           </description>
        </parameter>
        <parameter name="DESCRIPTION" displayText="Description" optional="YES">
           <description><short_desc>
              A description of the Testcase</short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>C  SetTestcase  TestCase1</usage>
           <description><short_desc> 
                 Logs the start of TestCase1 with no additional description
              </short_desc></description>
        </example>
        <example>
           <usage>C  SetTestcase  TestCase1  "It Must Compile"</usage>
           <description><short_desc> 
                 Logs the start of TestCase1 with a description of TestCase1
              </short_desc></description>
        </example>
     </examples></keyword>
     
  <keyword name="ENDTESTCASE" 
           displayText="EndTestcase" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc>
        DEPRECATED. Use StopTestCase instead.</short_desc>
        <detailed_desc>
          Log/process the end of testing associated with a user-defined Testcase.<br />
          Currently no processing is done with this.  Only a log entry occurs.
          Use StopTestCase which now implements the original intent of this command.<br /><br />
          
          In addition to the above, WRAFS will close the node created by the SETTESTCASE
          command in the log file.
        </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverDeprecatedCommands" 
                            doc="DDDriverDeprecatedCommands.htm" 
                            sourcecode="DDDriverDeprecatedCommands.sbl" 
                            class="DEPRECATED" />
           </engine>
           <engine name="WinRunner" 
	   			       since="20020903" 
	   			       tool="WinRunner" 
	   			       vendor="Mercury Interactive">
	   		       <libraryInfo class="DEPRECATED" 
	   					name="DDDriverCommands" 
	   					sourcecode="DDDriverCommands">
	   		       </libraryInfo>
           </engine>
       </engines>

       <parameters>
        <parameter name="TESTCASEID" displayText="TestCaseID" optional="YES">
           <description><short_desc>
              The user-defined ID of the Testcase.</short_desc>
              <detailed_desc>
              The user-defined ID of the Testcase. The last TestCase provided with the 
              SetTestcase command will be handled by default.</detailed_desc> </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>C  EndTestcase  TestCase1</usage>
           <description><short_desc> 
                 Logs the end of TestCase1
              </short_desc></description>
        </example>
        <example>
           <usage>C  EndTestcase</usage>
           <description><short_desc> 
                 Logs the end of the last TestCase set with SetTestcase.
              </short_desc></description>
        </example>
     </examples></keyword>
     
  <keyword name="SETREQUIREMENT" 
           displayText="SetRequirement" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc>
        DEPRECATED. Use StartRequirement instead.</short_desc>
        <detailed_desc>
          Log/process the beginning of testing associated with a user-defined Requirement.<br />
          Currently no processing is done with this.  Only a log entry occurs.
          Use StartRequirement which now implements the original intent of this command.
        </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverDeprecatedCommands" 
                            doc="DDDriverDeprecatedCommands.htm" 
                            sourcecode="DDDriverDeprecatedCommands.sbl" 
                            class="DEPRECATED" />
           </engine>
           <engine name="WinRunner" 
	   			       since="20020903" 
	   			       tool="WinRunner" 
	   			       vendor="Mercury Interactive">
	   		       <libraryInfo class="DEPRECATED" 
	   					name="DDDriverCommands" 
	   					sourcecode="DDDriverCommands">
	   		       </libraryInfo>
           </engine>
       </engines>

       <parameters>
        <parameter name="REQUIREMENTID" displayText="RequirementID" optional="NO">
           <description><short_desc>
              The user-defined ID of the Requirement</short_desc>
           </description>
        </parameter>
        <parameter name="DESCRIPTION" displayText="Description" optional="YES">
           <description><short_desc>
              A description of the Requirement</short_desc>
           </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>C  SetRequirement  Requirement1</usage>
           <description><short_desc> 
                 Logs the start of Requirement1 with no additional description
              </short_desc></description>
        </example>
        <example>
           <usage>C  SetRequirement  Requirement1  "It Must Compile"</usage>
           <description><short_desc> 
                 Logs the start of Requirement1 with a description of Requirement1
              </short_desc></description>
        </example>
     </examples></keyword>
     
  <keyword name="ENDREQUIREMENT" 
           displayText="EndRequirement" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description><short_desc>
        DEPRECATED. Use StopRequirement instead.</short_desc>
        <detailed_desc>
          Log/process the end of testing associated with a user-defined Requirement.<br />
          Currently no processing is done with this.  Only a log entry occurs.
          Use StopRequirement which now implements the original intent of this command.
        </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverDeprecatedCommands" 
                            doc="DDDriverDeprecatedCommands.htm" 
                            sourcecode="DDDriverDeprecatedCommands.sbl" 
                            class="DEPRECATED" />
           </engine>
           <engine name="WinRunner" 
	   			       since="20020903" 
	   			       tool="WinRunner" 
	   			       vendor="Mercury Interactive">
	   		       <libraryInfo class="DEPRECATED" 
	   					name="DDDriverCommands" 
	   					sourcecode="DDDriverCommands">
	   		       </libraryInfo>
           </engine>
       </engines>

       <parameters>
        <parameter name="REQUIREMENTID" displayText="RequirementID" optional="YES">
           <description><short_desc>
              The user-defined ID of the Requirement</short_desc>
              <detailed_desc>
              The user-defined ID of the Requirement. The last Requirement provided with the 
              SetRequirement command will be handled by default.</detailed_desc> </description>
        </parameter>
     </parameters><examples>
        <example>
           <usage>C  EndRequirement  Requirement1</usage>
           <description><short_desc> 
                 Logs the end of Requirement1
              </short_desc></description>
        </example>
        <example>
           <usage>C  EndRequirement</usage>
           <description><short_desc> 
                 Logs the end of the last Requirement set with SetRequirement
              </short_desc></description>
        </example>
     </examples></keyword>
     
  <keyword name="GETVARIABLEVALUEEX" 
           displayText="GetVariableValueEx" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                 Replaced by CopyVariableValueEx</short_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverDeprecatedCommands" 
                            doc="DDDriverDeprecatedCommands.htm" 
                            sourcecode="DDDriverDeprecatedCommands.sbl" 
                            class="DEPRECATED" />
           </engine>
           <engine name="WinRunner" 
	   			       since="20020903" 
	   			       tool="WinRunner" 
	   			       vendor="Mercury Interactive">
	   		       <libraryInfo class="DEPRECATED" 
	   					name="DDDriverCommands" 
	   					sourcecode="DDDriverCommands">
	   		       </libraryInfo>
           </engine>
       </engines>

          <parameters>
        <parameter name="SOURCEVARIABLE" displayText="SourceVariable" optional="NO">
           <description> <short_desc> 
                 The name of the variable to retrieve the value of
              </short_desc></description></parameter>
        <parameter name="DESTINATIONVARIABLE" displayText="DestinationVariable" optional="NO">
           <description> <short_desc> 
                 The name of the variable to hold the retrieved value
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C,  GetVariableValueEx,  srcvar, destvar </usage>
           <description> <short_desc> 
                 Copy the value of variable srcvar to variable destvar (euivalent to ^destvar=^srcvar)
              </short_desc> </description> </example>
        <example>
           <usage>C,  GetVariableValueEx,  ^srcvarname, ^destvarname </usage>
           <description> <short_desc> 
                 Given ^srcvarname contains "srcvar" and ^destvarname contains "destvar", 
                 this sets ^destvar to ^srcvar
              </short_desc> </description> </example>
        <example>
           <usage>C,  GetVariableValueEx,  ^basename &amp; ^index, destvar </usage>
           <description> <short_desc> 
                 Any expression that evaluates to a valid DDVariable name may be used.
              </short_desc> </description> </example>
     </examples></keyword>
    </keywords>
</keyword_library>
