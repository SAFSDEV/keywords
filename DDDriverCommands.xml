<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE keyword_library SYSTEM "keyword_library.dtd">
<keyword_library>

    <libraryType type="DRIVER" />
    
    <libraryInfo name="DDDriverCommands" 
                 doc="DDDriverCommands.htm" 
                 sourcecode="DDDriverCommands.sbl"
                 class="MISC" >
                 
        <description>
          <short_desc>
              Miscellaneous Driver Commands.
          </short_desc>
          <detailed_desc>
          <p>
          This keyword library provides Driver Commands that can 
          be used in any keyword driven test table regardless 
          of the test tables level--Cycle, Suite, or Step.</p>
          <p>
          Each different driver command has different parameters 
          as described in its documentation.  For reference, the 
          first fields of ALL Driver Command test records are defined 
          below:</p>
          <dl>
             <dd>Field #1</dd>
             <dt>The "C" = DRIVER COMMAND record type specifier.</dt>

             <dd>Field #2</dd>
             <dt>The Driver Command keyword.</dt>
          </dl>
          <p>
          Example:</p>

          <code>C , SetApplicationMap , "AppMap.map"</code>

          <p>
          Driver Command parameters must be placed in the test record 
          in the field position specified in the documentation.  
          Some parameters are optional.  However, the field associated 
          with that parameter must be honored.  If you wish to skip an 
          optional parameter you must still provide an empty field for 
          that parameter.</p>
          <p>
          Example:</p>

          <code>C, LaunchApplication, NOTEPAD, NOTEPAD.EXE, , , "AppMap.map"</code>

          <p>
          The above example shows two optional fields after NOTEPAD.EXE 
          which are given no value(skipped).</p>
          <p>
          Note that the full availablility of all Driver Commands is now 
          spread across several files.  Together, all of these files provide 
          all the Driver Commands available to the core framework.</p>
          </detailed_desc>
        </description>
    </libraryInfo>
    <runtime platform="Windows" engine="Robot" version="2002" />
    <keywords>
    
    <keyword name="VERSION" 
             displayText="Version" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description><short_desc>Specify the table format VERSION</short_desc>
       <detailed_desc>
        Used to specify the VERSION of the table format.  
        This is currently not required since there is only one 
        current version of the table format--1.0.
       </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041012" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020820" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>

       </engines>

       <parameters>
        <parameter name="VERSION" displayText="Version" optional="NO" default="1.0">
           <description><short_desc>
              The VERSION of the table format. Initially "1.0"</short_desc>
           </description>
        </parameter>

     </parameters><examples>
        <example>
           <usage>C  Version  1.0</usage>
           <description><short_desc> 
                 Specify that the table format is VERSION 1.0
              </short_desc></description></example>
     </examples></keyword>
     
    <keyword name="GETVERSION" 
             displayText="GetVersion" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description><short_desc>Get the engine VERSION</short_desc>
       <detailed_desc>
        Used to specify the VERSION of the engine.
       </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

       </engines>

       <parameters>
        <parameter name="VARIABLE" displayText="Variable" optional="NO" default="1.0">
           <description><short_desc>
              A variable to accept the VERSION</short_desc>
           </description>
        </parameter>

     </parameters><examples>
        <example>
           <usage>C  Version  var</usage>
           <description><short_desc> 
                 get the version of the engine in variable 'var'
              </short_desc></description></example>
     </examples></keyword>
     
    <keyword name="GETAPPMAPVALUE" 
             displayText="GetAppMapValue" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description><short_desc>Assign a DDVariable a value from an App Map.</short_desc>
       <detailed_desc>
        Allows the extraction of an App Map item value into a DDVariable.  The user can optionally 
        provide the App Map ID and Section from which the entry is sought.  The default is to 
        retrieve the value from the default section in the default App Map.
       </detailed_desc></description>
           
       <engines>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20060804" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="APPMAPID" displayText="AppMapID" optional="YES" default="">
           <description><short_desc>
              The ID provided for the AppMap when OPENed.</short_desc>              
              <detailed_desc>
              If this parameter is left empty then the default or "current" App Map is used.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="SECTION" displayText="Section" optional="YES" default="">
           <description><short_desc>
              The Section within the App Map to locate the entry.</short_desc>              
              <detailed_desc>
              If this parameter is left empty then the default App Map section is used.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="ITEM" displayText="Item" optional="NO" default="">
           <description><short_desc>
              The Item within the App Map to retrieve.</short_desc>              
              <detailed_desc>
              This parameter cannot be left empty.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="VARNAME" displayText="varName" optional="NO" default="">
           <description><short_desc>
              The name of the variable to receive the value.</short_desc>              
              <detailed_desc>
              This parameter cannot be left empty.
              </detailed_desc>
           </description>
        </parameter>

     </parameters><examples>
        <example>
           <usage>C,  GetAppMapValue,  Classics.MAP,  MainWindow,  FileMenu,  menuRec</usage>
           <description><short_desc> 
                 Get the value for FileMenu from the Classics.MAP in the MainWindow section and 
                 store it in the DDVariable named ^menuRec.
              </short_desc></description></example>
        <example>
           <usage>C,  GetAppMapValue, , , FileMenu,  menuRec</usage>
           <description><short_desc> 
                 Get the value for FileMenu from the "current" App Map in the default section and 
                 store it in the DDVariable named ^menuRec.
              </short_desc></description></example>
     </examples></keyword>
     
  <keyword name="GETREGISTRYKEYVALUE" 
           displayText="GetRegistryKeyValue" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Assign the value of the specified Registry Key to a variable.
              </short_desc>
              <detailed_desc>On Windows XP (and higher?) this is accomplished via 
              the REG.EXE provided by the operating system.  If this program is NOT available 
              then the Registry commands will not work until another means is implemented--possibly 
              Windows Scripting Host scripts, etc..
              <p>If the registry key does not exist then a failure will be recorded and no value--an  
              empty string--will be assigned to the variable.</p>
              </detailed_desc>
       </description>           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20091222" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20091222" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20091222" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="KEY" displayText="Key" optional="NO">
           <description> <short_desc> 
                 The Registry Key name to seek.
              </short_desc> </description> </parameter>
        <parameter name="KEYVALUE" displayText="KeyValue" optional="NO">
           <description> <short_desc> 
                 The value name under the parent key to seek.
              </short_desc></description> </parameter>
        <parameter name="VARNAME" displayText="VarName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the value of the registry key.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetRegistryKeyValue, "HKLM\Software\Adobe\CommonFiles", "AdobeHome", "AdobeHomeVar"</usage>
           <description> <short_desc> 
                 Get the value of the AdobeHome registry key and store it in the ^AdobeHomeVar variable.
              </short_desc> 
              <detailed_desc>If the registry key does not exist then a failure will be recorded and no value--an  
              empty string--will be assigned to the variable.</detailed_desc>
           </description> </example>
     </examples></keyword>

  <keyword name="EXPRESSIONS" 
           displayText="Expressions" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Enable and Disable enhanced expressions.
              </short_desc>
              <detailed_desc>
                 Enable and Disable enhanced expressions. 
                 When enabled, records are pre-processed for advanced
                 expressions (math and string) conversions with DDVariables.
                 When disabled, records are pre-processed with 
                 standard DDVariable conversions for backwards compatibility.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040929" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140611" >
	           <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java"
                            class="MISC"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The status for enhanced expression handling.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, Expressions, ON</usage>
           <description> <short_desc> 
                 Turn ON enhanced expression handling.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="APPMAPRESOLVE" 
           displayText="AppMapResolve" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Enable and Disable support for embedded DDVariables in App Map strings.
              </short_desc>
              <detailed_desc>
                 When enabled (ON), the App Map processor will resolve DDVariable references when 
                 they are wrapped in curly braces {^varName} anywhere in the value portion of an 
                 AppMap entry.  There should be no spaces anywhere between the curly braces or the 
                 variable will be considered literal text and will not be resolved.
                 <ul><code>
		 ;these two items have no section identifier<br/>
		 ;they are part of an initial, unnamed section<br/>
		 AnItem  = A normal static value<br/>
		 NewItem = Another static value<br/>
		 <br/>
		 [ASection]<br/>
		 AnItem = A normal static value<br/>
		 Item2  = Type=Component;Text={^text}<br/>
		 Item3  = Type=Window;Caption={^caption};\;Type=CheckBox;Text={^text}<br/>
		 <p>
		 The syntax for Item2 specifies that the value of the DDVariable ^text should be 
		 retrieved and embedded in the value provided for Item2.
		 </p><p>
		 The syntax for Item3 specifies that the value of the DDVariables ^caption and 
		 ^text should be retrieved and embedded in the value provided for Item3.
		 </p></code></ul>
		 <p>
		 Support is currently provided via the SAFSMAPS service.
		 </p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20060804" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20060804" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="ON">
           <description> <short_desc> 
                 Enable("ON") or Disable("OFF") this feature.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, AppMapResolve, OFF</usage>
           <description> <short_desc> 
                 Turn OFF the AppMapResolve feature which is ON by default.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="APPMAPCHAINING" 
           displayText="AppMapChaining" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Enable and Disable support for App Map chaining.
              </short_desc>
              <detailed_desc>
		 The SAFSMAPS service historically looked for values in the 'default' AppMap.  
		 This is typically the last AppMap that was OPENed.  This service will now lookup 
		 values in what is called the AppMap 'chain'.  This chain is simply a 
		 Last-In-First-Out (LIFO) buffer of open AppMaps.  As an AppMap is OPENed it is 
		 placed at the top of the search chain.  AppMaps already in the chain are moved 
		 down the chain and searched in a LIFO order.  This allows a primary AppMap to 
		 be OPENed that might contain many default and shared values while subsequently 
		 opened AppMaps might have overriding entries, entries that build upon the 
		 defaults, or contain locale-specific entries for things like NLS testing.
		 <p>
		 Support is currently provided via the SAFSMAPS service.
		 </p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20060804" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20060804" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="ON">
           <description> <short_desc> 
                 Enable("ON") or Disable("OFF") this feature.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, AppMapChaining, OFF</usage>
           <description> <short_desc> 
                 Turn OFF the AppMapChaining feature which is ON by default.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETBENCHDIRECTORY" 
           displayText="SetBenchDirectory" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Set/Change the directory in which the framework will find 
                 benchmark files by default.
              </short_desc>
              <detailed_desc>
                  The path must already exist.  If the path is invalid 
                  the previous setting will be retained (and logged).
                  Any incomplete path will be assumed to be relative 
                  to the current project directory.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

                  <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

</engines>

       <parameters>
        <parameter name="PATH" displayText="Path" optional="NO"> 
           <description> <short_desc> 
                 The full or project relative path to the new directory.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetBenchDirectory, "C:\MyRepo\MyProject\AltPath\Bench"</usage>
           <description> <short_desc> 
                 Set the new default location for stored benchmark files.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetBenchDirectory, "AltPath\Bench"</usage>
           <description> <short_desc> 
                 Set the new default location for stored benchmark files.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETTESTDIRECTORY" 
           displayText="SetTestDirectory" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Set/Change the directory in which the framework will find 
                 test files (captured "actuals") by default.
              </short_desc>
              <detailed_desc>
                  The path must already exist.  If the path is invalid 
                  the previous setting will be retained (and logged).
                  Any incomplete path will be assumed to be relative 
                  to the current project directory.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

       </engines>

       <parameters>
        <parameter name="PATH" displayText="Path" optional="NO"> 
           <description> <short_desc> 
                 The full or project relative path to the new directory.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetTestDirectory, "C:\MyRepo\MyProject\AltPath\Test"</usage>
           <description> <short_desc> 
                 Set the new default location for captured test files.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetTestDirectory, "AltPath\Test"</usage>
           <description> <short_desc> 
                 Set the new default location for captured test files.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETPROJECTDIRECTORY" 
           displayText="SetProjectDirectory" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Set/Change the framework project directory.
              </short_desc>
              <detailed_desc>
                  The path must already exist.  If the path is invalid 
                  the previous setting will be retained (and logged).
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

       </engines>

       <parameters>
        <parameter name="PATH" displayText="Path" optional="NO"> 
           <description> <short_desc> 
                 The full path to the new directory.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetProjectDirectory, "C:\MyRepo\MyProject\AltPath"</usage>
           <description> <short_desc> 
                 Set the new default project location.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETDIFDIRECTORY" 
           displayText="SetDifDirectory" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Set/Change the directory in which the framework will locate 
                 file compare differences.
              </short_desc>
              <detailed_desc>
                  The path must already exist.  If the path is invalid 
                  the previous setting will be retained (and logged).
                  Any incomplete path will be assumed to be relative 
                  to the current project directory.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

       </engines>

       <parameters>
        <parameter name="PATH" displayText="Path" optional="NO"> 
           <description> <short_desc> 
                 The full or project relative path to the new directory.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetDifDirectory, "C:\MyRepo\MyProject\AltPath\Dif"</usage>
           <description> <short_desc> 
                 Set the new default location for file compare differences.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetDifDirectory, "AltPath\Dif"</usage>
           <description> <short_desc> 
                 Set the new default location for file compare differences.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETROOTVERIFYDIRECTORY" 
           displayText="SetRootVerifyDirectory" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Set/Change the Bench, Test, and Dif directories 
                 to be subdirectories off of the provided path.
              </short_desc>
              <detailed_desc>
                 The path must already exist.  If the path is invalid 
                 the previous settings for Bench, Test, and Dif will
                 be retained and a FAILURE will be reported.  The Bench, 
                 Test, and Dif subdirectories must also exist.
                 <p>         
                 Any incomplete path will be assumed to be relative 
                 to the current project directory.  It is important 
                 to note that the provided path can be valid, yet 
                 the expected "Bench", "Test", and "Dif" subdirectories 
                 may not be valid.  In that scenario, no failure 
                 will be reported, and the previous settings for 
                 Bench, Test, and Dif will be retained (and logged).</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

       </engines>

       <parameters>
        <parameter name="PATH" displayText="Path" optional="NO"> 
           <description> <short_desc> 
                 The full or project relative path to the root directory for
                 Bench, Test, and Dif.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetRootVerifyDirectory, "C:\MyRepo\MyProject\AltPath"</usage>
           <description> <short_desc> 
                 Set the new root directory for Bench, Test, and Dif files.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetRootDirectory, "AltPath"</usage>
           <description> <short_desc> 
                 Set the new root directory for Bench, Test, and Dif files.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="USEROBOTJFUNCTIONS" 
           displayText="UseRobotJFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" RobotJ Hook Component Functions over 
                 Robot Classic Component Functions.
              </short_desc>
              <detailed_desc>
                 If enabled and the RobotJ hooking mechanism is up and running then StepDriver 
                 will always attempt to execute test records (T) through RobotJ first before 
                 defaulting to Robot Classic.
                 <p>
                 If the RobotJ hook is not fully available, this command will generate and 
                 log a WARNING.  If the record type is "CW" (Warning allowed), then we 
                 will issue an appropriate log message, but no WARNING will be counted.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="NO" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041012" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the use of the RobotJ hook.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseRobotJFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer RobotJ Component Functions over Robot Classic.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="USESAFSFUNCTIONS" 
           displayText="UseSAFSFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" SAFS (SDC) Functions over 
                 the current engine functions (like Robot Classic).
              </short_desc>
              <detailed_desc>
                 If enabled and the SAFS hooking mechanism is up and running the Driver 
                 will always attempt to execute test records through SAFS first before 
                 defaulting to the current engine (like Robot Classic).
                 <p>
                 If the SAFS hook is not fully available, this command will generate and 
                 log a WARNING.  If the record type contains the "W" (Warning allowed) 
                 modifier then we will issue an appropriate log message, but no WARNING 
                 will be counted.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20061222" 
                   expectFailSupport="NO" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20100930" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the use of the SAFS hook.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseSAFSFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer SAFS Functions over the current engine.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="USEIOSFUNCTIONS" 
           displayText="UseIOSFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" IOS Functions over 
                 any other engine functions.
              </short_desc>
              <detailed_desc>
                 If enabled, and the IOS engine is up and running, the Driver 
                 will always attempt to execute test records through IOS first before 
                 any other.
                 <p>
                 If the IOS engine is not fully available, this command will generate and 
                 log a WARNING.  If the record type contains the "W" (Warning allowed) 
                 modifier then we will issue an appropriate log message, but no WARNING 
                 will be counted.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20110705" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the preference of the engine.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseIOSFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer IOS Functions over any other engine.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="USEQTPFUNCTIONS" 
           displayText="UseQTPFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" QTP Functions over 
                 any other engine functions.
              </short_desc>
              <detailed_desc>
                 If enabled, and the QTP engine is up and running, the Driver 
                 will always attempt to execute test records through QTP first before 
                 any other.
                 <p>
                 If the QTP engine is not fully available, this command will generate and 
                 log a WARNING.  If the record type contains the "W" (Warning allowed) 
                 modifier then we will issue an appropriate log message, but no WARNING 
                 will be counted.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20110705" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the preference of the engine.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseQTPFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer QTP Functions over any other engine.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="USEABBOTFUNCTIONS" 
           displayText="UseAbbotFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" ABBOT Functions over 
                 any other engine functions.
              </short_desc>
              <detailed_desc>
                 If enabled, and the ABBOT engine is up and running, the Driver 
                 will always attempt to execute test records through Abbot first before 
                 any other.
                 <p>
                 If the ABBOT engine is not fully available, this command will generate and 
                 log a WARNING.  If the record type contains the "W" (Warning allowed) 
                 modifier then we will issue an appropriate log message, but no WARNING 
                 will be counted.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20110705" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the preference of the engine.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseAbbotFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer Abbot Functions over any other engine.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="USETESTCOMPLETEFUNCTIONS" 
           displayText="UseTestCompleteFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" TestComplete (TCAFS) Functions over 
                 any other engine functions.
              </short_desc>
              <detailed_desc>
                 If enabled, and the TCAFS engine is up and running, the Driver 
                 will always attempt to execute test records through TCAFS first before 
                 any other.
                 <p>
                 If the TCAFS engine is not fully available, this command will generate and 
                 log a WARNING.  If the record type contains the "W" (Warning allowed) 
                 modifier then we will issue an appropriate log message, but no WARNING 
                 will be counted.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20110705" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the preference of the engine.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseTestCompleteFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer TCAFS Functions over any other engine.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="USESELENIUMFUNCTIONS" 
           displayText="UseSeleniumFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" Selenium Functions over 
                 the current engine functions (like Robot Classic).
              </short_desc>
              <detailed_desc>
                 If enabled and the Selenium hooking mechanism is up and running the Driver 
                 will always attempt to execute test records through Selenium first before 
                 defaulting to the current engine (like Robot Classic).
                 <p>
                 If the Selenium hook is not fully available, this command will generate and 
                 log a WARNING.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20070413" 
                   expectFailSupport="NO" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20100930" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the use of the Selenium hook.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseSeleniumFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer Selenium Functions over the current engine.
              </short_desc> </description> </example>
     </examples></keyword>


  <keyword name="USEDRIODFUNCTIONS" 
           displayText="UseDroidFunctions" 
           expectWarnSupport="YES" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable the switch to "prefer" Droid Functions over 
                 the current engine functions (like Robot Classic).
              </short_desc>
              <detailed_desc>
                 If enabled and the Droid hooking mechanism is up and running the Driver 
                 will always attempt to execute test records through Droid first before 
                 defaulting to the current engine (like Robot Classic).
                 <p>
                 If the Droid hook is not fully available, this command will generate and 
                 log a WARNING.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20101031" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>           
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The switch status for enabling the use of the Droid hook.
                 Valid values are "ON" and "OFF".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, UseDroidFunctions, ON</usage>
           <description> <short_desc> 
                 Switch to prefer Droid Functions over the current engine.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETVARIABLEVALUES" 
           displayText="SetVariableValues" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                 Preset the value of one or more DDVariables </short_desc>
              <detailed_desc> 
                 Preset the value of one or more DDVariables.<br />
                 Each subsequent field can contain one variable expression. 
                 <i><p>Note: SAFS/DriverCommands and RobotJ actually implement an incompatible 
                 version of this command.  However, that version is normally never called by 
                 standard SAFS Drivers.</p>
                 <p>The variable handling is actually already done before Driver Commands can 
                 be called, and true Drivers or Processors do nothing but log success and return "NoScriptFailure".</p>
                 <p>The command remains for RobotJ and SAFS/DriverCommands for those people using 
                 not standard Drivers that do not process expressions before this call.  These are a rare breed, indeed!</p></i>
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20120326" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

             <engine name="WinRunner" 
  			       since="20020903" 
  			       tool="WinRunner" 
  			       vendor="Mercury Interactive">
  		       <libraryInfo class="MISC" 
  					name="DDDriverCommands" 
  					sourcecode="DDDriverCommands">
  		       </libraryInfo>
               </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable along with its value assignment
              </short_desc></description></parameter>
     </parameters><examples>
        <example> <usage>C,  SetVariableValues,  ^var1=value </usage>
           <description> <short_desc> 
                 Set variable var1 to contain "value"
              </short_desc> </description> </example>
        <example>
           <usage>C,  SetVariableValues,  ^var1=value, ^var2=value2, ^var3=^var1  </usage>
           <description> <short_desc> 
                 Set multiple variable values
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETVARIABLEVALUEEX" 
           displayText="SetVariableValueEx" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                 Set the value of a DDVariable </short_desc>
              <detailed_desc> 
                 The name field can contain literal string, DDVariable, or
                 any expression that evaluates to a valid variable name. </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable
              </short_desc></description></parameter>
        <parameter name="VARIABLEVALUE" displayText="VariableValue" optional="NO">
           <description> <short_desc> 
                 The value to assign to the variable
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C,  SetVariableValueEx,  var, value </usage>
           <description> <short_desc> 
                 Set variable var to contain "value" (euivalent to ^var=value)
              </short_desc> </description> </example>
        <example>
           <usage>C,  SetVariableValueEx,  ^varname, value </usage>
           <description> <short_desc> 
                 Given ^varname contains "var", set variable var to "value"
              </short_desc> </description> </example>
        <example>
           <usage>C,  SetVariableValueEx,  ^basename &amp; ^index, value </usage>
           <description> <short_desc> 
                 Any expression that evaluates to a valid DDVariable name may be used for the name field.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="COPYVARIABLEVALUEEX" 
           displayText="CopyVariableValueEx" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
       
       <description>
              <short_desc> 
                 Copy the value of a (dynamic) DDVariable to another.</short_desc>
              <detailed_desc> 
                 Both fields can contain literal strings, DDVariables, or
                 any expression that evaluates to a valid variable name.  The primary 
                 purpose of this is to allow for dynamic variable creation via expressions.
                 That is something that "SetVariableValues" cannot do.
              </detailed_desc>
                 
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="SOURCEVARIABLE" displayText="SourceVariable" optional="NO">
           <description> <short_desc> 
                 The name of the variable to copy.
              </short_desc></description></parameter>
        <parameter name="DESTINATIONVARIABLE" displayText="DestinationVariable" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the copy
              </short_desc></description></parameter>
     </parameters><examples>
        <example>
           <usage>C,  CopyVariableValueEx,  srcvar, destvar </usage>
           <description> <short_desc> 
                 Copy the value of variable srcvar to variable destvar (euivalent to ^destvar=^srcvar)
              </short_desc> </description> </example>
        <example>
           <usage>C,  CopyVariableValueEx,  ^srcvarname, ^destvarname </usage>
           <description> <short_desc> 
                 Given ^srcvarname contains "srcvar" and ^destvarname contains "destvar", 
                 this sets ^destvar to ^srcvar
              </short_desc> </description> </example>
        <example>
           <usage>C,  CopyVariableValueEx,  ^basename &amp; ^index, destvar </usage>
           <description> <short_desc> 
                 Any expression that evaluates to a valid DDVariable name may be used.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETIMAGEDEBUG" 
           displayText="SetImageDebug" 
           expectWarnSupport="NO" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable verbose debug log output and high-res failure snapshots.
              </short_desc>
              <detailed_desc>
                 By default the image-based testing algorithm writes JPG screenshots to the Datapool\Test 
                 directory when an image search fails to locate the desired image onscreen.  These images 
                 can help the user know the state of the system at the time of a specific test failure.
                 <p>
                 However, these images are not suitable for more advanced debugging purposes such as finding 
                 out 'why' a target image was not found in the screenshot when it appears it should have been 
                 found.</p>
                 <p>
                 Enabling image debugging allows the system to output full-resolution BMP images into the 
                 Datapool\Test directory instead of JPG images.  It also writes more verbose debug information 
                 into the SAFS Debug Log if the user has the Debug Log running during the test. 
                 See: <a href="http://safsdev.sourceforge.net/doc/org/safs/Log.html" target="blank">Debug Log Doc</a></p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20090129" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141126" >
	           <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The boolean status for enabling extended image debugging. 
              </short_desc> <detailed_desc>
                 Valid case-insensitive values to enable are "TRUE", "ON", "YES", "1", and "-1". 
                 All other values will disable this mode.
              </detailed_desc></description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetImageDebug, ON</usage>
           <description> <short_desc> 
                 Switch enhanced image debugging features ON.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetImageDebug, Nope</usage>
           <description> <short_desc> 
                 Switch enhanced image debugging features OFF.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETIMAGEFUZZYMATCHING" 
           displayText="SetImageFuzzyMatching" 
           expectWarnSupport="NO" 
           deprecated="NO" 
           expectFailSupport="NO">
           
       <description> <short_desc> 
                 Enable/Disable Image-Based Testing Fuzzy Matching.
              </short_desc>
              <detailed_desc>
                 Allows more robust fuzzy matching on image comparisons during Image-Based Testing.  
                 Image-Based Testing recognition strings must have a BitTolerance (BT) of less than 
                 100% specified for an image that is intended to be found with the fuzzy matching algorithm.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20131212" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141126" >
	           <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="NO" default="OFF">
           <description> <short_desc> 
                 The boolean status for enabling extended image-based fuzzy matching. 
              </short_desc> <detailed_desc>
                 Valid case-insensitive values to enable are "TRUE", "ON", "YES", "1", and "-1". 
                 All other values will disable this mode.
              </detailed_desc></description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetImageFuzzyMatching, ON</usage>
           <description> <short_desc> 
                 Switch enhanced image fuzzy matching features ON.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetImageFuzzyMatching, OFF</usage>
           <description> <short_desc> 
                 Switch enhanced image matching features OFF.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="LAUNCHAPPLICATION" 
           displayText="LaunchApplication" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Identify and Launch a specified application
              </short_desc> 
              <detailed_desc>
              For IOS: This command is used to Launch the IOS Instruments testing tool.
              The user-defined Instrument's tracetemplate is used to launch the required application. 
              The tester must run the Driver Command <b>UseIOSFunctions</b> set to "ON" before 
              LaunchApplication or the IOS implementation of the command will not be invoked.
              <p>For IOS Simulator testing: The Trace Template must be configured to hold all required 
              information such as:
              <ul>
              <li>the application to be tested</li>
              <li>the IOS SDK Version to use/simulate</li>
              <li>the location for Instruments output logging</li>
              </ul>
              </p><p>For IOS Device testing: The Trace Template should be configured to hold the same 
              information. However, at runtime the user still has to (re)specify the device name and 
              application to run in the LaunchApplication CMDLineParams (see below). In addition, 
              the devicename and/or appname CANNOT contain certain special characters like an apostrophe or 
              single-quote (') since this will prevent AppleScript from making their proper selection.
              </p><p>For Android testing: The AUT information is configured via the test INI file and 
              the installed APKs.  There are no parameters to provide to the LaunchApplication call when 
              launching the application to be tested.
              </p>
              </detailed_desc></description>
           
       <engines>
            <engine vendor="Google" tool="Android" name="Android" since="20120501" >
				<libraryInfo name="DDriverCommand" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDriverCommand.html" 
					 sourcecode="org.safs.android.DDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20120501">
	        			<libraryInfo name="SoloRemoteControl" 
                             doc="http://safsdev.sourceforge.net/doc/com/jayway/android/robotium/remotecontrol/solo/SoloRemoteControl.html" 
                             sourcecode="com.jayway.android.robotium.remotecontrol.solo.SoloRemoteControl.java" 
                             class="MISC" />
                    </domain>
                </domains>
            </engine>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="Apple" tool="IOS" name="Apple XCode Instruments" since="20111011" >
	       <libraryInfo name="IDriverCommand" 
                            doc="org/safs/ios/IDriverCommand.html" 
                            sourcecode="org.safs.ios.IDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  		       since="20020903" 
  		       tool="WinRunner" 
  		       vendor="Mercury Interactive">
  	       <libraryInfo class="MISC" 
  				name="DDDriverCommands" 
  				sourcecode="DDDriverCommands">
  	       </libraryInfo>
               </engine>
       </engines>

       <parameters>
        <parameter name="APPLICATIONID" displayText="ApplicationID" optional="NO">
           <description>  <short_desc> 
                 A text ID or name to reference the application
              </short_desc> <detailed_desc> 
                 A text ID or name to reference the application.  Something to call it 
                 during possible future references in DDE tables or scripts.  This is 
                 different than a window ID.  It is what we want to call the App itself.
              </detailed_desc> </description> </parameter>
        <parameter name="EXECUTABLEPATH" displayText="ExecutablePath" optional="NO">
           <description>  <short_desc> 
                 The path, filename, and parameters for the executable OR an ApplicationConstant.
              </short_desc> <detailed_desc> 
                 The path and filename to the executable OR an ApplicationConstant.<br />
                 This can and should include the full command line syntax with application 
                 specific command line parameters unless the application is unable to 
                 successfully handle this invocation.
                 <p>
                 This ExecutablePath parameter may instead contain a reference to an
                 ApplicationConstant from the currently active Application Map.  The value 
                 of the retrieved constant will be used as the ExecutablePath.</p>
                 <p>For IOS: This should resolve to the full path to the Instruments 
                 trace template that will be used to launch the application.</p>
              </detailed_desc> </description> </parameter>
        <parameter name="WORKDIR" displayText="WorkDir" optional="YES" default="">
           <description> <short_desc> 
                 A Working Directory for the application (if required)
              </short_desc> <detailed_desc> 
                 A Working Directory for the application (if required).
                 Do not provide this if it is not required by the application.
                 If you DO provide this then the DDE cannot automatically terminate 
                 the application if things go really bad.
                 <p>For IOS: This should resolve to be the path to the directory that will 
                 contain the Instruments output log.</p>
              </detailed_desc> </description> </parameter>
        <parameter name="CMDLINEPARAM" displayText="CMDLineParam" optional="YES" default="">
           <description> <short_desc> 
                 Separate command line parameters for the application (if required).
              </short_desc> <detailed_desc> 
                 Command line parameters for the application (if required).
                 Do not provide this if it is not required by the application.
                 <p>For RRAFS: Try to include all command line parameters within the ExecutablePath<br />
                 If you DO provide separate command line paratmeters then the RRAFS DDE 
                 cannot automatically terminate the application if things go really bad.
                 </p><p>For IOS Device testing: the device and application must be specified <b>exactly</b> 
                 as they will appear in the Instruments "Choose Target" configuration menus. The parameters 
                 should be specified inline as:
                 </p><p>
                 <ul>
                 <li>-d [DeviceMenuItem] -app [AppNameMenuItem]</li>
                 </ul>
                 </p><p>Example: "-d Carls iPad (v5.0) -app UICatalog"
                 </p><p>For IOS Simulator testing: 
                 this parameter is not needed and should not contain any -d or -app options.
                 </p><p>For compatibility with different inputrecord separators, the SAFS/IOS engine supports 
                 different delimiters to be used with -d and -app. Supported Delimiters are (:;, ).
                 </p><p>Examples:
                 </p><p><ul>
                 <li>"-d:Carls iPad (v5.0) -app:UICatalog"</li>
                 <li>"-d;Carls iPad (v5.0) -app;UICatalog"</li>
                 <li>"-d,Carls iPad (v5.0) -app,UICatalog"</li>
                 <li>"-d Carls iPad (v5.0) -app UICatalog"</li>
                 </ul>
                 </p><p>
                 (Of course, you cannot use a comma delimiter here if the inputrecord itself is comma delimited.)
                 </p>
              </detailed_desc> </description> </parameter>
        <parameter name="APPMAP" displayText="AppMap" optional="YES">
           <description>
              <short_desc> 
                 Filename to the Application Map for the application.
              </short_desc> <detailed_desc> 
                 Filename to the Application Map for the application.
                 You can provide a short filename (no path) if the map file can be found by
                 the FindSQAFile function.  Typically, the AppMap is placed in the 
                 project's Datapool directory.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, LaunchApplication, NotePad, "notepad.exe c:\sample.txt" </usage>
           <description> <short_desc> 
                 Launch Notepad with parameters allowing the DDE to terminate Notepad.
              </short_desc> </description> </example>
        <example>
           <usage>C, LaunchApplication, NotePad, SampleFile </usage>
           <description> <short_desc> 
                 Launch Notepad using the ApplicationConstant "SampleFile" in the current AppMap.
              </short_desc> <detailed_desc> 
                 Launch Notepad using the ApplicationConstant "SampleFile" in the current AppMap.
                 The SampleFile constant in the AppMap might contain the value:
                 <code>
                     "notepad.exe c:\sample.txt"
                 </code>
              </detailed_desc> </description> </example>
        <example>
           <usage>C, LaunchApplication, MainAUT, "c:\MyApp.EXE", , , MainAppMap.MAP </usage>
           <description> <short_desc> 
                 Launch MainAUT providing a reference to its AppMap.
              </short_desc> <detailed_desc> 
                 Launch MainAUT providing a reference to its AppMap.<br />
                 No working directory or separate command line parameters are provided.
              </detailed_desc> </description> </example>
        <example>
           <usage>C, LaunchApplication, MainAUT, "c:\AppDir\MyApp.EXE", "c:\AppDir\", "-s -e -automation", MainAppMap.MAP </usage>
           <description> <short_desc> 
                 Launch MainAUT providing a working directory, command line parameters, and a reference to its AppMap.
              </short_desc> </description> </example>
        <example>
           <usage>C, LaunchApplication, MyIOSApp, MyAppTemplate, TheWorkDir</usage>
           <description> <short_desc> 
                 Launch an IOS App on the IOS Simulator.
              </short_desc><detailed_desc>
                 MyAppTemplate and TheWorkDir are stored in the Application Map in ApplicationConstants and properly 
                 specify the path to the Trace Template and the path to the Instruments output folder as specified 
                 in the Trace Template.
              </detailed_desc>
           </description> </example>
        <example>
           <usage>C,LaunchApplication,MyIOSApp, "/Library/safs/samples/UICatalog/UICatalogInstruments.tracetemplate", "/Library/safs/samples/UICatalog/"</usage>
           <description> <short_desc> 
                 Launch an IOS App on the IOS Simulator.
              </short_desc><detailed_desc>
                 The Trace Template and Output path are specified explicitly (not recommended).
              </detailed_desc>
           </description> </example>
        <example>
           <usage>C, LaunchApplication, MyIOSApp, MyAppTemplate, TheWorkDir, "-d:iPad2 (v5.0) -app:UICatalog"</usage>
           <description> <short_desc> 
                 Launch an IOS App on the specified IOS Device.
              </short_desc><detailed_desc>
                 MyAppTemplate and TheWorkDir are stored in the Application Map in ApplicationConstants and properly 
                 specify the path to the Trace Template and the path to the Instruments output folder as specified 
                 in the Trace Template.
                 <p>The CMDLineParam specifies "-d:Device -app:AppName". The Device and AppName 
                 pieces must be specified exactly as they will appear in the Instruments Choose Target menus.
                 </p>
              </detailed_desc>
           </description> </example>
     </examples></keyword>
     
  <keyword name="CLOSEAPPLICATION" 
           displayText="CloseApplication" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Close a named application process launched with LaunchApplication.
              </short_desc>
              <detailed_desc> 
                 Currently we can only TERMINATE processes successfully 
                 providing a TASKID during LaunchApplication.  If we were 
                 unable to get a TASKID, then we will not be able to 
                 terminate the task with this command.
                 <p>For IOS: This simply tries to close any and all instances of the 
                 running XCode Instruments application that is driving the IOS tests.
                 </p><p>For Android testing: The AUT information is configured via the test INI file and 
                 the installed APKs.  There are no parameters to provide to the CloseApplication call when 
                 closing the application under test.
              </p>
              </detailed_desc> </description>
           
       <engines>
            <engine vendor="Google" tool="Android" name="Android" since="20120501" >
				<libraryInfo name="DDriverCommand" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDriverCommand.html" 
					 sourcecode="org.safs.android.DDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20120501">
	        			<libraryInfo name="SoloRemoteControl" 
                             doc="http://safsdev.sourceforge.net/doc/com/jayway/android/robotium/remotecontrol/solo/SoloRemoteControl.html" 
                             sourcecode="com.jayway.android.robotium.remotecontrol.solo.SoloRemoteControl.java" 
                             class="MISC" />
                    </domain>
                </domains>
            </engine>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="Apple" tool="IOS" name="Apple XCode Instruments" since="20111011" >
	       <libraryInfo name="IDriverCommand" 
                            doc="org/safs/ios/IDriverCommand.html" 
                            sourcecode="org.safs.ios.IDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
               </engine>
       </engines>

       <parameters>
        <parameter name="APPLICATIONID" displayText="ApplicationID" optional="NO">
           <description>  <short_desc> 
                 The Application ID or reference provided to LaunchApplication
              </short_desc> 
              <detailed_desc>
              For IOS: The ApplicationID can be anything because it is ignored. 
              The IOS engine simply shuts down all running IOS Instruments applications.
              </detailed_desc></description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, CloseApplication, NotePad </usage>
           <description> <short_desc> 
                 Close the application we called Notepad with LaunchApplication.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SETAPPLICATIONMAP" 
           displayText="SetApplicationMap" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Provide the Application Map for the DDE to use
              </short_desc> <detailed_desc> 
                 Provide the Application Map for the DDE to use.  This command must be used 
                 prior to ANY other command or script referencing the AppMap can be used.  The 
                 AppMap can also be set by the DDE initialization script or another script with 
                 the function AUSetCurrentAppMap.
              <p>
              In addition to loading the Application Map, WRAFS will also load the GUI Map file
              in Winrunner. For this reason, the Application map and GUI Map File must have
              the same name.
              </p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20040922" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine name="WinRunner" 
			       since="20020903" 
			       tool="WinRunner" 
			       vendor="Mercury Interactive">
		       <libraryInfo class="MISC" 
					name="DDDriverCommands" 
					sourcecode="DDDriverCommands">
		       </libraryInfo>
       	    </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java"
                            class="MISC"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="APPLICATIONMAP" displayText="ApplicationMap" optional="NO">
           <description>  <short_desc> 
                 The path and/or filename of the Application Map to use
              </short_desc> <detailed_desc> 
                 The path and/or filename of the Application Map to use.  The short filename 
                 without the path can be used if the file can be found via FindSQAFile.
                 Typically, the AppMap is located in the project's Datapool directory.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetApplicationMap, NotePad.Map </usage>
           <description> <short_desc> 
                 Set the Application Map to be Notepad.Map in the Datapool directory.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetApplicationMap, "C:\SomeDir\NewApp.Map" </usage>
           <description> <short_desc> 
                 Set the Application Map to an explicitly pathed Map
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="CLOSEAPPLICATIONMAP" 
           displayText="CloseApplicationMap" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 By map ID, Close a opened Application Map in map chain.
              </short_desc> <detailed_desc> 
                 By map ID, Close a opened Application Map in map chain. Closing an App Map releases all resources 
                 used by the map and removes it from any active App Map chaining.  If the closed App Map 
                 was the "default" map then the next App Map in the chain becomes the "default" App Map.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20100910" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java"
                            class="MISC"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="APPLICATIONMAP" displayText="ApplicationMap" optional="NO">
           <description>  <short_desc> 
                 The path and/or filename (ID) of the Application Map to close.
              </short_desc> <detailed_desc> 
                 The path and/or filename (ID) of the Application Map to close.  This must be the same 
                 path or filename used when the App Map was opened.  The short filename 
                 without the path can be used if the file can be found via internal search algorithms.  
                 Typically, the AppMap is located in the project's Datapool directory.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, CloseApplicationMap, NotePad.Map </usage>
           <description> <short_desc> 
                 Close the Notepad.map App Map in the Datapool directory.
              </short_desc> <detailed_desc>
                 The App Map must have been opened with the same short name information.
              </detailed_desc>
           </description> </example>
        <example>
           <usage>C, CloseApplicationMap, "C:\SomeDir\NewApp.Map" </usage>
           <description> <short_desc> 
                 Close the NewApp.map Application Map.
              </short_desc> <detailed_desc>
                 The App Map must have been opened with the same fullpath information.
              </detailed_desc>
           </description> </example>
     </examples></keyword>
     
  <keyword name="STARTWEBBROWSER" 
           displayText="StartWebBrowser" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Launch a new web browser and optionally load a document into it.
              </short_desc>
              <detailed_desc>
              <b>Windows TID, SDC, and RFT Support:</b><br/>
              This command in the above engines now supports using the System default browser. 
              By default, the System default browser will be used to launch the URL.  (Previous 
              versions of this command were unfortunately hardcoded to use Internet Explorer only.)
              <p>
              In addition, the tester can set a SAFS variable directly or through ApplicationConstants 
              to provide the full path to an alternate browser executable.  By setting and clearing 
              this variable the tester can switch between using the System default browser and an 
              alternate browser dynamically during runtime.
              </p><p>
              Variable Name: <b>SAFSWebBrowserPath</b>
              </p>
			<ul><pre>
<b>Sample SAFS variable usage:</b>	

;Set an alternate browser to use:
C, SetVariableValues, ^SAFSWebBrowserPath="C:\Program Files\Mozilla Firefox\firefox.exe"
			
;Clear to return to System default browser:
C, SetVariableValues, ^SAFSWebBrowserPath=""
			
<b>Sample ApplicationConstants usage:</b>
			
;provide a value used for all browser launches
[ApplicationConstants]
...
SAFSWebBrowserPath="C:\Program Files\Mozilla Firefox\firefox.exe"
</pre>
</ul>
		(Note: if the tester ever "sets" or clears the SAFS variable then 
		     any ApplicationConstants setting is no longer used.)<br/>
		 <b>Selenium Note:</b>The parameters from 4 are specially for Selenium 2.0 (WebDriver) for now.<br/>
		 					 The parameters from 8 are extra parameter settings for Selenium 2.0 (WebDriver), they appear as pair(key, value),
		 					 for example #8 is the key, #9 is the value; #10 is the key, #11 is the value; and so on.
		 					 you can specify extra parameters as many as wanted if they are supported.<br/>
              </detailed_desc>
       </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20061218" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140102" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="URL" displayText="URL" optional="YES" default="">
           <description> <short_desc> 
                 URL of a web resource to load in the new browser instance.
             </short_desc><detailed_desc>
                 This field can be empty which may produce different results in different browsers.  
                 When using the system default browser on Windows, this empty field will typically 
                 generate a blank web page, or an "about:blank" page.
                 <p>
                 Some browsers, like Internet Explorer, support other URLs like "about:home"--
                 which will launch the browser and display whatever the Home page is set to.  However, 
                 not all browsers support this.
                 </p><p>
                 For consistency, it is usually necessary to include the full URL syntax--including 
                 the protocol portion of the URL (http://, https://, ftp://, etc..).
                 </p>
           </detailed_desc> </description> </parameter>
        <parameter name="WINDOWTAG" displayText="WindowTag" optional="YES" default="">
           <description> <short_desc> 
                 A WindowTag or Browser ID to call the new browser instance. </short_desc> 
                 <detailed_desc>
                 This Tag might be used by some test tools to track specific browser instances, 
                 but not all test tools are able to support this type of browser Tagging.<br/>
		<B>SE2</B>The indentifier used to store the webdriver for the opened browser. It can be used to
		switch between opened browsers or close one of them.
		</detailed_desc>
             </description> </parameter>
        <parameter name="BROWSERNAME" displayText="BrowserName" optional="YES" default="firefox">
           <description> <short_desc> 
				<B>SE2</B>The browser to open. It can be "explorer", "chrome" or "firefox". "firefox" is default.
             </short_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="timeout" optional="YES" default="15">
           <description> <short_desc> 
				<B>SE2</B>Specifies the amount of time the selenium web driver should wait 
				when searching for an element if it is not immediately present.
             </short_desc> </description> </parameter>
        <parameter name="ISREMOTEBROWSER" displayText="IsRemoteBrowser" optional="YES" default="true">
           <description> <short_desc> 
		<B>SE2</B>True = use Selenium RemoteDriver.</short_desc>
		<detailed_desc>True = use Selenium RemoteDriver.  Otherwise, use the FirefoxDriver, 
		ChromeDriver or InternetExplorerDriver.<br/>
		This parameter is ignored now for SE2 as it always uses a RemoteDriver.
             </detailed_desc> </description> </parameter>
        <parameter name="EXTRAPARAMKEY" displayText="ExtraParamKey" optional="YES">
           <description> <short_desc> 
				<B>SE2</B>The extra parameter key. You can use one of 
				<a href="http://safsdev.sourceforge.net/doc/org/safs/selenium/webdriver/lib/SelectBrowser.html#getExtraParameterKeys()" 
					target="reference" alt="Extra parameter keys">Extra parameter keys</a>.
             </short_desc> </description> </parameter>
        <parameter name="EXTRAPARAMVALUE" displayText="ExtraParamValue" optional="YES">
           <description> <short_desc> 
				<B>SE2</B>The value of the extra parameter indicated by ExtraParamKey above.
             </short_desc> </description> </parameter>
             
     </parameters><examples>
        <example>
           <usage>C, StartWebBrowser </usage>
           <description> <short_desc> 
                 Launch a new browser with no special ID and no URL to load.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "", WebBrowser</usage>
           <description> <short_desc> 
                 Launch a new browser with a WindowTag of WebBrowser and no URL to load.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "http://aUrl.jsp", WebBrowser</usage>
           <description> <short_desc> 
                 Launch a new browser with a WindowTag of WebBrowser and a URL to load.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "http://aUrl.jsp"</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new firefox browser with a URL to load.
              </short_desc> </description> </example>              
        <example>
           <usage>C, StartWebBrowser, "http://aUrl.jsp", "", "FirstTestPage", "firefox", 20</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new firefox browser with a URL to load, this browser will be stored with ID 'FirstTestPage'
                 and on this page the search of webelement has a timeout of 20 seconds.
              </short_desc> </description> </example> 
        <example>
           <usage>C, StartWebBrowser, "http://aUrl.jsp", "", "FirstTestPage", "firefox", 20, "", "KEY_PROXY_SETTING", "proxy-server:80"</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new firefox browser with a URL to load, this browser will be stored with ID 'FirstTestPage'
                 and on this page the search of webelement has a timeout of 20 seconds, and the internet proxy server 
                 has been set to "proxy-server:80" for this browser.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "http://www.google.com", "", "GoogleMain", "firefox", 20, "", "FirefoxProfile", "myprofile"</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new firefox browser with custom profile "myprofile" 
                 (<a href="https://support.mozilla.org/en-US/kb/profile-manager-create-and-remove-firefox-profiles">Create custom profile</a>), Google page will be loaded, 
                 this browser will be stored with ID 'GoogleMain' and on this page the search of webelement has a timeout of 20 seconds.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "http://www.google.com", "", "GoogleMain", "chrome", 20, "", "user-data-dir", "c:\chrome_custom_data"</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new chrome browser with custom data pool "c:\chrome_custom_data" 
                 (<a href="http://www.chromium.org/developers/creating-and-using-profiles">Create custom data pool</a>), Google page will be loaded, 
                 this browser will be stored with ID 'GoogleMain' and on this page the search of webelement has a timeout of 20 seconds.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "http://www.google.com", "", "GoogleMain", "chrome", 20, "", "user-data-dir", "C:\Users\xxx\AppData\Local\Google\Chrome\User Data"</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new chrome browser with default data pool "C:\Users\xxx\AppData\Local\Google\Chrome\User Data" using the recent chrome user
                 (chrome://version/, see "Profile Path"), Google page will be loaded, 
                 this browser will be stored with ID 'GoogleMain' and on this page the search of webelement has a timeout of 20 seconds.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "http://www.google.com", "", "GoogleMain", "chrome", 20, "", "user-data-dir", "C:\Users\xxx\AppData\Local\Google\Chrome\User Data", "profile-directory", "Profile 1"</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new chrome browser with default data pool "C:\Users\xxx\AppData\Local\Google\Chrome\User Data" using the first chrome user
                 (chrome://version/, see "Profile Path"), Google page will be loaded, 
                 this browser will be stored with ID 'GoogleMain' and on this page the search of webelement has a timeout of 20 seconds.
              </short_desc> </description> </example>
        <example>
           <usage>C, StartWebBrowser, "http://www.google.com", "", "GoogleMain", "chrome", 20, "", "excludeSwitches", "disable-component-update; ignore-certificate-errors"</usage>
           <description> <short_desc> 
                 <B>SE2</B>Launch a new chrome browser with temporary data pool and with option '--disable-component-update' and '--ignore-certificate-errors' excluded,
                 (chrome://version/, see "Profile Path"), Google page will be loaded, 
                 this browser will be stored with ID 'GoogleMain' and on this page the search of webelement has a timeout of 20 seconds.<br/>
                 The value "disable-component-update; ignore-certificate-errors" can also be separated by comma if semicolon conflicts with your test-record-separator
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="STOPWEBBROWSER" 
           displayText="StopWebBrowser" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Stop an opened web browser indicated by ID.
              </short_desc>
              <detailed_desc>
             	Stop an opened web browser indicated by ID. This ID is assigned by user
             	during calling keyword StartWebBrowser.
              </detailed_desc>
       </description>
           
       <engines>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140102" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="BROWSERID" displayText="BrowserID" optional="YES" default="MainApp">
           <description> <short_desc> 
				The indentifier used to get the webdriver for the opened browser. This ID is assigned by user
             	during calling keyword StartWebBrowser.
             </short_desc> </description> </parameter>
             
     </parameters><examples>
        <example>
           <usage>C, StopWebBrowser </usage>
           <description> <short_desc> 
                 Stop an opened browser indicated by default ID 'MainApp'.
              </short_desc> </description> </example>
        <example>
           <usage>C, StopWebBrowser, "FirstTestPage"</usage>
           <description> <short_desc> 
                 Stop an opened browser indicated by ID 'FirstTestPage'.
              </short_desc> </description> </example>

     </examples></keyword>
     
  <keyword name="USEWEBBROWSER" 
           displayText="UseWebBrowser" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Switch to use an opened web browser indicated by ID.
              </short_desc>
              <detailed_desc>
             	Switch to use an opened web browser indicated by ID. This ID is assigned by user
             	during calling keyword StartWebBrowser.
              </detailed_desc>
       </description>
           
       <engines>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140102" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="BROWSERID" displayText="BrowserID" optional="YES" default="MainApp">
           <description> <short_desc> 
				The indentifier used to get the webdriver for the opened browser. This ID is assigned by user
             	during calling keyword StartWebBrowser.
             </short_desc> </description> </parameter>
             
     </parameters><examples>
        <example>
           <usage>C, UseWebBrowser </usage>
           <description> <short_desc> 
                 Switch to us an opened browser indicated by default ID 'MainApp'.
              </short_desc> </description> </example>
        <example>
           <usage>C, UseWebBrowser, "FirstTestPage"</usage>
           <description> <short_desc> 
                 Switch to use an opened browser indicated by ID 'FirstTestPage'.
              </short_desc> </description> </example>

     </examples></keyword>

  <keyword name="WAITFORWEBPAGE" 
           displayText="WaitForWebPage" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Wait for a web document to finish loading within a timeout period.
              </short_desc> </description>

       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080812" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070202" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="WINDOWID" displayText="WindowID" optional="YES" default="">
           <description> <short_desc> 
                 A Window reference from the AppMap
              </short_desc> <detailed_desc> 
                 If ComponentID is provided then providing WindowID is REQUIRED.
              </detailed_desc> </description> </parameter>
        <parameter name="COMPONENTID" displayText="ComponentID" optional="YES" default="">
           <description> <short_desc> 
                 A reference from the AppMap for the Frame/HTMLDocument within WindowID to wait for.
              </short_desc> <detailed_desc> 
                 If this parameter is provided then providing WindowID is REQUIRED.
              </detailed_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="Timeout" optional="YES" default="30">
           <description> <short_desc> 
                 Timeout value in seconds before exiting automatically.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, WaitForWebPage </usage>
           <description> <short_desc> 
                 Waits up to 30 seconds for the topmost web page to finish loading.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForWebPage, "", "", 60</usage>
           <description> <short_desc> 
                 Waits up to 60 seconds for the topmost web page to finish loading.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForWebPage, MainWebApp, TOCFrameDoc, 20</usage>
           <description> <short_desc> 
                 Waits up to 20 seconds for the TOCFrameDoc web page to finish loading.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="PAUSE" displayText="Pause" deprecated="NO" expectFailSupport="NO"
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Pause for a specified number of seconds.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="TIMEOUT" displayText="Timeout" optional="NO">
           <description> <short_desc> 
                 The number of seconds to Pause.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, Pause, 30</usage>
           <description> <short_desc> 
                 Pause for 30 seconds.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="DELAY" 
           displayText="Delay" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Delay for a specified number of milliseconds.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="TIMEOUT" displayText="Timeout" optional="NO">
           <description> <short_desc> 
                 The number of milliseconds to delay.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, Delay, 300</usage>
           <description> <short_desc> 
                 Delay for 300 milliseconds.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="WAITFORGUI" 
           displayText="WaitForGUI" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Wait for a Window or Window Component to become valid.
              </short_desc> <detailed_desc>
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" 
		target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries.
		</p></detailed_desc>
       </description>           
       <engines>
            <engine vendor="Google" tool="Android" name="Android" since="20120531" >
				<libraryInfo name="DDriverCommand" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDriverCommand.html" 
					 sourcecode="org.safs.android.DDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20120531">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
            </engine>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20080918" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070202" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/selenium/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	       <libraryInfo name="DDDriverCommands" 
			       doc="DDDriverCommandsReference.htm"
			       sourcecode="DriverCommands.SVB" 
			       class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="WINDOWID" displayText="WindowID" optional="NO">
           <description> <short_desc> 
                 A Window reference from the AppMap
              </short_desc> </description> </parameter>
        <parameter name="COMPONENTID" displayText="ComponentID" optional="NO">
           <description> <short_desc> 
                 A reference from the AppMap for the Component within the Window to wait for.
              </short_desc> <detailed_desc> 
                 A reference from the AppMap for the Component within the Window to wait for.
                 If the Window is the item of interest then both the WindowID and 
                 ComponentID will be the same.
              </detailed_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="Timeout" optional="YES" default="15">
           <description> <short_desc> 
                 Timeout value in seconds before exiting automatically.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, WaitForGUI, AWindow, AWindow </usage>
           <description> <short_desc> 
                 Waits up to 30 seconds for AWindow to become valid.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForGUI, AWindow, AWindow, 10 </usage>
           <description> <short_desc> 
                 Waits up to 10 seconds for AWindow to become valid.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForGUI, AWindow, AComponent, 10 </usage>
           <description> <short_desc> 
                 Waits up to 10 seconds for AComponent within AWindow to become valid.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="WAITFORGUIGONE" 
           displayText="WaitForGUIGone" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Wait for a Window or Window Component to become invalid.
              </short_desc> <detailed_desc>
		<p>
		Note: the TID supports this command using 
		<a href="http://safsdev.sourceforge.net/sqabasic2000/SAFSImageBasedRecognition.htm" 
		target="imagebased" alt="SAFS Image-Based Recognition Doc">Image-Based Testing</a> 
		techniques and App Map entries.
		</p></detailed_desc>
	</description>           
       <engines>
            <engine vendor="Google" tool="Android" name="Android" since="20120531" >
				<libraryInfo name="DDriverCommand" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDriverCommand.html" 
					 sourcecode="org.safs.android.DDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20120531">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
            </engine>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20080918" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>
            <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	    	       <libraryInfo name="DDDriverCommands" 
	    			       doc="DDDriverCommandsReference.htm"
	    			       sourcecode="DriverCommands.SVB" 
	    			       class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141126">
	           <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="WINDOWID" displayText="WindowID" optional="NO">
           <description> <short_desc> 
                 A Window reference from the AppMap
              </short_desc> </description> </parameter>
        <parameter name="COMPONENTID" displayText="ComponentID" optional="NO">
           <description> <short_desc> 
                 A reference from the AppMap for the Component within the Window to watch.
              </short_desc> <detailed_desc> 
                 A reference from the AppMap for the Component within the Window to watch.
                 If the Window is the item of interest then both the WindowID and 
                 ComponentID will be the same.
              </detailed_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="Timeout" optional="YES" default="15">
           <description> <short_desc> 
                 Timeout value in seconds before exiting automatically.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, WaitForGUIGone, AWindow, AWindow </usage>
           <description> <short_desc> 
                 Waits up to 30 seconds for AWindow to become invalid.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForGUIGone, AWindow, AWindow, 10 </usage>
           <description> <short_desc> 
                 Waits up to 10 seconds for AWindow to become invalid.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForGUIGone, AWindow, AComponent, 10 </usage>
           <description> <short_desc> 
                 Waits up to 10 seconds for AComponent within AWindow to become invalid.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="WAITFORPROPERTYVALUE" 
           displayText="WaitForPropertyValue" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Wait for a specific Window or Component property value to match an expected value.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031119" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>
            <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	    	       <libraryInfo name="DDDriverCommands" 
	    			       doc="DDDriverCommandsReference.htm"
	    			       sourcecode="DriverCommands.SVB" 
	    			       class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="WINDOWID" displayText="WindowID" optional="NO">
           <description> <short_desc> 
                 A Window reference from the AppMap
              </short_desc> </description> </parameter>
        <parameter name="COMPONENTID" displayText="ComponentID" optional="NO">
           <description> <short_desc> 
                 A reference from the AppMap for the Component within the Window.
              </short_desc> <detailed_desc> 
                 A reference from the AppMap for the Component within the Window.
                 If the Window is the item of interest then both the WindowID and 
                 ComponentID will be the same.
              </detailed_desc> </description> </parameter>
        <parameter name="PROPERTYNAME" displayText="PropertyName" optional="NO">
           <description> <short_desc> 
                 Case-sensitive name of the object property to watch.
              </short_desc> </description> </parameter>
        <parameter name="EXPECTEDVALUE" displayText="ExpectedValue" optional="NO">
           <description> <short_desc> 
                 Case-sensitive value of the object property to match.
              </short_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="Timeout" optional="YES" default="15">
           <description> <short_desc> 
                 Timeout value in seconds before exiting automatically.
              </short_desc> </description> </parameter>
        <parameter name="CASEINSENSITIVE" displayText="CaseInsensitive" optional="YES">
           <description> <short_desc>
             Values of "CASE-INSENSITIVE", "CASEINSENSITIVE", and "FALSE" will cause the 
             comparison of the property value and the expected value to ignore case.
              </short_desc><detailed_desc>
              All engines may not support this parameter at this time.
              </detailed_desc></description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, WaitForPropertyValue, AWindow, AWindow, "Visible", "True" </usage>
           <description> <short_desc> 
                 Waits up to 15 seconds for the "Visible" property of AWindow to contain "True".
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForPropertyValue, WebBrowser, BrowserDoc, "readyState", "Complete", 45 </usage>
           <description> <short_desc> 
                 Waits up to 45 seconds for the "readyState" property of BrowserDoc to contain "Complete".
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForPropertyValue, AWindow, AWindow, visible, "True", 5, "CASEINSENSITIVE"</usage>
           <description> <short_desc>
             Wait for the "visible" property of AWindow to have the value "True".
             </short_desc><detailed_desc>
             Wait for the "visible" property of AWindow to have the value "True" and ignore case when 
             making the comparison.  The attempt will timeout in 5 seconds.
             </detailed_desc> </description> </example>
        <example>
           <usage>C, WaitForPropertyValue, AWindow, AWindow, visible, True, , "FALSE"</usage>
           <description> <short_desc>
             Wait for the "visible" property of AWindow to have the value "True".
             </short_desc> <detailed_desc>
             Wait for the "visible" property of AWindow to have the value "True" and ignore case when 
             making the comparison.  The command will use the default timeout value.
             </detailed_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="WAITFORPROPERTYVALUEGONE" 
           displayText="WaitForPropertyValueGone" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Wait for a specific Window or Component property value to change from a known value.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031119" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>
            <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	    	       <libraryInfo name="DDDriverCommands" 
	    			       doc="DDDriverCommandsReference.htm"
	    			       sourcecode="DriverCommands.SVB" 
	    			       class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="WINDOWID" displayText="WindowID" optional="NO">
           <description> <short_desc> 
                 A Window reference from the AppMap
              </short_desc> </description> </parameter>
        <parameter name="COMPONENTID" displayText="ComponentID" optional="NO">
           <description> <short_desc> 
                 A reference from the AppMap for the Component within the Window.
              </short_desc> <detailed_desc> 
                 A reference from the AppMap for the Component within the Window.
                 If the Window is the item of interest then both the WindowID and 
                 ComponentID will be the same.
              </detailed_desc> </description> </parameter>
        <parameter name="PROPERTYNAME" displayText="PropertyName" optional="NO">
           <description> <short_desc> 
                 Case-sensitive name of the object property to watch.
              </short_desc> </description> </parameter>
        <parameter name="EXPECTEDVALUE" displayText="ExpectedValue" optional="NO">
           <description> <short_desc> 
                 Case-sensitive known value of the property to change to something else.
              </short_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="Timeout" optional="YES" default="15">
           <description> <short_desc> 
                 Timeout value in seconds before exiting automatically.
              </short_desc> </description> </parameter>
        <parameter name="CASEINSENSITIVE" displayText="CaseInsensitive" optional="YES">
           <description> <short_desc>
             Values of "CASE-INSENSITIVE", "CASEINSENSITIVE", and "FALSE" will cause the 
             comparison of the property value and the expected value to ignore case.
              </short_desc> <detailed_desc>
              All engines may not support this parameter at this time.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, WaitForPropertyValueGone, AWindow, AWindow, "Visible", "False" </usage>
           <description> <short_desc> 
                 Waits up to 15 seconds for the "Visible" property of AWindow to change from "False".
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForPropertyValueGone, WebBrowser, BrowserDoc, "readyState", "Loading", 45 </usage>
           <description> <short_desc> 
                 Waits up to 45 seconds for the "readyState" property of BrowserDoc to change from "Loading".
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForPropertyValueGone, AWindow, AWindow, visible, "True", 5, "CASEINSENSITIVE"</usage>
           <description> <short_desc>
             Wait for the "visible" property of AWindow to change from "True".
             </short_desc><detailed_desc>
             Wait for the "visible" property of AWindow to change from "True" to anything else 
             and ignore case when making the comparison.  The attempt will timeout in 5 seconds.
             </detailed_desc> </description> </example>
        <example>
           <usage>C, WaitForPropertyValueGone, AWindow, AWindow, visible, True, , "FALSE"</usage>
           <description> <short_desc>
             Wait for the "visible" property of AWindow to change from "True".
             </short_desc> <detailed_desc>
             Wait for the "visible" property of AWindow to change from "True" to anything else 
             and ignore case when making the comparison.  The command will use the default timeout value.
             </detailed_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="WAITFORREGISTRYKEYEXISTS" 
           displayText="WaitForRegistryKeyExists" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Wait for a Registry Key to become valid.
              </short_desc>
              <detailed_desc>On Windows XP (and higher?) this is accomplished via 
              the REG.EXE provided by the operating system.  If this program is NOT available 
              then the Registry commands will not work until another means is implemented--possibly 
              Windows Scripting Host scripts, etc..
              </detailed_desc>
       </description>           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20091222" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20091222" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20091222" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141126">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="KEY" displayText="Key" optional="NO">
           <description> <short_desc> 
                 The Registry Key name to seek.
              </short_desc> </description> </parameter>
        <parameter name="KEYVALUE" displayText="KeyValue" optional="YES">
           <description> <short_desc> 
                 The value name under the parent key to seek.
              </short_desc> <detailed_desc>
                 The value name under the parent key.  If not provided then we just 
                 check to see if the provided parent key exists.
              </detailed_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="Timeout" optional="YES" default="15">
           <description> <short_desc> 
                 Timeout value in seconds before exiting automatically.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, WaitForRegistryKeyExists, "HKLM\Software\Rational Software\Rational Test\8", "Install Directory", 5</usage>
           <description> <short_desc> 
                 Waits up to 5 seconds for the Install Directory value key to exist.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForRegistryKeyExists, "HKLM\Software\Rational Software\Rational Test\8", "", 0</usage>
           <description> <short_desc> 
                 Checks only once (0 timeout) to see if the provided key exists.
              </short_desc> </description> </example>
        <example>
           <usage>C, WaitForRegistryKeyExists, "HKLM\Software\Rational Software\Rational Test\8"</usage>
           <description> <short_desc> 
                 Loops for up to the default 15 seconds for the provided key to exist.
              </short_desc> </description> </example>
     </examples></keyword>

  <keyword name="WAITFORREGISTRYKEYVALUE" 
           displayText="WaitForRegistryKeyValue" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">           
       <description> <short_desc> 
                 Wait for a specific Registry KeyValue to match an expected value.
              </short_desc> 
              <detailed_desc>On Windows XP (and higher?) this is accomplished via 
              the REG.EXE provided by the operating system.  If this program is NOT available 
              then the Registry commands will not work until another means is implemented--possibly 
              Windows Scripting Host scripts, etc..
              </detailed_desc>
       </description>           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20091222" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20091222" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20091222" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141126">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>
       <parameters>
        <parameter name="KEY" displayText="Key" optional="NO">
           <description> <short_desc> 
                 The Registry Key name to seek
              </short_desc> </description> </parameter>
        <parameter name="KEYVALUE" displayText="KeyValue" optional="NO">
           <description> <short_desc> 
                 The value name under the parent key to seek.
              </short_desc> <detailed_desc>
                 The value name under the parent key.  If not provided then we just 
                 check to see if the provided parent key exists.
              </detailed_desc> </description> </parameter>
        <parameter name="EXPECTEDVALUE" displayText="ExpectedValue" optional="NO">
           <description> <short_desc> 
                 Case-sensitive value to match with the key value.
              </short_desc> </description> </parameter>
        <parameter name="TIMEOUT" displayText="Timeout" optional="YES" default="15">
           <description> <short_desc> 
                 Timeout value in seconds before exiting automatically.
              </short_desc> </description> </parameter>
        <parameter name="CASEINSENSITIVE" displayText="CaseInsensitive" optional="YES">
           <description> <short_desc>
             Values of "CASE-INSENSITIVE", "CASEINSENSITIVE", and "FALSE" will cause the 
             comparison of the key value and the expected value to ignore case.
              </short_desc><detailed_desc>
              All engines may not support this parameter at this time.
              </detailed_desc></description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, WaitForRegistryKeyValue, "HKLM\Software\Adobe\CommonFiles", "UsageCount", "0x1"</usage>
           <description> <short_desc> 
                 Waits up to 15 seconds for the UsageCount key value to contain "0x1".
              </short_desc>
              <detailed_desc>The comparison IS case-sensitive</detailed_desc>
           </description> </example>
        <example>
           <usage>C, WaitForRegistryKeyValue, "HKLM\Software\Adobe\CommonFiles", "UsageCount", "0x1", 45</usage>
           <description> <short_desc> 
                 Waits up to 45 seconds for the UsageCount key value to contain "0x1".
              </short_desc>
              <detailed_desc>The comparison IS case-sensitive</detailed_desc>
           </description> </example>
        <example>
           <usage>C, WaitForRegistryKeyValue, "HKLM\Software\Adobe\CommonFiles", "UsageCount", "0X1", 5, CASEINSENSITIVE</usage>
           <description> <short_desc> 
                 Waits up to 5 seconds for the UsageCount key value to contain "0x1".
              </short_desc>
              <detailed_desc>The comparison IS NOT case-sensitive</detailed_desc>
           </description> </example>
        <example>
           <usage>C, WaitForRegistryKeyValue, "HKLM\Software\Adobe\CommonFiles", "UsageCount", "0X1", "", FALSE</usage>
           <description> <short_desc> 
                 Waits up to 15 seconds for the UsageCount key value to contain "0x1".
              </short_desc>
              <detailed_desc>The comparison IS NOT case-sensitive</detailed_desc>
           </description> </example>
     </examples></keyword>
     
  <keyword name="SETFOCUS" 
           displayText="SetFocus" 
           expectFailSupport="YES" 
           expectWarnSupport="YES" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Give a Window or Window Component input focus.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" 
                   expectFailSupport="YES" 
                   expectWarnSupport="YES" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031119" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
	                    sourcecode="org.safs.rational.DCDriverCommand.java"  
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070213" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	   	       <libraryInfo name="DDDriverCommands" 
	   			       doc="DDDriverCommandsReference.htm"
	   			       sourcecode="DriverCommands.SVB" 
	   			       class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="WINDOWID" displayText="WindowID" optional="NO">
           <description> <short_desc> 
                 A Window reference from the AppMap
              </short_desc> </description> </parameter>
        <parameter name="COMPONENTID" displayText="ComponentID" optional="NO">
           <description> <short_desc> 
                 A reference from the AppMap for the Component within the Window to get input focus.
              </short_desc> <detailed_desc> 
                 A reference from the AppMap for the Component within the Window to get input focus.
                 If the Window is the item of interest then both the WindowID and 
                 ComponentID will be the same.
                 <p>
                 This only works on Windows or Components that have a valid Windows HANDLE 
                 (HWND) and can legally receive the focus at the time of the call.</p>
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetFocus, AWindow, AWindow </usage>
           <description> <short_desc> 
                 Sets the input focus on AWindow.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetFocus, AWindow, AComponent </usage>
           <description> <short_desc> 
                 Sets the input focus on AComponent within AWindow.
              </short_desc> </description> </example>
     </examples></keyword>

  <keyword name="CAPTUREMOUSEPOSITIONONSCREEN" 
           displayText="CaptureMousePositionOnScreen" 
	   expectFailSupport="YES" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Capture the location of the mouse pointer relative to the screen and save the x and y components into variables.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20050615" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommandsReference.htm"
                            sourcecode="org.safs.DCDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20100325" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20100325" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	   	       <libraryInfo name="DDDriverCommands" 
	   			       doc="DDDriverCommandsReference.htm"
	   			       sourcecode="DriverCommands.SVB" 
	   			       class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="XVARNAME" displayText="X_VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the DDVariable to store the X component of the mouse position.
              </short_desc> </description> </parameter>
        <parameter name="YVARNAME" displayText="Y_VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the DDVariable to store the Y component of the mouse position.
              </short_desc> <detailed_desc> 
                 Capture the current position of the mouse on the screen.
		 The X component of the returned coordinate is saved into
		 the DDVariable given as the first parameter.
		 The Y component of the returned coordinate is saved into
		 the DDVariable given as the second parameter.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, CaptureMousePositionOnScreen, xVar, yVar </usage>
           <description> <short_desc> 
                 Captures the mouse position and stores the coordinates into the variables named "xVar" and "yVar".
              </short_desc> </description> </example>
        <example>
           <usage>C, CaptureMousePositionOnScreen, ^xVar="x1", ^yVar="y1" </usage>
           <description> <short_desc> 
                 Captures the mouse position and stores the coordinates into the variables named "x1" and "y1".                    </short_desc> </description> </example>
  </examples></keyword>
     
  <keyword name="SETCONTEXT" 
           displayText="SetContext" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Set a Window or Window Component as the current Robot context.
              </short_desc> <detailed_desc>
                 Set a Window or Window Component as the current Robot context.
                 <p>
                 Note, this does not SetFocus on the object.  This 
                 sets an object of reference for future Robot commands.  This may 
                 generate an ignored Script Command Failure if the object is not 
                 valid or visible.</p>
                 <p>
                 This command is not necessary for the normal operation of the DDE 
                 and the processing of Test records.  The DDE will automatically 
                 generate numerous SetContext commands during the normal processing 
                 of Test records.  This command is for other extraordinary cases not 
                 covered by normal Test record processing.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20051209" >
	   	       <libraryInfo name="DDDriverCommands" 
	   	                    doc="org/safs/rational/DCDriverCommand.html" 
	   	                    sourcecode="org.safs.rational.DCDriverCommand.java" 
	   	                    class="MISC" />
           </engine>
           <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20070213" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	   	       <libraryInfo name="DDDriverCommands" 
	   			       doc="DDDriverCommandsReference.htm"
	   			       sourcecode="DriverCommands.SVB" 
	   			       class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="WINDOWID" displayText="WindowID" optional="NO">
           <description> <short_desc> 
                 A Window reference from the AppMap
              </short_desc> </description> </parameter>
        <parameter name="COMPONENTID" displayText="ComponentID" optional="NO">
           <description> <short_desc> 
                 A reference from the AppMap for the Component within the Window.
              </short_desc> <detailed_desc> 
                 A reference from the AppMap for the Component within the Window.
                 If the Window is the item of interest then both the WindowID and 
                 ComponentID will be the same.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetContext, AWindow, AWindow </usage>
           <description> <short_desc> 
                 Sets the current Robot context on AWindow.
              </short_desc> </description> </example>
        <example>
           <usage>C, SetContext, AWindow, AComponent </usage>
           <description> <short_desc> 
                 Sets the current Robot context on AComponent within AWindow.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="ASSIGNCLIPBOARDVARIABLE" 
           displayText="AssignClipboardVariable" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Copy the clipboard contents to a DDVariable.
              </short_desc> <detailed_desc>
                 Copy the clipboard contents to a DDVariable. 
                 This command can only copy text contents of the clipboard.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20050502" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20050502" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20050502" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="Google" tool="Android" name="Android" since="20121106" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20121106">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine> 
       </engines>

       <parameters>
        <parameter name="VARNAME" displayText="VarName" optional="NO">
           <description> <short_desc> 
                 The variable to copy the clipboard text into.
              </short_desc> <detailed_desc> 
                 The routine will strip off any leading "^" if it is provided.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, AssignClipboardVariable, "Clipboard" </usage>
           <description> <short_desc> 
                 Copy the current clipboard text to variable "Clipboard".
              </short_desc> </description> </example>
        <example>
           <usage>C, AssignClipboardVariable, "^Clipboard" </usage>
           <description> <short_desc> 
                 Copy the current clipboard text to variable "Clipboard".
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="CLEARCLIPBOARD" 
           displayText="ClearClipboard" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Clear the contents of the Window's clipboard.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
               </engine>
           <engine vendor="Google" tool="Android" name="Android" since="20121106" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20121106">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine>                
       </engines>

       <parameters> </parameters><examples>
        <example>
           <usage>C, ClearClipboard </usage>
           <description> <short_desc> 
                 Clear the clipboard contents.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="SAVECLIPBOARDTOFILE" 
           displayText="SaveClipboardToFile" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Save the clipboard contents to a text file.
              </short_desc> <detailed_desc>
                 Save the clipboard contents to a text file.
                 <p>
                 This command can only save text contents of the clipboard. The
                 length of the clipboard text should not exceed 32,767 characters
                 due to the inherent size limit of SQABasic's String data type.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="Google" tool="Android" name="Android" since="20121106" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20121106">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="FILE" displayText="File" optional="NO">
           <description> <short_desc> 
                 The file to save the clipboard contents to.
              </short_desc> <detailed_desc> 
                 The file to save the clipboard contents to.
                 This can be a full path, a relative path, or a file name.
                 For relative path, it is appended to the project's path to
                 build the full path of the file. For file name, the file
                 is saved under the project's Datapool\Test directory. In
                 any case the parent folder of the file must exist.
              </detailed_desc> </description> </parameter>
        <parameter name="ENCODING" displayText="Encoding" optional="Yes">
           <description> <short_desc> 
                 The encoding used to write a file.
              </short_desc> <detailed_desc> 
                 The encoding used to write a file. If user doesn't specify this
                 parameter, the "UTF-8" encoding will be used.
              </detailed_desc> </description> </parameter>              
     </parameters><examples>
        <example>
           <usage>C, SaveClipboardToFile, C:\Temp\myclipboard.txt </usage>
           <description> <short_desc> 
                 Saves the current clipboard contents to C:\Temp\myclipboard.txt
              </short_desc> </description> </example>
        <example>
           <usage>C, SaveClipboardToFile, Datapool\myclipboard.txt </usage>
           <description> <short_desc> 
                 Saves the current clipboard contents to Datapool\myclipboard.txt
              </short_desc> </description> </example>
        <example>
           <usage>C, SaveClipboardToFile, myclipboard.txt </usage>
           <description> <short_desc> 
                 Saves the current clipboard contents to Datapool\Test\myclipboard.txt
              </short_desc> </description> </example>
        <example>
           <usage>C, SaveClipboardToFile, C:\Temp\myclipboard.txt, "ANSI" </usage>
           <description> <short_desc> 
                 Saves the current clipboard contents to C:\Temp\myclipboard.txt with "ANSI" encoding
              </short_desc> </description> </example>              
     </examples></keyword>
     
  <keyword name="VERIFYCLIPBOARDTOFILE" 
           displayText="VerifyClipboardToFile" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
             Verify the current contents of the Windows clipboard with a benchmark file.
              </short_desc> <detailed_desc>
             Verify the current contents of the Windows clipboard with a benchmark file.<br />
             Typically, benchmarks are stored in the Datapool\Bench directory.
             In that event, only the filename.ext is needed.  There is currently
             a limit of 32K allowed for this type of comparison.  <br />
             The Window and Component objects are not validated and have no role.
             The Window and Component strings can be any text, but they cannot be blank.
             <p>
             The command will produce a TEST WARNING if the user has configured an 
             alternate DIFF tool for which we have no means to compare the diff results.
             If this WARNING is expected, the user should use the "TW" test record type.</p>
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031211" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="Google" tool="Android" name="Android" since="20121106" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20121106">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
          <parameter name="BENCHMARKFILE" displayText="BenchmarkFile" optional="NO">
           <description> <short_desc>
             The name of the file used as the comparison benchmark.
              </short_desc> <detailed_desc>
             The name of the file used as the comparison benchmark.<br />
             Typically, benchmarks are stored in the Datapool\Bench directory.
             In that event, only the filename.ext is needed.
              </detailed_desc> </description> </parameter>
        <parameter name="ENCODING" displayText="Encoding" optional="Yes">
           <description> <short_desc> 
                 The encoding used to read a file.
              </short_desc> <detailed_desc> 
                 The encoding used to read a file. If user doesn't specify this
                 parameter, the "UTF-8" encoding will be used.
              </detailed_desc> </description> </parameter>              
       </parameters>
       <examples>
        <example>
           <usage>C, VerifyClipboardToFile, myclipboard.txt </usage>
           <description> <short_desc> 
                 Verifieis the current clipboard contents to benchmark file myclipboard.txt
              </short_desc> </description> </example>
        <example>
           <usage>C, VerifyClipboardToFile, C:\Temp\myclipboard.txt </usage>
           <description> <short_desc> 
                 Verifieis the current clipboard contents to C:\Temp\myclipboard.txt
              </short_desc> </description> </example>
        <example>
           <usage>C, VerifyClipboardToFile, C:\Temp\myclipboard.txt, "Ansi" </usage>
           <description> <short_desc> 
                 Verifieis the current clipboard contents to C:\Temp\myclipboard.txt, the file
                 will be opened with "Ansi" encoding.
              </short_desc> </description> </example>              
     </examples></keyword>
     
  <keyword name="SETCLIPBOARD" 
           displayText="SetClipboard" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Set the clipboard contents to a string.
              </short_desc> <detailed_desc>
                 Set the clipboard contents to a string.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="Google" tool="Android" name="Android" since="20121106" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20121106">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="STR" displayText="Str" optional="NO">
           <description> <short_desc> 
                 The string to set the clipboard contents to.
              </short_desc> <detailed_desc> 
                 The string to set the clipboard contents to.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetClipboard, "This should go into the clipboard" </usage>
           <description> <short_desc> 
                 Sets the current clipboard contents to the string
              </short_desc> </description> </example>
     </examples></keyword>

  <keyword name="CLEARALLVARIABLES" 
           displayText="ClearAllVariables" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Clear storage of all DDVariables.
              </short_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20041216" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
 		   <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080527" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20130719" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters> </parameters><examples>
        <example>
           <usage>C, ClearAllVariables </usage>
           <description> <short_desc> 
                 Clear all DDVariables.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="CLEARARRAYVARIABLES" 
           displayText="ClearArrayVariables" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
              Clear storage of all SAFS variables containing a specific prefix.
              </short_desc>
              <detailed_desc>
              Users can use SAFSVARS to store pseudo-arrays simply by adding a numeric suffix to any vaiable name prefix.
              <p>
              For example:
              </p><p>
              TCAFS.UID.1<br/>
              TCAFS.UID.2<br/>
              TCAFS.UID.3<br/>
              </p><p>
              This command allows you to clear/delete all such SAFSVARS array variables with a specific prefix.
              </p>
              </detailed_desc></description>
           
       <engines>
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20130722" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters> 
        <parameter name="ARRAYNAME" displayText="ArrayName" optional="NO">
           <description> <short_desc> 
                 The variable name prefix to use for the delete.
              </short_desc>
           </description> 
        </parameter>
       </parameters><examples>
        <example>
           <usage>C, ClearArrayVariables, "TCAFS.UID." </usage>
           <description> <short_desc> 
                 Clear all SAFS variables starting with the "TCAFS.UID." prefix.
              </short_desc> </description> </example>
     </examples></keyword>

  <keyword name="GETSYSTEMDATE" 
           displayText="GetSystemDate" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Assigns the string value of the system date to a DDVariable. 
              </short_desc><detailed_desc>
                Assigns the string value of the system date to a DDVariable. 
                This date is in the format MM-DD-YYYY.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>


           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
             <engine name="WinRunner" since="20020903" tool="WinRunner" vendor="Mercury Interactive">
  	       <libraryInfo class="MISC" 
  			    name="DDDriverCommands" 
  			    sourcecode="DDDriverCommands" />
             </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the System Date.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the System Date.
                 Note, if you supply the name of the variable and include the leading 
                 caret (^) symbol then the variable must be enclosed in quotes.
                 Otherwise, that variable will be used like any other variable and the 
                 substituted value of that variable will be interpretted as the name 
                 of the variable you wish to use.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetSystemDate, SystemDate</usage>
           <description> <short_desc> 
                 Assigns system date to DDVariable ^SystemDate
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemDate, "SystemDate"</usage>
           <description> <short_desc> 
                 Assigns system date to DDVariable ^SystemDate
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemDate, "^SystemDate"</usage>
           <description> <short_desc> 
                 Assigns system date to DDVariable ^SystemDate
              </short_desc> </description> </example>
        <example>
              <usage>
                 C, SetVariableValues, ^SystemDate="TodaysDate" <BR />
                 C, GetSystemDate, ^SystemDate
              </usage>
           <description> <short_desc> 
                 Assigns system date to DDVariable ^TodaysDate
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="GETDELTADATE" 
             displayText="GetDeltaDate" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
     <description><short_desc>Calculates the delta date positive or negative delta days from the supplied date</short_desc>
       <detailed_desc>
        Calculates the delta date positive or negative delta days from the supplied date.
        The resulting date is in the "Short Date" format.
       </detailed_desc></description>
      
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20051220" >
	       <libraryInfo name="DDDriverCommands" 
                 doc="DDDriverCommands.htm" 
                 sourcecode="DDDriverCommands.sbl"
                 class="MISC"  />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
	       <libraryInfo name="DDDriverCommands" 
			       doc="DDDriverCommandsReference.htm"
			       sourcecode="DriverCommands.SVB" 
			       class="MISC" />
           </engine>
          </engines>

       <parameters>
        <parameter name="SOURCEDATESTRING" displayText="SourceDateString" optional="NO">
           <description><short_desc>
              String containing the date from which to calculate the delta date</short_desc>
           </description>
        </parameter>
     <parameter name="DELTADAYS" displayText="DeltaDays" optional="NO">
           <description><short_desc>
              Positive or Negative number of days to calculate date from source date</short_desc>
           </description>
        </parameter>
      <parameter name="RESULTSTRING" displayText="ResultString" optional="NO">
           <description><short_desc>
              <p>Variable name to receive the newly formatted date.</p>
            </short_desc>
           </description>
        </parameter>      
     </parameters><examples>
        <example>
           <usage>C, GetDeltaDate, "25-Dec-2005", 1, "newdateresult"</usage>
           <description><short_desc> 
                 ^newdateresult should be set to "12/26/2005" upon exit.
           </short_desc></description></example>
        <example>
           <usage>C, GetDeltaDate, "25-Dec-2005", "-1", "newdateresult"</usage>
           <description><short_desc> 
                 ^newdateresult should be set to "12/24/2005" upon exit.
           </short_desc></description></example>
     </examples></keyword>
     
  <keyword name="GETSYSTEMTIME" 
           displayText="GetSystemTime" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Assigns the string value of the current system time to a DDVariable. 
              </short_desc><detailed_desc>
                Assigns the string value of the current system time to a DDVariable. 
                This date is in the format HH:MM:SS, it is in AM-PM 12-hours
                format (1-12) be default; If you set the second parameter 'GetMilitaryTime'
                to True, the time will be 24-hours military format (0-23). Use military time
                is recommanded, as am-pm time has confusion without AM or PM
                (example: 18:00 and 06:00 will be both 06:00)                
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
               </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the System Time.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the System Time.
                 Note, if you supply the name of the variable and include the leading 
                 caret (^) symbol then the variable must be enclosed in quotes.
                 Otherwise, that variable will be used like any other variable and the 
                 substituted value of that variable will be interpretted as the name 
                 of the variable you wish to use.
              </detailed_desc> 
           </description> 
        </parameter>
        <parameter name="GETMILITARYTIME" displayText="GetMilitaryTime" optional="YES">
           <description> <short_desc> 
                 If true, the converted time is in 24-hours military time format
              </short_desc> <detailed_desc> 
                 If this is true, the converted time will be in 24-hours military time
                 format (0-23). If this parameter is omitted, it is false be default,
                 the converted time will be in AM-PM 12-hours format (1-12).
              </detailed_desc> 
           </description> 
        </parameter>        
     </parameters><examples>
        <example>
           <usage>C, GetSystemTime, SystemTime</usage>
           <description> <short_desc> 
                 Assigns system time to DDVariable ^SystemTime, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemTime, "SystemTime"</usage>
           <description> <short_desc> 
                 Assigns system time to DDVariable ^SystemTime, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemTime, "^SystemTime"</usage>
           <description> <short_desc> 
                 Assigns system time to DDVariable ^SystemTime, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
              <usage>
                 C, SetVariableValues, ^SystemTime="CurrentTime" <BR />
                 C, GetSystemTime, ^SystemTime
              </usage>
           <description> <short_desc> 
                 Assigns system time to DDVariable ^CurrentTime, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemTime, SystemMilitaryTime, True</usage>
           <description> <short_desc> 
                 Assigns system time to DDVariable ^SystemMilitaryTime, the time will
                 be in military format, 24-hours (0-23).
              </short_desc> </description> </example>               
     </examples></keyword>
     
  <keyword name="GETSYSTEMDATETIME" 
           displayText="GetSystemDateTime" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Assigns the string value of the system datetime to a DDVariable. 
              </short_desc><detailed_desc>
                Assigns the string value of the system datetime to a DDVariable. 
                This date is in the format MM-DD-YYYY HH:MM:SS, it is in AM-PM 12-hours
                format (1-12) be default; If you set the second parameter 'GetMilitaryTime'
                to True, the time will be 24-hours military format (0-23). Use military time
                is recommanded, as am-pm time has confusion without AM or PM
                (example: 18:00 and 06:00 will be both 06:00)
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20031117" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20041011" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20031219" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>

             <engine name="WinRunner" 
  	   		       since="20020903" 
  	   		       tool="WinRunner" 
  	   		       vendor="Mercury Interactive">
  	   	       <libraryInfo class="MISC" 
  	   				name="DDDriverCommands" 
  	   				sourcecode="DDDriverCommands">
  	   	       </libraryInfo>
               </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141121" >
	           <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the System DateTime.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the System DateTime.
                 Note, if you supply the name of the variable and include the leading 
                 caret (^) symbol then the variable must be enclosed in quotes.
                 Otherwise, that variable will be used like any other variable and the 
                 substituted value of that variable will be interpretted as the name 
                 of the variable you wish to use.
              </detailed_desc> 
           </description> 
        </parameter>
        <parameter name="GETMILITARYTIME" displayText="GetMilitaryTime" optional="YES">
           <description> <short_desc> 
                 If true, the converted time is in 24-hours military time format
              </short_desc> <detailed_desc> 
                 If this is true, the converted time will be in 24-hours military time
                 format (0-23). If this parameter is omitted, it is false be default,
                 the converted time will be in AM-PM 12-hours format (1-12).
              </detailed_desc> 
           </description> 
        </parameter>        
     </parameters><examples>
        <example>
           <usage>C, GetSystemDateTime, SystemDate</usage>
           <description> <short_desc> 
                 Assigns system datetime to DDVariable ^SystemDate, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemDateTime, "SystemDate"</usage>
           <description> <short_desc> 
                 Assigns system datetime to DDVariable ^SystemDate, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemDateTime, "^SystemDate"</usage>
           <description> <short_desc> 
                 Assigns system datetime to DDVariable ^SystemDate, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
              <usage>
                 C, SetVariableValues, ^SystemDate="TodaysDate" <BR />
                 C, GetSystemDateTime, ^SystemDate
              </usage>
           <description> <short_desc> 
                 Assigns system datetime to DDVariable ^TodaysDate, the time will
                 be in 12-hours format (1-12).
              </short_desc> </description> </example>
        <example>
           <usage>C, GetSystemDateTime, SystemMilitaryDate, True</usage>
           <description> <short_desc> 
                 Assigns system datetime to DDVariable ^SystemMilitaryDate, the time will
                 be in military format, 24-hours (0-23).
              </short_desc> </description> </example>              
     </examples></keyword>
     
  <keyword name="CLEARAPPMAPCACHE" 
           displayText="ClearAppMapCache" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description> <short_desc>
             Clear the internal application map cache.
          </short_desc><detailed_desc> 
             Engines often maintain an internal cache for AppMap data.
             In RobotJ, there exists a cache of
             TestObject objects, that cache is cleared by this command
             so that the recognition string algorithm has to be re-run
             the next time a window or component is to be recognized.
             This is useful for cases when a dialog pops up, goes
             away, then pops up again.  The cached version of the
             dialog or it's components may not correspond to the new 
             instance.  This command lets a tester clear the cache when
             this kind of condition may arrise.
             (Future: instruct the safsmaps service
             to reload it's application map data)
          </detailed_desc> </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium" since="20080430" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20131009" >
		       <libraryInfo name="DDDriverCommands" 
				       doc="DDDriverCommandsReference.htm"
				       sourcecode="DriverCommands.SVB" 
				       class="MISC" />
           </engine>
           <engine vendor="Google" tool="Android" name="Android" since="20130419" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20130419">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine>           
       </engines>

       <parameters>
       </parameters>
       <examples>
        <example>
           <usage>C, ClearAppMapCache</usage>
           <description> <short_desc>
             clear the appmap cache
              </short_desc> </description> </example>
       </examples></keyword>
    
    <keyword name="CALLREMOTE" 
             displayText="CallRemote" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description>
            <short_desc>Execute a command on an external system / application.</short_desc>
            <detailed_desc>
               Execute a command on an external system / application. This command presently supports only the STAF protocol.
               Command syntax, parameters, and values will be dependent upon the protocol specified and 
               the command issued to the remote (or even local) system.
            </detailed_desc></description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20050727" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20050727" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>

           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20050727" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/DCDriverMiscCommands.html" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="PROTOCOL" displayText="Protocol" optional="No">
           <description><short_desc>
              The name of the protocol to use. Presently only 'STAF' is supported.</short_desc>
           </description>
        </parameter>
        <parameter name="SYSTEMNAME" displayText="SystemName" optional="No">
			<description><short_desc>
			  The name of the system to send the command to.</short_desc>
			</description>
        </parameter>
        <parameter name="SERVICENAME" displayText="ServiceName" optional="No">
           <description><short_desc>
              The service name to be called on the external system / application.</short_desc>
           </description>
        </parameter>
        <parameter name="COMMAND" displayText="Command" optional="No">
           <description><short_desc>
              The service command to be issued to the external system / application.</short_desc>
           </description>
        </parameter>
        <parameter name="VARNAME" displayText="VarName" optional="Yes" default="result">
           <description>
              <short_desc>
                 The DDVariable root name to receive the results.
              </short_desc>
              <detailed_desc>Variable root name defaults to 'result' if not provided. 
                 <p>The variables varName.RC and varName.RESULT are defined on completion of the command.</p>
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="PARAMETERS" displayText="Parameters" optional="Yes">
           <description><short_desc>
              Additional parameters to be passed to the service command.</short_desc>
           </description>
        </parameter>

     </parameters><examples>
        <example>
           <usage>C CallRemote STAF LOCAL PING PING</usage>
           <description><short_desc> 
                 Send the STAF command PING PING to the local system, and assign the result to the result root name variable.
              </short_desc></description></example>
        <example>
           <usage>C CallRemote STAF ext-1 HANDLE QUERY myResult ALL</usage>
           <description><short_desc> 
	      Send the STAF command HANDLE QUERY ALL to the external system ext-1 and assign the results to the myResult root name variable.
              </short_desc></description></example>
     </examples></keyword>
    <keyword name="GETCOMPSCREENRESOLUTION" 
             displayText="GetCompScreenResolution" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
         <description><short_desc>Gets the current computer screen resolution and returns x and y values.</short_desc>
       <detailed_desc>
        Gets the current computer screen resolution and returns x and y values.
       </detailed_desc></description>
      
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20051223" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DDDriverCommands.htm" 
                            sourcecode="DDDriverCommands.sbl" 
                            class="MISC" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20080416" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20081023" >
		       <libraryInfo name="DDDriverCommands" 
				       doc="DDDriverCommandsReference.htm"
				       sourcecode="DriverCommands.SVB" 
				       class="MISC" />
           </engine>
       </engines>

       <parameters>
         <parameter name="XWIDTHVARIABLE" displayText="XWidthVariable" optional="NO">
           <description><short_desc>
              SAFSVARS name to be used to store x screen resolution</short_desc>
           </description>
        </parameter>
           <parameter name="YHEIGHTVARIABLE" displayText="YHeightVariable" optional="NO">
           <description><short_desc>
              SAFSVARS name to be used to store y screen resolution</short_desc>
           </description>
        </parameter>
      
     </parameters><examples>
        <example>
           <usage>C, GetCompScreenResolution, xres, yres</usage>
           <description><short_desc> 
                 Gets the current computer screen resolution and stores x in xres and y in yres
           </short_desc></description></example>
     </examples></keyword>

  <keyword name="ENABLEDOMAIN" 
           displayText="EnableDomain" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> 
           <short_desc> 
               Enable a particular test domain for testing.
           </short_desc>
           <detailed_desc>
               Some tools support multiple test domains like Java, Html, Net, and Win domains.
               This command instructs the engine to dynamically enable a particular test domain. 
               This is the opposite of, and often used in conjunction with the command 'DisableDomain'.
               Disabling unnecessary domains may drastically improve test performance.
           </detailed_desc> </description>           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20060130" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>
       <parameters>
           <parameter name="DOMAIN" displayText="Domain" optional="NO"> 
           <description> <short_desc> 
                 The generic name of the domain to enable.
              </short_desc> 
              <detailed_desc>
                 The name might be engine-specific, but the domain names should 
                 attempt to conform to:
                 <ul>
                 <li>Java</li>
                 <li>Html</li>
                 <li>Net</li>
                 <li>Win</li>
                 </ul>
                 <p>Domain names should not be case-sensitive.</p>
              </detailed_desc>
           </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, EnableDomain, "Java"</usage>
           <description> <short_desc> 
                 Enable the Java domain in the receiving engine.
              </short_desc> </description> </example>
     </examples></keyword>
     
  <keyword name="DISABLEDOMAIN" 
           displayText="DisableDomain" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> 
           <short_desc> 
               Disable a particular test domain for testing.
           </short_desc>
           <detailed_desc>
               Some tools support multiple test domains like Java, Html, Net, and Win domains.
               This command instructs the engine to dynamically disable a particular test domain. 
               This is the opposite of, and often used in conjunction with the command 'EnableDomain'.
               Disabling unnecessary domains may drastically improve test performance.
           </detailed_desc> </description>           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20060130" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>
       <parameters>
           <parameter name="DOMAIN" displayText="Domain" optional="NO"> 
           <description> <short_desc> 
                 The generic name of the domain to disable.
              </short_desc> 
              <detailed_desc>
                 The name might be engine-specific, but the domain names should 
                 attempt to conform to:
                 <ul>
                 <li>Java</li>
                 <li>Html</li>
                 <li>Net</li>
                 <li>Win</li>
                 </ul>
                 <p>Domain names should not be case-sensitive.</p>
              </detailed_desc>
           </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, DisableDomain, "Win"</usage>
           <description> <short_desc> 
                 Disable the Win domain in the receiving engine.
              </short_desc> </description> </example>
     </examples></keyword>

  <keyword name="GETSECSSEEKCOMPONENT" 
           displayText="GetSecsSeekComponent" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Get the timeout of finding object, and assigns the value to a DDVariable. 
              </short_desc><detailed_desc>
                Get the timeout of finding object, and assigns the value to a DDVariable.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20090803" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the timeout of finding object.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the timeout of finding object.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetSecsSeekComponent, "secondsSeekComponent"</usage>
           <description> <short_desc> 
                 Get the timeout of finding object, and assigns to DDVariable ^secondsSeekComponent
              </short_desc>
		   </description>
		</example></examples>
  </keyword>

  <keyword name="GETSECSDELAYRETRYCOMPONENT" 
           displayText="GetSecsDelayRetryComponent" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Get the delay of re-finding object, and assigns the value to a DDVariable. 
              </short_desc><detailed_desc>
                Get the delay of re-finding object, and assigns the value to a DDVariable.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20090803" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the delay of re-finding object.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the delay of re-finding object.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetSecsDelayRetryComponent, "secondsDelayRetryComponent"</usage>
           <description> <short_desc> 
                 Get the delay of re-finding object, and assigns to DDVariable ^secondsDelayRetryComponent
              </short_desc>
		   </description>
		</example></examples>
  </keyword>	  		
		
  <keyword name="GETSECSAFTERWINDOWACTIVE" 
           displayText="GetSecsAfterWindowActive" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Get the delay after window is activated, and assigns the value to a DDVariable. 
              </short_desc><detailed_desc>
                Get the delay after window is activated, and assigns the value to a DDVariable.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20090803" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the delay after window is activated.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the delay after window is activated.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetSecsAfterWindowActive, "secondsAfterWindowActive"</usage>
           <description> <short_desc> 
                 Get the delay after window is activated, and assigns to DDVariable ^secondsAfterWindowActive
              </short_desc>
		   </description>
		</example></examples>
  </keyword>
	  
  <keyword name="GETMILLISBETWEENRECORDS" 
           displayText="GetMillisBetweenRecords" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Get the pause between two records, and assigns the value to a DDVariable. 
              </short_desc><detailed_desc>
                Get the pause between two records, and assigns the value to a DDVariable.
                This time is milli-seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20090803" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
	   </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the pause between two records.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the pause between two records.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetMillisBetweenRecords, "millisBetweenRecords"</usage>
           <description> <short_desc> 
                 Get the pause between two records, and assigns to DDVariable ^millisBetweenRecords
              </short_desc>
		   </description>
		</example></examples>
  </keyword>	  


   <keyword name="SCROLLWHEEL" 
           displayText="ScrollWheel" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Move mouse wheel forward (up) or backward (down). 
              </short_desc><detailed_desc>
                Move mouse wheel forward (up) or backward (down).
                A positive value indicates the wheel was moved forward (up) and a negative value indicates the wheel was moved backward (down).
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20091214" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20130709" >
	       <libraryInfo name="DDDriverCommands" 
			       doc="DDDriverCommandsReference.htm"
			       sourcecode="DriverCommands.SVB" 
			       class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150104">
	          <libraryInfo name="DDDriverCommands" 
			    doc="org/safs/DCDriverMiscCommands.html" 
			    sourcecode="org.safs.DCDriverMiscCommands.java" 
			    class="MISC" />
            </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="numClicks" optional="NO">
           <description> <short_desc> 
                 The number of mouse wheel clicks to move.
.              </short_desc> <detailed_desc> 
                 The number of mouse wheel clicks to move.A postive value indicates the wheel was moved forward (up) and a negative value indicates the wheel was moved backward (down).
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, ScrollWheel, "10"</usage>
           <description> <short_desc> 
                 Moves mouse scroll wheel 10 times forward. 
              </short_desc>
		   </description>
		</example></examples>
  </keyword>
  
    
  <keyword name="SETSECSSEEKCOMPONENT" 
           displayText="SetSecsSeekComponent" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Set the timeout of finding object. 
              </short_desc><detailed_desc>
                Set the timeout of finding object.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20090803" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The value of the timeout of finding object.
              </short_desc> <detailed_desc> 
                 The value of the timeout of finding object.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetSecsSeekComponent, 1</usage>
           <description> <short_desc> 
                 Set the timeout of finding object to 1 second.
              </short_desc>
		   </description>
		</example></examples>
  </keyword>

  <keyword name="SETSECSDELAYRETRYCOMPONENT" 
           displayText="SetSecsDelayRetryComponent" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Set the delay of re-finding object. 
              </short_desc><detailed_desc>
                Set the delay of re-finding object.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20090803" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VALUE" displayText="Value" optional="NO">
           <description> <short_desc> 
                 The value of the delay of re-finding object.
              </short_desc> <detailed_desc> 
                 The value of the delay of re-finding object.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetSecsDelayRetryComponent, 1</usage>
           <description> <short_desc> 
                 Set the delay of re-finding object to 1 second.
              </short_desc>
		   </description>
		</example></examples>
  </keyword>	  		
		
  <keyword name="SETSECSAFTERWINDOWACTIVE" 
           displayText="SetSecsAfterWindowActive" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Set the delay after window is activated. 
              </short_desc><detailed_desc>
                Set the delay after window is activated.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20090803" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VALUE" displayText="Value" optional="NO">
           <description> <short_desc> 
                 The value of the delay after window is activated.
              </short_desc> <detailed_desc> 
                 The value of the delay after window is activated.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetSecsAfterWindowActive, 1</usage>
           <description> <short_desc> 
                 Set the delay after window is activated to 1 second.
              </short_desc>
		   </description>
		</example></examples>
  </keyword>
	  
  <keyword name="SETMILLISBETWEENRECORDS" 
           displayText="SetMillisBetweenRecords" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Set the pause between two records. 
              </short_desc><detailed_desc>
                Set the pause between two records.
                This time is milli-seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20090803" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
	   </engines>

       <parameters>
        <parameter name="VALUE" displayText="Value" optional="NO">
           <description> <short_desc> 
                 The value of the pause between two records.
              </short_desc> <detailed_desc> 
                 The value of the pause between two records.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetMillisBetweenRecords, 1000</usage>
           <description> <short_desc> 
                 Set the pause between two records to 1000 milliseconds.
              </short_desc>
		   </description>
		</example></examples>
  </keyword>
  
  <keyword name="GET_SECS_BEFORE_MOUSE_UP" 
           displayText="GetSecsBeforeMouseUp" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Get the delay before mouse up, and assigns the value to a DDVariable. 
              </short_desc><detailed_desc>
                Get the delay before mouse up, and assigns the value to a DDVariable.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20100112" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the delay before mouse up.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the delay before mouse up.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetSecsBeforeMouseUp, "secondsBeforeMouseUp"</usage>
           <description> <short_desc> 
                 Get the delay before mouse up, and assigns to DDVariable ^secondsBeforeMouseUp
              </short_desc>
		   </description>
		</example></examples>
  </keyword>
  
  <keyword name="GET_SECS_BEFORE_MOUSE_DOWN" 
           displayText="GetSecsBeforeMouseDown" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Get the delay before mouse down, and assigns the value to a DDVariable. 
              </short_desc><detailed_desc>
                Get the delay before mouse down, and assigns the value to a DDVariable.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20100112" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VARIABLENAME" displayText="VariableName" optional="NO">
           <description> <short_desc> 
                 The name of the variable to receive the delay before mouse down.
              </short_desc> <detailed_desc> 
                 The name of the variable to receive the delay before mouse down.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, GetSecsBeforeMouseDown, "secondsBeforeMouseDown"</usage>
           <description> <short_desc> 
                 Get the delay before mouse down, and assigns to DDVariable ^secondsBeforeMouseDown
              </short_desc>
		   </description>
		</example></examples>
  </keyword>
  
  <keyword name="SET_SECS_BEFORE_MOUSE_UP" 
           displayText="SetSecsBeforeMouseUp" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Set the delay before mouse up. 
              </short_desc><detailed_desc>
                Set the delay before mouse up.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20100112" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VALUE" displayText="Value" optional="NO">
           <description> <short_desc> 
                 The value of the delay before mouse up.
              </short_desc> <detailed_desc> 
                 The value of the delay before mouse up.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetSecsBeforeMouseUp, 0.1</usage>
           <description> <short_desc> 
                 Set the delay before mouse up to 0.1 second.
              </short_desc>
		   </description>
		</example></examples>
  </keyword>
    
  <keyword name="SET_SECS_BEFORE_MOUSE_DOWN" 
           displayText="SetSecsBeforeMouseDown" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                Set the delay before mouse down. 
              </short_desc><detailed_desc>
                Set the delay before mouse down.
                This time is seconds.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20100112" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/rational/DCDriverCommand.html" 
                            sourcecode="org.safs.rational.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="VALUE" displayText="Value" optional="NO">
           <description> <short_desc> 
                 The value of the delay before mouse down.
              </short_desc> <detailed_desc> 
                 The value of the delay before mouse down.
              </detailed_desc> 
           </description> 
        </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetSecsBeforeMouseDown, 0.1</usage>
           <description> <short_desc> 
                 Set the delay before mouse down to 0.1 second.
              </short_desc>
		   </description>
		</example></examples>
  </keyword>

  <keyword name="SETMULTIPLETHREADSEARCH" 
           displayText="SetMultipleThreadSearch" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Turn on or trun off the multi-thread-search way to search an image.
              </short_desc>
              <detailed_desc>
                 Turn on or trun off the multi-thread-search way to search an image.
                 If set true, program will search an image by multi-thread; If false, program
                 will use single-thread to search.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20100712" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141126" >
	           <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="ONOROFF" displayText="OnOrOff" optional="NO"> 
           <description> <short_desc> 
                 Turn on or turn off multi-thread-search. This parameter should be given as "On" or "Off".
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, SetProjectDirectory, "On" </usage>
           <description> <short_desc> 
                 This lets SAFS to search an image on screen by multi-thread.
              </short_desc> </description> </example>
     </examples></keyword>

  <keyword name="HIGHLIGHT" 
           displayText="HighLight" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description> <short_desc> 
                 Turn on or off the component highlight functionality.
              </short_desc> <detailed_desc>
		When enabled (ON) each call to a component function will temporarily highlight 
		the targeted component. The intent is to provide a design-time verification that the tool 
		is finding the desired target component. It is not recommended this command be used during 
		production runtime testing as there can be significant performance impact with some tools.
	   </detailed_desc>
       </description>           
       <engines>      
           <engine vendor="AutomatedQA" tool="TestComplete" name="Test Complete" since="20120821" >
	       <libraryInfo name="DDDriverCommands" 
			       doc="DDDriverCommandsReference.htm"
			       sourcecode="DDDriverCommands.SVB" 
			       class="MISC" />
           </engine>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140618">
	           <libraryInfo name="DCDriverCommand" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>
        <parameter name="MODE" displayText="Mode" optional="Yes">
           <description> <short_desc> 
                 The status for highlight functionality. It can be On or Off. The Default is OFF.
              </short_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, HighLight, ON</usage>
           <description> <short_desc> 
                 Turn on the highlight functionality.
              </short_desc> </description> </example>
        <example>
           <usage>C, HighLight, OFF</usage>
           <description> <short_desc> 
                 Turn off the highlight functionality.
              </short_desc> </description> </example>
     </examples></keyword> 	

  <keyword name="TAKESCREENSHOT" 
           displayText="TakeScreenShot" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Take screenshot and save it to a file on test machine.
              </short_desc> <detailed_desc>
                 Take screenshot and save it to a file on test machine.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Google" tool="Android" name="Android" since="20121121" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20121121">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine> 
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20130719" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20141125" >
	           <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java"
                            class="MISC"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="FILENAME" displayText="FileName" optional="NO">
           <description> <short_desc> 
                 The file to store the screeshot. (For Android Engine, the screenshot is device/emulator's)
              </short_desc> <detailed_desc> 
                 The file to store the screeshot. (For Android Engine, the screenshot is device/emulator's)
                 It can be a full path name;
                 If it is only a filename, the image will be stored to sub directory "test" of your project; 
                 If it is a filename including path-separator, it will be concatanated to the "datapool" of
                 your project to create a fullpath file.
              </detailed_desc> </description> </parameter>
        <parameter name="ROTATABLE" displayText="Rotatable" optional="YES">
           <description> <short_desc> 
                 For other Engine, this parameter will be ignored.
                 For Android Engine, if the android application is rotatable, you set this parameter to True. The default is True.
              </short_desc> <detailed_desc> 
                 For other Engine, this parameter will be ignored.
                 For Android Engine, if the android application is rotatable, that is to say the application will adjust its direction
                 and keep upstraight when you rotate your device. If the android application is rotatable and this
                 parameter is set to False, the screenshot maybe upside down.
              </detailed_desc> </description> </parameter>  
        <parameter name="SUBAREA" displayText="SubArea" optional="YES">
           <description> <short_desc>
             Optional sbuarea indicating partial image of the screen to capture.
              </short_desc> <detailed_desc>
             	  Optional sbuarea indicating partial image of the screen to capture.
	              The value must be in the format of a
	              top-left and bottom-right pair, and can be either absolute
	              coordinates or percentages ("x1,y1,x2,y2" or "x1%,y1%,x2%,y2%").
	              Coordinates are relative to the screen, i.e. (0,0) and
	              (0%,0%) are the minimum, and (SCREEN_WIDTH, SCREEN_HEIGHT)
	              and (100%,100%) are the maximum. Values exceeding the minimun/
	              maximum are forced to the nearest limiting value. Absolute and
	              percent values can be mixed, so "0,0,50%,50%" is valid. If this
	              parameter is omitted, full image of the screen is captured
	              (equivalent to "0,0,100%,100%").
              </detailed_desc> </description> </parameter>                          
     </parameters><examples>
        <example>
           <usage>C, TakeScreenShot, "screenshot.png", Yes </usage>
           <description> <short_desc> 
                 Get the screenshot and save the image to file YourTestProject\Datapool\Test\screenshot.png
              </short_desc> </description> </example>
        <example>
           <usage>C, TakeScreenShot, "d:\temp\image\screenshot.png", No </usage>
           <description> <short_desc> 
                 Get the screenshot and save the image to file d:\temp\image\screenshot.png
              </short_desc> </description> </example>
        <example>
           <usage>C, TakeScreenShot, "image\screenshot.png" </usage>
           <description> <short_desc> 
                 Get the screenshot and save the image to file YourTestProject\Datapool\image\screenshot.png
              </short_desc> </description> </example>              
        <example>
           <usage>C, TakeScreenShot, "screenshotPart.png", , "0;0;50%;50%" </usage>
           <description> <short_desc> 
                 Get part of the screenshot and save the image to file YourTestProject\Datapool\Test\screenshotPart.png
              </short_desc> </description> </example>              
     </examples></keyword>
     
  <keyword name="HIDESOFTKEYBOARD" 
           displayText="HideSoftKeyboard" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Hide the soft keyboard.
              </short_desc> <detailed_desc>
                 Hide the soft keyboard. The soft keyboard will be shown if user click on an edit box, 
                 but the soft keyboard will show over the other components. User can use this keyword 
                 to make this soft keyboard disappear.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Google" tool="Android" name="Android" since="20130313" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20130313">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine> 
       </engines>

       <parameters>             
     </parameters><examples>
        <example>
           <usage>C, HideSoftKeyboard</usage>
           <description> <short_desc> 
                Hide the soft keyboard.
              </short_desc> </description> </example>           
     </examples></keyword> 
         
  <keyword name="SHOWSOFTKEYBOARD" 
           displayText="ShowSoftKeyboard" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Show the soft keyboard.
              </short_desc> <detailed_desc>
                 Show the soft keyboard.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="Google" tool="Android" name="Android" since="20130313" >
				<libraryInfo name="DDDriverCommands" 
					 doc="http://safsdev.sourceforge.net/doc/org/safs/android/DDDriverCommand.html" 
					 sourcecode="org.safs.android.DDDriverCommand.java" 
					 class="MISC" />
            	<domains>
            		<domain name="DEV" since="20130313">
	        			<libraryInfo name="DriverProcessor" 
                             doc="http://safsdev.sourceforge.net/doc/org/safs/android/engine/processor/DriverProcessor.html" 
                             sourcecode="org.safs.android.engine.processor.DriverProcessor.java" 
                             class="MISC" />
                    </domain>
                </domains>
           </engine> 
       </engines>

       <parameters>             
     </parameters><examples>
        <example>
           <usage>C, ShowSoftKeyboard</usage>
           <description> <short_desc> 
                Show the soft keyboard.
              </short_desc> </description> </example>           
     </examples></keyword>     

  <keyword name="NOTIFYANDWAIT" 
           displayText="NotifyAndWait" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description> <short_desc> 
                 Display a user-defined message dialog and wait until dismissed.
              </short_desc> <detailed_desc>
                 Display a user-defined message dialog and wait until dismissed.
                 If prompting the user to perform some action the message should indicate the action 
                 should be completed BEFORE the dialog is dismissed.  Once the dialog is dismissed 
                 automated test execution proceeds immediately.
              </detailed_desc> </description>
           
       <engines>
           <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20140618" >
	       <libraryInfo name="TIDDriverCommands" 
                            doc="org/safs/tools/engines/TIDDriverCommands.html" 
                            sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                            class="MISC" />
           </engine>           
           <engine vendor="SAFS" tool="SDCommands" name="SAFS Driver Commands" since="20140618" >
	       <libraryInfo name="DDDriverCommands" 
                            doc="DCDriverMiscCommands.htm" 
                            sourcecode="org.safs.DCDriverMiscCommands.java" 
                            class="MISC" />
           </engine>
       </engines>

       <parameters>  
        <parameter name="MESSAGE" displayText="Message" optional="NO">
           <description> <short_desc> 
                 The text message to be displayed in the dialog.
              </short_desc> <detailed_desc> 
                 The text message to be displayed in the dialog.  The message should not contain the 
                 inputrecord field separator character nor linefeeds or carriage returns.
              </detailed_desc> </description> </parameter>
        <parameter name="TITLE" displayText="Title" optional="YES">
           <description> <short_desc> 
                 A short user-defined title for the dialog.
              </short_desc> <detailed_desc> 
                 A short user-defined title for the dialog. The message should not contain the 
                 inputrecord field separator character nor linefeeds or carriage returns.
              </detailed_desc> </description> </parameter>
     </parameters><examples>
        <example>
           <usage>C, NotifyAndWait, "Fix the app state and then press OK."</usage>
           <description> <short_desc> 
                Show the message using a default title and wait.
              </short_desc> </description> </example>           
        <example>
           <usage>C, NotifyAndWait, "Fix the app state and then press OK.", "Fix Application"</usage>
           <description> <short_desc> 
                Show the message using the optional user-specified title and wait.
              </short_desc> </description> </example>           
     </examples>
     </keyword>
     <keyword name="SENDEMAIL" 
                displayText="SendEmail" 
                deprecated="NO" 
                expectFailSupport="NO" 
                expectWarnSupport="NO">
                
            <description> <short_desc>Send email notification with attachments.</short_desc> <detailed_desc>Send email notification with attachments.
                      Mutiple TOs, custom subject line, custom message and attachment are allowed. 
                      HTML tag pass into message to display message into HTML format.</detailed_desc> </description>
                
            <engines>
                <engine vendor="SAFS" tool="TIDDriverCommands" name="Tool-Independent Driver" since="20150609" >
     	       <libraryInfo name="TIDDriverCommands" 
                                 doc="org/safs/tools/engines/TIDDriverCommands.html" 
                                 sourcecode="org.safs.tools.engines.TIDDriverCommands.java" 
                                 class="MISC" />
                </engine>           
                <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150609" >
     	       <libraryInfo name="DDDriverCommands" 
                                 doc="DCDriverMiscCommands.htm" 
                                 sourcecode="org.safs.DCDriverMiscCommands.java" 
                                 class="MISC" />
                </engine>
            </engines>
     
            <parameters>  
             <parameter name="FROM" displayText="From" optional="NO">
                <description> <short_desc>Email address sending the Email.</short_desc> <detailed_desc>Email address of the user or system sending the email.</detailed_desc> </description> </parameter>
             <parameter name="TO" displayText="To" optional="NO">
                <description> <short_desc>Email addresses to receive the email.</short_desc> <detailed_desc>Email addresses to receive the email. Multiple addresses can be specified with semicolon or comma separators--whichever is NOT the field separator for the record.</detailed_desc> </description> </parameter>
	     <parameter name="SUBJECT" displayText="Subject" optional="NO">
                <description> <short_desc>The Subject of the email.</short_desc> </description> </parameter>
             <parameter name="MESSAGE" displayText="Message" optional="YES">
                <description> <short_desc>Text or HTML message.</short_desc> <detailed_desc>Text or HTML message can be specified. HTML message requires HTML tag to work properly.  The message cannot contain the field separator for the record.</detailed_desc> </description> </parameter>
             <parameter name="ATTACHMENT" displayText="Attachment" optional="YES">
                <description> <short_desc>Email attachment file path</short_desc> <detailed_desc>Email attachment file path. Multiple filepaths (files) can be specified with semicolons or comma separators--whichever is NOT the field separator for the record.</detailed_desc> </description> </parameter>          
          </parameters><examples>
             <example>
                <usage>C, SendEmail, "TestSuite@company.com", "TestMonitor@company.com", "TestSuite Results Report" ,"PASSED"</usage>
                <description> <short_desc>Send email indicating a specific TestSuite has PASSED.</short_desc> </description> </example>           
             <example>
                <usage>C, SendEmail, "TestSuite@company.com", "TestMonitor@company.com;bob.cares@company.com", "TestSuite Screenshot" , "Screenshot Feature 2", "fullpath/To/Test/ScreenShotF2.jpg"</usage>
                <description> <short_desc>Send email to a monitor and Bob and a screenshot. </short_desc> </description> </example>           
     </examples>
     </keyword>
	 
	<keyword name="GETURL" 
             displayText="GetURL" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
       <description>
            <short_desc>Send an HTTP GET request, and get the response.</short_desc>
			<note>
			  <value>The optional parameters 'HeaderName' and 'HeaderValue' must appear in pair, 
			         and they can present more than 1 time, which means multiple pair of ('HeaderName', 'HeaderValue')
					 can be provided.
			  </value>
			</note>
			<note>
			   <engines>
				   <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716"></engine>
			   </engines>
			   <value>The HTTP request will be sent by javascript AJAX.</value>
			</note>
	   </description>
           
       <engines>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>
       <parameters>
        <parameter name="URL" displayText="URL" optional="No">
           <description>
		   <short_desc>The URL to request.</short_desc>
           </description>
        </parameter>
        <parameter name="VARIABLE" displayText="Variable" optional="No">
           <description>
		   <short_desc>The name of the variable holding the response sent back from the server.</short_desc>
		   <detailed_desc>
		     Some suffixes can be appended to the variable name to form new variable holding other values, suffixes list as below:<br/>
			 <ul>
		     <li>.readyState contains 'AJAX Ready State Code', such as "0", "1", "2", "3" and "4".</li>
			 <li>.headers contains the response headers</li>
			 <li>.status contains the HTTP status code, such as "200", "404" etc.</li>
			 <li>.statusText contains the HTTP status text, such as "OK", "Not Found" etc.</li>
			 <li>.xml contains the XML response if it exists.</li>
			 </ul>
		   </detailed_desc>
           </description>
        </parameter>
       <parameter name="TIMEOUT" displayText="Timeout" optional="Yes">
           <description>
		   <short_desc>The timeout (in seconds) waiting for the response from HTTP server. The default value is 120 seconds.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERNAME" displayText="HeaderName" optional="Yes">
           <description>
              <short_desc>The HTTP request header name.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERVALUE" displayText="HeaderValue" optional="Yes">
           <description>
              <short_desc>The value to set for the HTTP request header.</short_desc>
           </description>
        </parameter>
     </parameters>
	 <examples>
        <example>
           <usage>C, GetURL, "http://rest.api.url", "response", "60"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url" and wait for response with timeout of 60 seconds,
                 and the variable "response" will hold the request's result from server.
              </short_desc></description>
	    </example>
        <example>
           <usage>C, GetURL, "http://rest.api.url?var1=value&amp;var2=value", "response"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url?var1=value&amp;var2=value",
                 and wait for response with the default timeout of 120 seconds, 
				 and the variable "response" will hold the request's result from server.
              </short_desc></description>
	    </example>
        <example>
           <usage>C, GetURL, "http://rest.api.url", "response", "", "Accept", "text/*", "Accept-Charset", "UTF-8"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url" with headers ("Accept","text/*") and ("Accept-Charset","UTF-8"),
                 and wait for response with the default timeout of 120 seconds,
				 and the variable "response" will hold the request's result from server.
              </short_desc></description>
	    </example>
     </examples>
	</keyword>
	 
	<keyword name="SAVEURLTOFILE" 
	
             displayText="SaveURLToFile" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
       <description>
            <short_desc>Send an HTTP GET request, and save the response into a file.</short_desc>
			<note>
			  <value>The optional parameters 'HeaderName' and 'HeaderValue' must appear in pair, 
			         and they can present more than 1 time, which means multiple pair of ('HeaderName', 'HeaderValue')
					 can be provided.
			  </value>
			</note>
			<note>
			   <engines>
				   <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716"></engine>
			   </engines>
			   <value>The HTTP request will be sent by javascript AJAX.</value>
			</note>
	   </description>
           
       <engines>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>
       <parameters>
        <parameter name="URL" displayText="URL" optional="No">
           <description>
		   <short_desc>The URL to request.</short_desc>
           </description>
        </parameter>
        <parameter name="FILE" displayText="File" optional="No">
           <description>
		   <short_desc>The name of the file holding the response sent back from the server.</short_desc>
		   <detailed_desc>
		     The file to save the response from the server. This can be a full path, a relative path, or a file name.
			 For relative path, it is appended to the project's path to build the full path of the file. 
			 For file name, the file is saved under the project's test directory (it is Datapool\Test in SAFS or Acturals in SE+).
			 In any case the parent folder of the file must exist.
		   </detailed_desc> 
           </description>
        </parameter>
       <parameter name="TIMEOUT" displayText="Timeout" optional="Yes">
           <description>
		   <short_desc>The timeout (in seconds) waiting for the response from HTTP server. The default value is 120 seconds.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERNAME" displayText="HeaderName" optional="Yes">
           <description>
              <short_desc>The HTTP request header name.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERVALUE" displayText="HeaderValue" optional="Yes">
           <description>
              <short_desc>The value to set for the HTTP request header.</short_desc>
           </description>
        </parameter>
     </parameters>
	 <examples>
        <example>
           <usage>C, SaveURLToFile, "http://rest.api.url", "reponse.txt", "60"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url" and wait for response with timeout of 60 seconds,
				 and the request's result from server will be save to file "reponse.txt" under project's test directory.
              </short_desc></description>
	    </example>
        <example>
           <usage>C, SaveURLToFile, "http://rest.api.url?var1=value&amp;var2=value", "result\reponse.txt"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url?var1=value&amp;var2=value", 
				 and wait for response with default timeout of 120 seconds,
				 and the request's result from server will be save to file "reponse.txt" under project's result directory,
				 the folder 'result' must already exist in the project.
              </short_desc></description>
	    </example>
        <example>
           <usage>C, SaveURLToFile, "http://rest.api.url", "c:\test\result\reponse.txt", "", "Accept", "text/*", "Accept-Charset", "UTF-8"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url" with headers ("Accept","text/*") and ("Accept-Charset","UTF-8"),
				 and wait for response with default timeout of 120 seconds,
				 and the request's result from server will be save to file "c:\test\result\reponse.txt".
              </short_desc></description>
	    </example>
     </examples>
	</keyword>
	
	<keyword name="VERIFYURLTOFILE" 
             displayText="VerifyURLToFile" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
       <description>
            <short_desc>Send an HTTP GET request, and verify the response with the content of a file.</short_desc>
			<note>
			  <value>The optional parameters 'HeaderName' and 'HeaderValue' must appear in pair, 
			         and they can present more than 1 time, which means multiple pair of ('HeaderName', 'HeaderValue')
					 can be provided.
			  </value>
			</note>
			<note>
			   <engines>
				   <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716"></engine>
			   </engines>
			   <value>The HTTP request will be sent by javascript AJAX.</value>
			</note>
	   </description>
           
       <engines>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>
       <parameters>
        <parameter name="URL" displayText="URL" optional="No">
           <description>
		   <short_desc>The URL to request.</short_desc>
           </description>
        </parameter>
        <parameter name="BENCHFILE" displayText="BenchFile" optional="No">
           <description>
		   <short_desc>The name of the bench file holding the content to be compared with the response sent back from the server.</short_desc>
		   <detailed_desc>
		     The bench file can be a full path, a relative path, or a file name.
			 For relative path, it is appended to the project's path to build the full path of the file. 
			 For file name, the file is supposed under the project's bench directory (it is Datapool\Bench in SAFS or Benchmarks in SE+).
			 In any case the parent folder of the file must exist.
		   </detailed_desc> 
           </description>
        </parameter>
       <parameter name="TIMEOUT" displayText="Timeout" optional="Yes">
           <description>
		   <short_desc>The timeout (in seconds) waiting for the response from HTTP server. The default value is 120 seconds.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERNAME" displayText="HeaderName" optional="Yes">
           <description>
              <short_desc>The HTTP request header name.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERVALUE" displayText="HeaderValue" optional="Yes">
           <description>
              <short_desc>The value to set for the HTTP request header.</short_desc>
           </description>
        </parameter>
     </parameters>
	 <examples>
        <example>
           <usage>C, VerifyURLToFile, "http://rest.api.url", "reponse.txt"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url", 
				 and wait for response with default timeout of 120 seconds,
				 and verify request's result from server with the content of file "reponse.txt" under project's bench directory.
              </short_desc></description>
	    </example>
        <example>
           <usage>C, VerifyURLToFile, "http://rest.api.url?var1=value&amp;var2=value", "compare\reponse.txt"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url?var1=value&amp;var2=value", 
				 and wait for response with default timeout of 120 seconds,
				 and verify request's result from server with the content of file "reponse.txt" under project's compare directory.
				 the fodler 'compare' must already exist in the project.
              </short_desc></description>
	    </example>
        <example>
           <usage>C, VerifyURLToFile, "http://rest.api.url", "c:\test\compare\reponse.txt", "60", "Accept", "text/*", "Accept-Charset", "UTF-8"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url" with headers ("Accept","text/*") and ("Accept-Charset","UTF-8"),
				 and wait for response with timeout of 60 seconds,
				 and verify request's result from server with the content of file "c:\test\compare\reponse.txt".
              </short_desc></description>
	    </example>
     </examples>
	</keyword>

	<keyword name="VERIFYURLCONTENT" 
             displayText="VerifyURLContent" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
       <description>
            <short_desc>Send an HTTP GET request, and verify the response with the content provided as parameter.</short_desc>
			<note>
			  <value>The optional parameters 'HeaderName' and 'HeaderValue' must appear in pair, 
			         and they can present more than 1 time, which means multiple pair of ('HeaderName', 'HeaderValue')
					 can be provided.
			  </value>
			</note>
			<note>
			   <engines>
				   <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716"></engine>
			   </engines>
			   <value>The HTTP request will be sent by javascript AJAX.</value>
			</note>
	   </description>
           
       <engines>
	       <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20150716">
	           <libraryInfo name="DDDriverCommands" 
                            doc="org/safs/selenium/webdriver/DCDriverCommand.html" 
                            sourcecode="org.safs.selenium.webdriver.DCDriverCommand.java" 
                            class="MISC" />
           </engine>
       </engines>
       <parameters>
        <parameter name="URL" displayText="URL" optional="No">
           <description>
		   <short_desc>The URL to request.</short_desc>
           </description>
        </parameter>
        <parameter name="BENCHCONTENT" displayText="BenchContent" optional="No">
           <description>
		   <short_desc>The bench content to be compared with the response sent back from the server.</short_desc>
           </description>
        </parameter>
       <parameter name="TIMEOUT" displayText="Timeout" optional="Yes">
           <description>
		   <short_desc>The timeout (in seconds) waiting for the response from HTTP server. The default value is 120 seconds.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERNAME" displayText="HeaderName" optional="Yes">
           <description>
              <short_desc>The HTTP request header name.</short_desc>
           </description>
        </parameter>
        <parameter name="HEADERVALUE" displayText="HeaderValue" optional="Yes">
           <description>
              <short_desc>The value to set for the HTTP request header.</short_desc>
           </description>
        </parameter>
     </parameters>
	 <examples>
        <example>
           <usage>C, VerifyURLContent, "http://rest.api.url", "some expected response content", "60"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url", 
				 and wait for response with timeout of 60 seconds,
				 and verify request's result from server with the content "some expected response content".
              </short_desc></description>
	    </example>
        <example>
           <usage>C, VerifyURLContent, "http://rest.api.url?var1=value&amp;var2=value", "some expected response content"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url?var1=value&amp;var2=value", 
				 and wait for response with default timeout of 120 seconds,
				 and verify request's result from server with the content "some expected response content".
              </short_desc></description>
	    </example>
        <example>
           <usage>C, VerifyURLContent, "http://rest.api.url", "some expected response content", "60", "Accept", "text/*", "Accept-Charset", "UTF-8"</usage>
           <description><short_desc> 
                 Send an HTTP "GET" request for url "http://rest.api.url" with headers ("Accept","text/*") and ("Accept-Charset","UTF-8"),
				 and wait for response with timeout of 60 seconds,
				 and verify request's result from server with the content "some expected response content".
              </short_desc></description>
	    </example>
     </examples>
	</keyword>	
	
</keywords></keyword_library>
    