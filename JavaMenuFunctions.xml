<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE keyword_library SYSTEM "keyword_library.dtd">
<keyword_library>

    <libraryType type="COMPONENT" />
    
    <libraryInfo name="JavaMenuFunctions" 
                 doc="JavaMenuFunctions.htm" 
                 sourcecode="JavaMEnuFunctions.sbl" 
                 chainTo="GenericObjectFunctions"
                 class="JAVAMENU">

        <description>
           <short_desc> 
              Actions for working with Java Swing JMenu objects
           </short_desc>
        </description>

    </libraryInfo>
    <runtime platform="Windows" engine="Robot" version="2002" />
    <keywords>
  
    <keyword name="SELECTMENUITEM" 
             displayText="SelectMenuItem" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
          <description>
              <short_desc> 
                 Action to select a menuItem according to its text value.
              </short_desc>
              <detailed_desc>
                 In RRAFS, this command will work on both JavaMenu items and JavaPopupMenu items.<br/>
              </detailed_desc>
              <note>
              	<engines>
			   		<engine vendor="Rational" tool="RobotJ" name="RobotJ"></engine>
	            </engines>
              	<value>
              		When Field5 is provided, the routine first verifies that the specified menuitem exists 
              		and exits with error if it does not. If it does exist then the select found menuitem.
				</value>
              </note>
              <note>
              	<engines>
			   		<engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20160520" >
			   		    <domains><domain name="SAP"></domain></domains>
			   		</engine>
	            </engines>
              	<value>
              		We have not provided the verification for SAPUI5 application, so it is equivalent to SelectUnverifiedMenuItem.
				</value>
              </note>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="JavaMenuFunctions" 
                            doc="JavaMenuFunctions.htm" 
                            sourcecode="JavaMenuFunctions.sbl" 
                            class="JAVAMENU" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFMenuBar" 
                            doc="org/safs/rational/CFMenuBar.html" 
                            sourcecode="org.safs.rational.CFMenuBar.java" 
                            class="JAVAMENU" />
           </engine>
		   <engine vendor="Automated QA" tool="TestComplete" name="Test Complete" since="20111227" >
			   <libraryInfo name="JavaPopupMenu"
					sourcecode="JavaPopupMenuFunctions.SVB"
					class="JAVAMENU" />
                   <domains>
                   <domain name="FLEX" since="20111227">
                       <libraryInfo name="FlexMenuBar" 
                                    class="MENUBAR" 
                                    subClass="FLEX"
                                    sourcecode="FlexMenuBar.SVB" />                  
                   </domain>
                   <domain name="JAVA" since="20131111">
                       <libraryInfo name="JavaPopupMenu" 
                                    class="JAVAMENU" 
                                    subClass="JAVA" 
                                    sourcecode="JavaPopupMenuFunctions.SVB" />                  
                   </domain>
                   </domains>				
          </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140701" >
	           <libraryInfo name="CFMenuBar" 
                            doc="org/safs/selenium/webdriver/CFMenuBar.html" 
                            sourcecode="org.safs.selenium.webdriver.CFMenuBar.java"
                            class="MENUBAR"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="TEXTVALUE" displayText="TextValue" optional="YES">
           <description>
              <short_desc> 
                 Case-sensitive text of menuItem to select OR an App Map reference.
              </short_desc>
              <detailed_desc>
                 TextValue is the case-sensitive text of the menuitem to select.
                 Parent-Child relationships are separated by "-&gt;".<br />
                 Alternatively, the TextValue can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit menu item text in the App Map.
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>The textvalue can use wildcast or regex.</value>
              </note>
           </description>
        </parameter>
        <parameter name="INDEXPATH" displayText="indexPath" optional="YES">
           <description>
              <short_desc> 
                 The index for item of each level. It is 1-based.
              </short_desc>
              <detailed_desc>
                 The index for item of each level. It is 1-based.
                 If there are several menuitem in the same level with same text, this
                 parameter can be used to indicate which one is wanted.
                 Parent-Child relationships are separated by "-&gt;".<br />
                 Alternatively, the indexPath can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit indexes in the App Map. 
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>This parameter is supported.</value>
              </note>
           </description>
        </parameter>        
     </parameters><examples>
        <example>
           <usage>T, WINDOW, FileMenu, SelectMenuItem</usage>
           <description>
              <short_desc> 
                This action selects the FileMenu menuitem as defined in the AppMap.
              </short_desc>
              <detailed_desc>
                This mode is less desirable as it may not work with compatible engines 
                made with tools other than Rational Robot.
              </detailed_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, FileMenu, SelectMenuItem, "Exit"</usage>
           <description>
              <short_desc> 
                This action selects the "Exit" menuItem from the FileMenu as defined in the AppMap.
              </short_desc>
              <detailed_desc>
                This mode is less desirable as it may not work with compatible engines 
                made with tools other than Rational Robot.
              </detailed_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJmenu, SelectMenuItem, "File"</usage>
           <description>
              <short_desc> 
                This action selects the "File" menu.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectMenuItem, "File-&gt;Exit"</usage>
           <description>
              <short_desc> 
                This action selects the "Exit" menuitem found in the "File" menu.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJmenu, SelectMenuItem, "FileOpen"</usage>
           <description>
              <short_desc> 
                This action selects the menuItem defined in a "FileOpen" subkey of [AJMenu] 
                from within the App Map.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectMenuItem, "File-&gt;Exit", "1-&gt;2"</usage>
           <description>
              <short_desc> 
                This action selects the 2th "Exit" menuitem found in the 1th "File" menu of menubar.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectMenuItem, "Fil*-&gt;[eE]xit"</usage>
           <description>
              <short_desc>
                This action selects the "Exit" menuitem found in the "File" menu of menubar.
              </short_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>"File" is given as a willcast string "Fil*", "Exit" is given as a regex string "[eE]xit".</value>
              </note>
           </description>
        </example> 
     </examples></keyword>
     
  <keyword name="SELECTMENUITEMCONTAINS" 
           displayText="SelectMenuItemContains" 
           deprecated="NO" 
           expectFailSupport="NO" 
           expectWarnSupport="NO">
           
       <description>
              <short_desc> 
                 Action to select a menuItem according to a partial match of its text value.
              </short_desc>
              <detailed_desc>
                 In RRAFS, this command will work on both JavaMenu items and JavaPopupMenu items.<br/>
              </detailed_desc>
              <note>
              	<engines>
			   		<engine vendor="Rational" tool="RobotJ" name="RobotJ"/>
	            </engines>
              	<value>
              		When Field5 is provided, the routine first verifies that the specified menuitem exists 
              		and exits with error if it does not. If it does exist then the select found menuitem.
				</value>
              </note>
              <note>
                <engines>
                    <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20160520" >
                        <domains><domain name="SAP"></domain></domains>
                    </engine>
                </engines>
                <value>
                    We have not provided the verification for SAPUI5 application.
                </value>
              </note>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="Robot" name="Robot" since="20030827" >
	       <libraryInfo name="JavaMenuFunctions" 
                            doc="JavaMenuFunctions.htm" 
                            sourcecode="JavaMenuFunctions.sbl" 
                            class="JAVAMENU" />
           </engine>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFMenuBar" 
                            doc="org/safs/rational/CFMenuBar.html" 
                            sourcecode="org.safs.rational.CFMenuBar.java" 
                            class="JAVAMENU" />
           </engine>
		   <engine vendor="Automated QA" tool="TestComplete" name="Test Complete" since="20111227" >
			   <libraryInfo name="JavaMenuFunctions"
					sourcecode="JavaMenuFunctions.SVB"
					class="JAVAMENU" />
               <domains>
                   <domain name="FLEX" since="20111227">
                       <libraryInfo name="JavaMenuFunctions" 
                                    class="MENUBAR" 
                                    subClass="FLEX"
                                    sourcecode="FlexMenuBar.SVB" />                  
                   </domain>
               </domains>				
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140701" >
	           <libraryInfo name="CFMenuBar" 
                            doc="org/safs/selenium/webdriver/CFMenuBar.html" 
                            sourcecode="org.safs.selenium.webdriver.CFMenuBar.java"
                            class="MENUBAR"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="TEXTVALUE" displayText="TextValue" optional="YES">
           <description>
              <short_desc> 
                 Case-insensitive substring of menuItem to select OR an App Map reference.
              </short_desc>
              <detailed_desc>
                 Parent-Child relationships are separated by "-&gt;"<br/>
                 Alternatively, the TextValue can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit menu item text in the App Map.<br/>
				 Note: RJ implementation: this field is required.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="INDEXPATH" displayText="indexPath" optional="YES">
           <description>
              <short_desc> 
                 The index for item of each level. It is 1-based.
              </short_desc>
              <detailed_desc>
                 The index for item of each level. It is 1-based.
                 If there are several menuitem in the same level with same text, this
                 parameter can be used to indicate which one is wanted.                 
                 Parent-Child relationships are separated by "-&gt;".<br />
                 Alternatively, the indexPath can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit indexes in the App Map.
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>This parameter is supported.</value>
              </note>
           </description>
        </parameter>        
     </parameters><examples>
        <example>
           <usage>T, WINDOW, FileMenu, SelectMenuItemContains, "exi"</usage>
           <description>
              <short_desc> 
				Verify that the FileMenu contains partially path "exi", if exist then select it.
			    For Example: If a path "Exit CTRL+X" exists in the FileMenu, then select it.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectMenuItemContains, "f-&gt;exit"</usage>
           <description>
              <short_desc>
				Verify that the AJMenu contains partially path "f-&gt;exit", if exist then select it.
			    For Example: If a path "File-&gt;Exit CTRL+X" exists in the FileMenu, then select it.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectMenuItemContains, "file-&gt;e", "1-&gt;2"</usage>
           <description>
              <short_desc> 
                Verify that the AJMenu contains partially path "file-&gt;e" with index as "1-&gt;2", if exist then select it.
                For Example: If a path "File-&gt;Exit" and "File-&gt;Edit" exists in the MenuBar, as 'File' is the first item found 
                and 'Edit' is the second item patially matched with 'e' under 'File', so "File-&gt;Edit" is selected.
              </short_desc>
           </description>
        </example>        
     </examples></keyword>

    <keyword name="SELECTUNVERIFIEDMENUITEM" 
             displayText="SelectUnverifiedMenuItem" 
             deprecated="NO" 
             expectFailSupport="NO" 
             expectWarnSupport="NO">
             
          <description>
              <short_desc> 
                 Action to select a menuItem according to its text value without verification of it's existance.
              </short_desc>
              <detailed_desc>
				  Action to select a menuItem according to its text value without verification of it's existance.
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20081125" >
	       <libraryInfo name="CFMenuBar" 
                            doc="org/safs/rational/CFMenuBar.html" 
                            sourcecode="org.safs.rational.CFMenuBar.java" 
                            class="JAVAMENU" />
           </engine>
		   <engine vendor="Automated QA" tool="TestComplete" name="Test Complete" since="20111227" >
			   <libraryInfo name="JavaMenuFunctions"
					sourcecode="JavaMenuFunctions.SVB"
					class="JAVAMENU" />
               <domains>
                   <domain name="FLEX" since="20111227">
                       <libraryInfo name="JavaMenuFunctions" 
                                    class="MENUBAR" 
                                    subClass="FLEX"
                                    sourcecode="FlexMenuBar.SVB" />                  
                   </domain>
               </domains>				
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140701" >
	           <libraryInfo name="CFMenuBar" 
                            doc="org/safs/selenium/webdriver/CFMenuBar.html" 
                            sourcecode="org.safs.selenium.webdriver.CFMenuBar.java"
                            class="MENUBAR"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="TEXTVALUE" displayText="TextValue" optional="NO">
           <description>
              <short_desc> 
                 Case-sensitive text of menuItem to select OR an App Map reference.
              </short_desc>
              <detailed_desc>
                 TextValue is the case-sensitive text of the menuitem to select.
                 Parent-Child relationships are separated by "-&gt;".<br />
                 Alternatively, the TextValue can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit menu item text in the App Map.<br/>
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>The textvalue can use wildcast or regex.</value>
              </note>
           </description>
        </parameter>
        <parameter name="INDEXPATH" displayText="indexPath" optional="YES">
           <description>
              <short_desc> 
                 The index for item of each level. It is 1-based.
              </short_desc>
              <detailed_desc>
                 The index for item of each level. It is 1-based.
                 If there are several menuitem in the same level with same text, this
                 parameter can be used to indicate which one is wanted.                 
                 Parent-Child relationships are separated by "-&gt;".<br />
                 Alternatively, the indexPath can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit indexes in the App Map.
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>This parameter is supported.</value>
              </note>
           </description>
        </parameter>        
     </parameters><examples>
        <example>
           <usage>T, WINDOW, AJmenu, SelectUnverifiedMenuItem, "File"</usage>
           <description>
              <short_desc> 
                This action selects the "File" menu.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectUnverifiedMenuItem, "File-&gt;Exit"</usage>
           <description>
              <short_desc> 
                This action selects the "Exit" menuitem found in the "File" menu.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJmenu, SelectUnverifiedMenuItem, "FileOpen"</usage>
           <description>
              <short_desc> 
                This action selects the menuItem defined in a "FileOpen" subkey of [AJMenu] 
                from within the App Map.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectUnverifiedMenuItem, "file-&gt;edit", "1-&gt;2"</usage>
           <description>
              <short_desc> 
                Select path "file-&gt;edit" with index as "1-&gt;2" under AJMenu without verification.
                For Example: If two pathes "File-&gt;Edit" and "File-&gt;Edit" exist in the AJMenu, then select the second "File-&gt;Exit".
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, SelectMenuItem, "Fil*-&gt;[eE]xit"</usage>
           <description>
              <short_desc>
                This action selects the "Exit" menuitem found in the "File" menu of menubar without verification.
              </short_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value> "File" is given as a willcast string "Fil*", "Exit" is given as a regex string "[eE]xit".</value>
              </note>
           </description>
        </example> 
     </examples></keyword>
     		
  <keyword name="VERIFYMENUITEM" 
           displayText="VerifyMenuItem" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description>
              <short_desc> 
               Attempts to verify the a particular menuitem exists in a menu.
              </short_desc>
              <detailed_desc> 
                The menuitem should be specified in the form 
                "Menu-&gt;Menu-&gt;MenuItem   CTRL+V" with the full text (ampersands optional), 
                spaces(if any), and keyboard shortcut text (if any).  
                (The ampersands precede any character in the menuitem that is underlined.)
                <p>
                This command differs from the WindowFunction.VerifyMenuItem command because 
                here we are actually seeking a JavaMenu component, not a Window that contains 
                a menu.  Also, we do not currently verify any state information like the 
                WindowFunctions.VerifyMenuItem command.
                </p>
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFMenuBar" 
                            doc="org/safs/rational/CFMenuBar.html" 
                            sourcecode="org.safs.rational.CFMenuBar.java" 
                            class="JAVAMENU" />
           </engine>
		   <engine vendor="Automated QA" tool="TestComplete" name="Test Complete" since="20111227" >
			   <libraryInfo name="JavaMenuFunctions"
					sourcecode="JavaMenuFunctions.SVB"
					class="JAVAMENU" />
               <domains>
                   <domain name="FLEX" since="20111227">
                       <libraryInfo name="JavaMenuFunctions" 
                                    class="MENUBAR" 
                                    subClass="FLEX"
                                    sourcecode="FlexMenuBar.SVB" />                  
                   </domain>
               </domains>				
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140701" >
	           <libraryInfo name="CFMenuBar" 
                            doc="org/safs/selenium/webdriver/CFMenuBar.html" 
                            sourcecode="org.safs.selenium.webdriver.CFMenuBar.java"
                            class="MENUBAR"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="MENUITEMTEXT" displayText="MenuItemText" optional="NO">
           <description>
              <short_desc> 
                Menu-&gt;MenuItem hierarchy string to identify which menuitem to find.
              </short_desc>
              <detailed_desc>
                Menu-&gt;MenuItem hierarchy string to identify which menuitem to find.
                This menu hierarchy IS case-sensitive<br/>
				TQ String. the full case-sensitive menu item path to select.  
                Ampersands (&amp;) indicating/preceding underlined characters are optional.  
                The text must include the full text including spaces and any visible shortcut key 
                combinations displayed in the text of the menu item.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="EXPECTEDSTATUS" displayText="ExpectedStatus" optional="YES">
           <description>
              <short_desc> 
                Expected status string (or part thereof) of the menuitem. 
              </short_desc>
              <detailed_desc>
                Expected status string (or part thereof) to verify.
				Only "Enabled" "Ungrayed" "Grayed" "Disabled" "Checked" "Unchecked" "Menu With N MenuItems" are supported now.  
                <br/>Ex: "Enabled Checked"         OR  "Grayed UnChecked"    etc.
                <br/>Each item separated by a space will be evaluated separately so 
                the order of the status items does not matter.
				Only the state information of interest needs to be specified.  
                These status items ARE case-insensitive,space-delimited.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="INDEXPATH" displayText="indexPath" optional="YES">
           <description>
              <short_desc> 
                 The index for item of each level. It is 1-based.
              </short_desc>
              <detailed_desc>
                 The index for item of each level. It is 1-based.
                 If there are several menuitem in the same level with same text, this
                 parameter can be used to indicate which one is wanted.                 
                 Parent-Child relationships are separated by "-&gt;".<br />
                 Alternatively, the indexPath can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit indexes in the App Map.
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>This parameter is supported.</value>
              </note>
           </description>
        </parameter>        
     </parameters><examples>

        <example>
           <usage>T, JavaWindow, JavaMenu, VerifyMenuItem, "File"</usage>
           <description>
              <short_desc> 
               This action verifies that "File" exists in the menu.
              </short_desc>
           </description>
		</example>
	    <example>
		   <usage>T, JavaWindow, JavaMenu, VerifyMenuItem, "Weird-&gt;CheckBox", "Enabled Checked"</usage>
		   <description>
              <short_desc> 
               This action verifies that "Weird-&gt;CheckBox" exists with status "Enabled Checked" in the menu.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, VerifyMenuItem, "file-&gt;edit","Enabled", "1-&gt;2"</usage>
           <description>
              <short_desc> 
                Verify that the 2th item 'edit' in 1th item 'file' in menubar exists and its status is 'Enabled'
              </short_desc>
           </description>
        </example> 
     </examples></keyword>
     
  <keyword name="VERIFYMENUITEMCONTAINS" 
           displayText="VerifyMenuItemContains" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description>
              <short_desc> 
               Attempts to verify the existence of a menuitem found by partial text match.
              </short_desc>
              <detailed_desc> 
                Attempts to verify the existence of a menuitem found by partial text match.
                The menuitem should be specified in the form "Menu-&gt;Menu-&gt;MenuItem".  
                (Optional ampersands precede any character in the menuitem that is underlined.)
                <p>
                This command differs from the WindowFunction.VerifyMenuItemContains command because 
                here we are actually seeking a JavaMenu component, not a Window that contains 
                a menu.  Also, we do not currently verify any state information like the 
                WindowFunctions.VerifyMenuItemContains command.
                </p>
              </detailed_desc>
           </description>
           
       <engines>
           <engine vendor="Rational" tool="RobotJ" name="RobotJ" since="20030827" >
	       <libraryInfo name="CFMenuBar" 
                            doc="org/safs/rational/CFMenuBar.html" 
                            sourcecode="org.safs.rational.CFMenuBar.java" 
                            class="JAVAMENU" />
           </engine>
		   <engine vendor="Automated QA" tool="TestComplete" name="Test Complete" since="20111227" >
			   <libraryInfo name="JavaMenuFunctions"
					sourcecode="JavaMenuFunctions.SVB"
					class="JAVAMENU" />
               <domains>
                   <domain name="FLEX" since="20111227">
                       <libraryInfo name="JavaMenuFunctions" 
                                    class="MENUBAR" 
                                    subClass="FLEX"
                                    sourcecode="FlexMenuBar.SVB" />                  
                   </domain>
               </domains>				
            </engine>
           <engine vendor="OpenQA" tool="Selenium" name="Selenium2.0" since="20140701" >
	           <libraryInfo name="CFMenuBar" 
                            doc="org/safs/selenium/webdriver/CFMenuBar.html" 
                            sourcecode="org.safs.selenium.webdriver.CFMenuBar.java"
                            class="MENUBAR"/>
           </engine>
       </engines>

       <parameters>
        <parameter name="MENUITEMTEXT" displayText="MenuItemText" optional="NO">
           <description>
              <short_desc> 
                Menu-&gt;MenuItem hierarchy string to identify which menuitem to find.
              </short_desc>
              <detailed_desc>
                Menu-&gt;MenuItem hierarchy string to identify which menuitem to find.
                This menu hierarchy IS case-sensitive<br/>
				TQ String. the case-sensitive menu item path to select.  
                Ampersands (&amp;) indicating/preceding underlined characters are optional.
				The text can be any substring of the full text including spaces and any visible shortcut key 
                combinations displayed in the text of the menu item.  
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="EXPECTEDSTATUS" displayText="ExpectedStatus" optional="YES">
           <description>
              <short_desc> 
                Expected status string (or part thereof) of the menuitem. 
              </short_desc>
              <detailed_desc>
                Expected status string (or part thereof) to verify.
				Only "Enabled" "Ungrayed" "Grayed" "Disabled" "Checked" "Unchecked" "Menu With N MenuItems" are supported now.  
                <br/>Ex: "Enabled Checked"         OR  "Grayed UnChecked"    etc.
                <br/>Each item separated by a space will be evaluated separately so 
                the order of the status items does not matter.
				Only the state information of interest needs to be specified.  
                These status items ARE case-insensitive,space-delimited.
              </detailed_desc>
           </description>
        </parameter>
        <parameter name="INDEXPATH" displayText="indexPath" optional="YES">
           <description>
              <short_desc> 
                 The index for item of each level. It is 1-based.
              </short_desc>
              <detailed_desc>
                 The index for item of each level. It is 1-based.
                 If there are several menuitem in the same level with same text, this
                 parameter can be used to indicate which one is wanted.                 
                 Parent-Child relationships are separated by "-&gt;".<br />
                 Alternatively, the indexPath can be an App Map reference item 
                 used in conjunction with the Component Name (field #3) that 
                 allows us to store explicit indexes in the App Map.
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>This parameter is supported.</value>
              </note>
           </description>
        </parameter>        
     </parameters><examples>

        <example>
           <usage>T, JavaWindow, JavaMenu, VerifyMenuItemContains, "Fil-&gt;Sav"</usage>
           <description>
              <short_desc> 
				Verify that the JavaMenu contains partially path "Fil-&gt;Sav".
			    For Example: If a path "File-&gt;Save" exists in the JavaMenu, then the verification is ok.
              </short_desc>
           </description>
		</example>
	    <example>
		   <usage>T, JavaWindow, JavaMenu, VerifyMenuItemContains, "Fil-&gt;Sav","Enabled"</usage>
           <description>
              <short_desc> 
				Verify that the JavaMenu contains partially path "Fil-&gt;Sav" and it's status is "Enabled".
			    For Example: If a path "File-&gt;Save" exists in the JavaMenu and it's status is "Enabled", then the verification is ok.
              </short_desc>
           </description>
        </example>
        <example>
           <usage>T, WINDOW, AJMenu, VerifyMenuItemContains, "fi-&gt;e","Enabled", "1-&gt;2"</usage>
           <description>
              <short_desc> 
                Verify that the partially matched 2th item 'e' in 1th item 'fi' in menubar exists and its status is 'Enabled'
                For Example: If two pathes "File-&gt;Edit" and "File-&gt;Exit" exist in the menubar AJMenu, the path
                "File-&gt;Exit" will be found, and if its status is "Enabled", then the verification is ok.
              </short_desc>
           </description>
        </example> 
     </examples></keyword>

  <keyword name="RESETMENUCACHE" 
           displayText="ResetMenuCache" 
           expectFailSupport="NO" 
           expectWarnSupport="NO" 
           deprecated="NO">
           
       <description>
              <short_desc> 
                 Reset the cache containing the content of whole menu.
              </short_desc>
              <detailed_desc> 
                Reset the cache containing the content of whole menu.
                <p>
                When we begin to manipulate a new menu, we should call this keyword to reset the cache.
                This cache is used for verification.
                </p>
              </detailed_desc>
              <note>
              	<engines>
			   		<engine tool="TestComplete" name="Test Complete">
	               		<domains>
	                   		<domain name="FLEX"></domain>
	               		</domains>
	            	</engine>
	            </engines>
              	<value>This command is supported</value>
              </note>              
           </description>
           
       <engines>
		   <engine vendor="Automated QA" tool="TestComplete" name="Test Complete" since="20111227" >
			   <libraryInfo name="JavaMenuFunctions"
					sourcecode="JavaMenuFunctions.SVB"
					class="JAVAMENU" />
               <domains>
                   <domain name="FLEX" since="20111227">
                       <libraryInfo name="JavaMenuFunctions" 
                                    class="MENUBAR" 
                                    subClass="FLEX"
                                    sourcecode="FlexMenuBar.SVB" />                  
                   </domain>
               </domains>				
            </engine>            
       </engines>

       <parameters/>
       <examples>

        <example>
           <usage>T, JavaWindow, JavaMenu, ResetMenuCache</usage>
           <description>
              <short_desc> 
				Reset a cache to contain the whole content of JavaMenu.
              </short_desc>
           </description>
		</example> 
     </examples></keyword>     
</keywords>
</keyword_library>
