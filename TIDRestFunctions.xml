<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE keyword_library SYSTEM "keyword_library.dtd">
<keyword_library>

	<libraryType type="COMPONENT"/> <!-- Leave it as Component, not much choice. -->

	<libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
		sourcecode="TIDComponent.java" class="REST">

		<description>
			<short_desc>
				Actions for REST request such as GET, PUT, POST, DELETE etc.
			</short_desc>
            <detailed_desc>
                <p>
                    This keyword library provides REST Actions that
                    can be used by all three DDE Drivers--CycleDriver,
                    SuiteDriver, and StepDriver. That means they can be
                    used in any keyword driven test tables regardless of
                    the test tables level--Cycle, Suite, or Step.
                </p>
                <p>
                    Each different action has different
                    parameters as described in its documentation. For
                    reference, the first fields of ALL REST Action
                    test records are defined below:
                </p>
                <dl>
                    <dt>Field #1</dt>
                    <dd>The "T" = Component Action record type specifier.</dd>

                    <dt>Field #2</dt>
                    <dd>The "SAFSREST" = Flag for REST action.</dd>
                    
                    <dt>Field #3</dt>
                    <dd>
                        The "SessionIDItem" = The map item storing the Session ID.<br/>
                        The variable "SessionIDItem" can be specified under section <b>[SAFSREST]</b> or 
                        <b>[ApplicationConstant]</b> in the map file, example as below:<br/>
                        --------- Map file example  -------<br/>
                        [SAFSREST]<br/>
                        SessionIDItem=UserAssignedSessionID<br/>
                        -----------------------------------<br/>
                        This ID is assigned by user, who needs to guarantee it is unique.<br/>
                        If the SessionIDItem is provided, the keyword <b>RestStartServiceSession</b> SHOULD be executed 
                        before executing each action keyword, which will be handled within a session.
                        There is a base URL stored for the session, and it will be prepended to a relative URI to form a REST service URL. 
                        The authentication information is also stored for the session for later action execution.<br/><br/>
                        Otherwise (no SessionIDItem provided), it will be considered as a one-shot connection, and NO <b>RestStartServiceSession</b>
                        needs to be called and user may need to provide authentication information.
                        The parameter <b>relativeURI</b> should be provided with a full-path URL<br/>
                    </dd>
                    
                    <dt>Field #4</dt>
                    <dd>The REST Action keyword.</dd>
                </dl>
                <p>Example:</p>

                <code>
                    T, SAFSREST, sessionIDItem, RestGetXML, relativeURI, responseIDVar [, body] [, headers]  [, authentication]
                </code>

                <p>
                    REST Action parameters must be placed in the test
                    record in the field position specified in the
                    documentation. Some parameters are optional.
                    However, the field associated with that parameter
                    must be honored. If you wish to skip an optional
                    parameter you must still provide an empty field for
                    that parameter.
                </p>
                <p>Example:</p>

                <code>
                    <!--  TO BE PROVIDED -->
                </code>

                <p>
                    <!-- TO BE MODIFIED ACCORDING TO EXAMPLE -->
                    The above example shows two optional fields after
                    relativeURI which are given no value(skipped).
                </p>
            </detailed_desc>
		</description>

	</libraryInfo>

    <!-- The runtime platform is not really a concern because the implementation is with Java. -->
    <runtime platform="Windows" engine="TIDComponent.java" version="2016"/>	

	<keywords>
        
        <keyword name="RESTENDSERVICESESSION" displayText="RestEndServiceSession" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Stop a session for a REST service.
                </short_desc>
                <detailed_desc>
                    Stop a session for a REST service.
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters/>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, BayerSessionID, RestEndServiceSession</usage>
                    <description>
                        <short_desc>
                            <p>Stop a session identified by value of map item BayerSessionID for a REST service.</p>
                        </short_desc>
                        <detailed_desc>
                            <p>Stop a session identified by value of map item BayerSessionID for a REST service.</p>
                        </detailed_desc>
                    </description>
                </example>

            </examples>
            
        </keyword>

        <keyword name="RESTDELETEBINARY" displayText="RestDeleteBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETECSS" displayText="RestDeleteCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETECUSTOM" displayText="RestDeleteCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETEHTML" displayText="RestDeleteHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETEJSON" displayText="RestDeleteJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETEIMAGE" displayText="RestDeleteImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETESCRIPT" displayText="RestDeleteScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETETEXT" displayText="RestDeleteText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETEXML" displayText="RestDeleteXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>

		<keyword name="RESTGETBINARY" displayText="RestGetBinary" deprecated="NO"
			     expectFailSupport="NO" expectWarnSupport="NO">

			<description>
				<short_desc>
					Perform the "GET" method on a REST service, and try to get back the binary content.
				</short_desc>
				<detailed_desc>
				    <p>
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				    </p>
					<p>
						If the field <b>SessionIDItem is provided</b> in the map, the keyword <b>RestStartServiceSession</b> SHOULD be executed 
						before executing this action, which will be handled within a session.<br/>
						Otherwise, it will be considered as a one-shot connection, 
						and NO RestStartServiceSession needs to be called and user may need to provide authentication information.
					</p>
				</detailed_desc>
			</description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

			<parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                	<description>
                	   <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI as the base-URL is provided in a session.
                           BUT it should be <b>full path URL</b> if the field <b>SessionIDItem</b> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                	</description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                	<description>
                	   <short_desc>
                	       The name of the variable holding the ID (generated internally), which is used to
                	       get the Response Object from the internal Map.
                	    </short_desc>
                	</description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                            The body could be a literal text string for something simple.
                            The body could also be a project-relative or full path to a file of larger body content in the proper format.
                            The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <!-- TODO  We might allow user to provide more headers. -->
                <!-- TODO What format? a simple string, variable holding a file path, or ... -->
                <parameter name="HEADERS" displayText="headers" optional="YES">
                	<description>
                	   <short_desc>
                	       The headers to be included in this REST request.
                	       Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                	    </short_desc>
                	</description>
                </parameter>
                <!-- TODO We might allow user to provide information about authentication. -->
                <!-- TODO What format? a simple string, variable holding a file path, or ... -->
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The authentication information to guarantee the one-shot connection successful.
                           It is ONLY useful for the situation without session; otherwise it is ignored.
                        </short_desc>
                    </description>
                </parameter>
			</parameters>
			
			<examples>

				<example>
					<usage>T, SAFSREST, BayerServiceIdItem, RestGetBinary, "sqlrest/CUSTOMER/", "BayerCustomerGetResponseIDVariable"</usage>
					<description>
						<short_desc>
							<p>Within a session, execute a GET method on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "sqlrest/CUSTOMER/"</p>
						</short_desc>
						<detailed_desc>
							The item "BayerServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
							[SAFSREST]<br/>
							BayerServiceIdItem=BayerServiceSession001<br/>
							The session is identified by sessionID "BayerServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.thomas-bayer.com/", then the full REST Service URL is "http://www.thomas-bayer.com/sqlrest/CUSTOMER/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable BayerCustomerGetResponseIDVariable.
						</detailed_desc>
					</description>
				</example>
				<example>
					<usage>T, SAFSREST, BayerServiceIdItemNonExist, RestGet, "http://www.thomas-bayer.com/sqlrest/CUSTOMER/", "BayerCustomerGetResponseIDVariable"</usage>
					<description>
						<short_desc>
							<p>Without session, execute a GET method on REST service URL "http://www.thomas-bayer.com/sqlrest/CUSTOMER/".</p>
						</short_desc>
						<detailed_desc>
							The item "BayerServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            BayerServiceIdItemNonExist=<br/>
                            This action is handled as one-shot connection.
                            The parameter <b>relativeURI</b> is provided a <b>full path URL</b> "http://www.thomas-bayer.com/sqlrest/CUSTOMER/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable BayerCustomerGetResponseIDVariable.
						</detailed_desc>
					</description>
				</example>

			</examples>
		</keyword>
        <keyword name="RESTGETCSS" displayText="RestGetCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTGETCUSTOM" displayText="RestGetCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTGETHTML" displayText="RestGetHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTGETJSON" displayText="RestGetJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTGETIMAGE" displayText="RestGetImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTGETSCRIPT" displayText="RestGetScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTGETTEXT" displayText="RestGetText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTGETXML" displayText="RestGetXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>

        <keyword name="RESTHEADBINARY" displayText="RestHeadBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADCSS" displayText="RestHeadCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADCUSTOM" displayText="RestHeadCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADHTML" displayText="RestHeadHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADJSON" displayText="RestHeadJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADIMAGE" displayText="RestHeadImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADSCRIPT" displayText="RestHeadScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADTEXT" displayText="RestHeadText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTHEADXML" displayText="RestHeadXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        
        <keyword name="RESTPATCHBINARY" displayText="RestPatchBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHCSS" displayText="RestPatchCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHCUSTOM" displayText="RestPatchCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHHTML" displayText="RestPatchHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHJSON" displayText="RestPatchJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHIMAGE" displayText="RestPatchImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHSCRIPT" displayText="RestPatchScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHTEXT" displayText="RestPatchText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHXML" displayText="RestPatchXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        
        <keyword name="RESTPOSTBINARY" displayText="RestPostBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTCSS" displayText="RestPostCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTCUSTOM" displayText="RestPostCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTHTML" displayText="RestPostHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTJSON" displayText="RestPostJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTIMAGE" displayText="RestPostImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTSCRIPT" displayText="RestPostScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTTEXT" displayText="RestPostText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTXML" displayText="RestPostXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        
        <keyword name="RESTPUTBINARY" displayText="RestPutBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTCSS" displayText="RestPutCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTCUSTOM" displayText="RestPutCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTHTML" displayText="RestPutHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTJSON" displayText="RestPutJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTIMAGE" displayText="RestPutImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTSCRIPT" displayText="RestPutScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTTEXT" displayText="RestPutText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPUTXML" displayText="RestPutXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>

        <keyword name="RESTREQUEST" displayText="RestRequest" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Perform an HTTP method on a REST service.
                </short_desc>
                <detailed_desc>
                    If the test field SessionIDItem is provided, the keyword <b>RestStartServiceSession</b> SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO <b>RestStartServiceSession</b> needs to be called and user may need to provide authentication information.
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="HTTPMETHOD" displayText="HTTPMethod" optional="NO">
                    <description>
                       <short_desc>The HTTP method to execute.</short_desc>
                       <detailed_desc>
                           It can be one of "GET" "DELETE" "POST" "PUT" "PATCH" "HEAD".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI as the base-URL is provided in a session.
                           BUT it should be <b>full path URL</b> if the parameter <b>sessionID</b> is <b>not provided</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        </short_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                            The body could be a literal text string for something simple.
                            The body could also be a project-relative or full path to a file of larger body content in the proper format.
                        </detailed_desc>
                    </description>
                </parameter>
                <!-- TODO  We might allow user to provide more headers. -->
                <!-- TODO What format? a simple string, variable holding a file path, or ... -->
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The headers to be included in this REST request.
                           Such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".
                        </short_desc>
                    </description>
                </parameter>
                <!-- TODO We might allow user to provide information about authentication. -->
                <!-- TODO What format? a simple string, variable holding a file path, or ... -->
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The authentication information to guarantee this one-shot connection successful.
                        </short_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, BayerServiceItem, RestRequest, PUT, "sqlrest/PRODUCT/61/", "BayerProductPutResponseIDVariable", "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>", "Content-Type: text/xml"</usage>
                    <description>
                        <short_desc>
                            Execute a PUT method on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "sqlrest/PRODUCT/61/"
                        </short_desc>
                        <detailed_desc>
                            <p>
                            Execute a PUT method on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "sqlrest/PRODUCT/61/"
                            It will send XML body "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>" to sever so that "product #61" will be created.
                            </p>
                            <p>
                            The <b>base-URL</b> is gotten according to sessionID "BayerProductService" (assigned when executing keyword <b>RestStartServiceSession</b>).
                            If it is "http://www.thomas-bayer.com/", then the full REST Service URL is "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable BayerProductPutResponseIDVariable.
                            </p>
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, BayerServiceItemNonExist, RestPut, PUT, "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/", "BayerProductPutResponseIDVariable", "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>", "Content-Type: text/xml"</usage>
                    <description>
                        <short_desc>
                            Execute a PUT method on REST service URL "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/".
                        </short_desc>
                        <detailed_desc>
                            <p>
                            Execute a PUT method on REST service URL "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/".
                            It will send XML body "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>" to sever so that "product #61" will be created.
                            </p>
                            <p>
                            The map item <b>BayerServiceItemNonExist</b> does <b>NOT exist</b>, this action is handled as one-shot connection.
                            The parameter <b>relativeURI</b> is provided a <b>full path URL</b> "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable BayerProductPutResponseIDVariable.
                            </p>
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        
        <keyword name="RESTSTARTSERVICESESSION" displayText="RestStartServiceSession" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Start a session for a REST service.
                </short_desc>
                <detailed_desc>
                    <p>Currently the "base URL" and "authentication information" will be stored for the opened session.</p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="BASEURL" displayText="baseURL" optional="NO">
                    <description>
                       <short_desc>The base URL to be stored with a session.</short_desc>
                       <detailed_desc>
                           This base URL will be prepended to a relative URI to form a REST service URL for the 
                           later invocation of other REST actions. 
                       </detailed_desc>
                    </description>
                </parameter>
                <!-- TODO We might allow user to provide information about authentication, finer than global settings -->
                <!-- TODO What format? a simple string, variable holding a file path, or ... -->
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The authentication information to be used during this session.
                        </short_desc>
                        <detailed_desc>
                            Normally, the authentication information will be loaded from "JVM -D parameters", "Map", or global
                            external file. Those settings are considered to be global. This parameter can
                            be used to alternate the authentication information, it will override the global settings.
                            If it is provided as <b>NOAUTHENTICATION</b>, then no authentication is needed during the session
                            even the global settings are set.
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>
                <example>
                    <usage>T, SAFSREST, BayerSessionID, RestStartServiceSession, "http://www.thomas-bayer.com/"</usage>
                    <description>
                        <short_desc>
                            Start a session for a REST service based on URL "http://www.thomas-bayer.com/".
                        </short_desc>
                        <detailed_desc>
                            <p>This session will be assigned with ID as value of map item BayerSessionID under section SAFSREST.</p>
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>

        
	</keywords>
</keyword_library>