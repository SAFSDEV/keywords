<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE keyword_library SYSTEM "keyword_library.dtd">
<keyword_library>

	<libraryType type="COMPONENT"/> <!-- Leave it as Component, not much choice. -->

	<libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
		sourcecode="TIDComponent.java" class="REST">

		<description>
			<short_desc>
				Actions for REST request such as GET, PUT, POST, DELETE etc.
			</short_desc>
            <detailed_desc>
                <p>
                    This keyword library provides REST Actions that
                    can be used by all three DDE Drivers--CycleDriver,
                    SuiteDriver, and StepDriver. That means they can be
                    used in any keyword driven test tables regardless of
                    the test tables level--Cycle, Suite, or Step.
                </p>
                <p>
                    Each different action has different
                    parameters as described in its documentation. For
                    reference, the first fields of ALL REST Action
                    test records are defined below:
                </p>
                <p><h2>First Fields Description</h2></p>
                <dl>
                    <dt>Field #1</dt>
                    <dd>The "<b>T</b>" = Component Action record type specifier.</dd>

                    <dt><span id="field_SAFSREST">Field #2</span></dt>
                    <dd>The "<b>SAFSREST</b>" = Flag for REST action.<br/>
                        It can be
                        <ul>
                        <li>a literal string "<b>SAFSREST</b>"</li>
                        <li>a map item of any name given by user, but the value MUST be "<b>SAFSREST</b>", such as<br/>
                        --------- Map file example  -------<br/>
                        [RestServiceTest]<br/>
                        RestServiceTest=<b>SAFSREST</b><br/>
                        -----------------------------------<br/>
                        </li>
                        </ul>
                    </dd>
                    
                    <dt><span id="field_SessionIDItem">Field #3</span></dt>
                    <dd>
                        The "<b>SessionIDItem</b>" = The map item storing the Session ID.<br/>
                        <b>How to define SessionIDItem</b><br/>
                        The variable "SessionIDItem" can be defined in the map file under section <b>[ApplicationConstant]</b> or 
                        section specified by <b>Field #2</b>, examples as below:<br/>
                        --------- Map file example  -------<br/>
                        <br/>
                        <span class="explain">
                        #T, <b>SAFSREST</b>, SessionIDItem, RestAction<br/>
                        #For above test record, SessionIDItem can be defined under section "<b>SAFSREST</b>"<br/>
                        </span>
                        [SAFSREST]<br/>
                        SessionIDItem=UserAssignedSessionID<br/>

                        <span class="explain">
                        #Or SessionIDItem can be defined under section "<b>ApplicationConstant</b>"<br/>
                        </span>
                        [ApplicationConstant]<br/>
                        SessionIDItem=UserAssignedSessionID<br/>
                        <br/>
                        
                        <span class="explain">
                        #T, <b>RestServiceTest</b>, SessionIDItem, RestAction<br/>
                        #For above test record, SessionIDItem is defined under section "<b>RestServiceTest</b>"<br/>
                        </span>
                        [RestServiceTest]<br/>
                        RestServiceTest=SAFSREST<br/>
                        SessionIDItem=UserAssignedSessionID<br/>

                        <span class="explain">
                        #Or SessionIDItem can be defined under section "<b>ApplicationConstant</b>"<br/>
                        </span>
                        [ApplicationConstant]<br/>
                        SessionIDItem=UserAssignedSessionID<br/>
                        <br/>
                        -----------------------------------<br/>
                        <br/>
                        <b>Notes of SessionIDItem</b><br/>
                        This ID is assigned by user, who needs to guarantee it is unique.<br/>
                        <b>If</b> the SessionIDItem is provided, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing each other action keyword, which will be handled within a session, within which:<br/>
                        1. The base URL is stored, and it will be prepended to a relative URI to form a full REST service URL.<br/> 
                        2. The authentication information is also stored for later rest action execution.<br/>
                        <br/>
                        <b>Otherwise</b> (no SessionIDItem is provided), it will be considered as a one-shot connection, and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a>
                        needs to be called and user may need to provide authentication information.
                        The parameter <b>relativeURI</b> should be provided with a full-path URL<br/>
                        <br/>
                    </dd>
                    
                    <dt><span id="field_RESTAction">Field #4</span></dt>
                    <dd>The REST Action keyword.</dd>
                </dl>

                <p><b><h2 id="authSettings">Authentication/Authorization settings</h2></b></p>
                Some REST service needs Authentication/Authorization before requesting.<br/>
                It can be globally set via .ini configuration file or VM parameter as below:<br/>
                <ul>
                <li>.ini configuration file<br/>
                    #The auth-config file should be assigned to key <b>AUTH</b> under section <b>SAFS_REST</b><br/>
                    <b>[SAFS_REST]</b><br/>
                    <a href="../doc/org/safs/Constants.RestConstants.html#ITEM_AUTH" target="api">AUTH</a>=config\<a href="../configure/auth2.xml" target="api">auth2.xml</a><br/>
                </li>
                <br/>
                <li>VM parameter<br/>
                    #The auth-config file should be assigned to parameter <b>safs.rest.auth</b><br/>
                    java -D<a href="../doc/org/safs/Constants.RestConstants.html#PROPERTY_AUTH" target="api">safs.rest.auth</a>=config\<a href="../configure/auth2.xml" target="api">auth2.xml</a> aTest<br/>
                </li>
                </ul>
                It can also be set via keyword parameter as below:<br/>
                <code>
                    T, SAFSREST, sessionIDItem, RestGetXML, relativeURI, responseIDVar [, body] [, headers]  , <b>config\<a href="../configure/auth2.xml" target="api">auth2.xml</a></b>
                </code>
                <br/>
                Auth setting via keyword parameter will only take effect during this keyword execution, and it will override the global auth setting.<br/>
                
                <p><h2>Examples:</h2></p>

                <code>
                    T, SAFSREST, sessionIDItem, RestStartServiceSession, baseURL  [, authentication]<br/>
                </code>
                <code>
                    T, SAFSREST, sessionIDItem, RestGetXML, relativeURI, responseIDVar [, body] [, headers]  [, authentication]<br/>
                </code>
                <code>
                    T, SAFSREST, sessionIDItem, RestEndServiceSession<br/>
                </code>
                <p>
                    Note:<br/>
                    <span class="note">
                    REST Action parameters must be placed in the test
                    record in the field position specified in the
                    documentation. Some parameters are optional.
                    However, the field associated with that parameter
                    must be honored. If you wish to skip an optional
                    parameter you must still provide an empty field for
                    that parameter.</span>
                </p>

            </detailed_desc>
		</description>

	</libraryInfo>

    <!-- The runtime platform is not really a concern because the implementation is with Java. -->
    <runtime platform="Windows" engine="TIDComponent.java" version="2016"/>	

	<keywords>
        
        <keyword name="RESTENDSERVICESESSION" displayText="RestEndServiceSession" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Stop a session for a REST service.
                </short_desc>
                <detailed_desc>
                    Stop a session for a REST service.
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters/>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, BayerSessionID, RestEndServiceSession</usage>
                    <description>
                        <short_desc>
                            <p>Stop a session identified by value of map item BayerSessionID for a REST service.</p>
                        </short_desc>
                        <detailed_desc>
                            <p>Stop a session identified by value of map item BayerSessionID for a REST service.</p>
                        </detailed_desc>
                    </description>
                </example>

            </examples>
            
        </keyword>

        <keyword name="RESTDELETEBINARY" displayText="RestDeleteBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Delete binary content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTDELETECSS" displayText="RestDeleteCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Delete css content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTDELETECUSTOM" displayText="RestDeleteCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "DELETE" method on a REST service with headers defined by user.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "DELETE" method with Headers defined by user.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>
                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestDeleteCustom, "relativeURL", "ResponseIDVariable", , customHeader</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a DELETE method on REST service URL formed by prepending the <b>base-URL</b> to 
                               the relative-URI "relativeURL", the method will be requested with custom header defined by map item 'customHeader'</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" and "customHeader" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            customHeader=Accept : application/octet-stream<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestDeleteCustom, "http://www.service.com/relativeURL/", "ResponseIDVariable", , "rest\customHeader.txt"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a DELETE method on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The file "&lt;project&gt;\rest\customHeader.txt" holds the header information with which to make request.
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTDELETEHTML" displayText="RestDeleteHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTDELETEJSON" displayText="RestDeleteJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Delete json content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTDELETEIMAGE" displayText="RestDeleteImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Delete image content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTDELETESCRIPT" displayText="RestDeleteScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Delete javascript content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTDELETETEXT" displayText="RestDeleteText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Delete text content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTDELETEXML" displayText="RestDeleteXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Delete xml content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>

		<keyword name="RESTGETBINARY" displayText="RestGetBinary" deprecated="NO"
			     expectFailSupport="NO" expectWarnSupport="NO">
			<description>
				<short_desc>
					Perform the "GET" method on a REST service, and verify the returned content is binary before returning it.
				</short_desc>
				<detailed_desc>
				    <p>
				        This action will send the "GET" method with Headers containing "Accept : application/octet-stream".
				        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
				        This action will verify the reponse's headers containing "Content-Type: application/octet-stream" to make sure the returned content is binary.
				    </p>
					<p>
						If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
						before executing this action, which will be handled within a session.<br/>
						Otherwise, it will be considered as a one-shot connection, 
						and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information by keyword's parameter.
					</p>
				</detailed_desc>
			</description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

			<parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                	<description>
                	   <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                	</description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                	<description>
                	   <short_desc>
                	      The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                	    </short_desc>
                       <detailed_desc>
                          The "response ID" is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                	</description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                	<description>
                	   <short_desc>
                	       The custom headers to be included in this REST request.
                	    </short_desc>
                	    <detailed_desc>
                	       It can be
                	       <ol>
                	       <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                	       <li>a map item holding the literal-string or header-file-path.</li>
                	       <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                	       </ol> 
                	    </detailed_desc>
                	</description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
			</parameters>
			
			<examples>

				<example>
					<usage>T, SAFSREST, BayerServiceIdItem, RestGetBinary, "sqlrest/CUSTOMER/", "BayerCustomerResponseIDVariable"</usage>
					<description>
						<short_desc>
							<p>Within a session, execute a GET method (with Headers containing "Accept : application/octet-stream") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "sqlrest/CUSTOMER/"</p>
						</short_desc>
						<detailed_desc>
							The item "BayerServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
							[SAFSREST]<br/>
							BayerServiceIdItem=BayerServiceSession001<br/>
							<br/>
							The session is identified by sessionID "BayerServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.thomas-bayer.com/", then the full REST Service URL is "http://www.thomas-bayer.com/sqlrest/CUSTOMER/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable BayerCustomerResponseIDVariable.
						</detailed_desc>
					</description>
				</example>
				<example>
					<usage>T, SAFSREST, BayerServiceIdItemNonExist, RestGetBinary, "http://www.thomas-bayer.com/sqlrest/CUSTOMER/", "BayerCustomerResponseIDVariable"</usage>
					<description>
						<short_desc>
							<p>Without session, execute a GET method (with Headers containing "Accept : application/octet-stream") on REST service URL "http://www.thomas-bayer.com/sqlrest/CUSTOMER/".</p>
						</short_desc>
						<detailed_desc>
							The item "BayerServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            BayerServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided a <b>full path URL</b> "http://www.thomas-bayer.com/sqlrest/CUSTOMER/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable BayerCustomerResponseIDVariable.
						</detailed_desc>
					</description>
				</example>

			</examples>
		</keyword>
        <keyword name="RESTGETCSS" displayText="RestGetCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Perform the "GET" method on a REST service, and verify the returned content is css before returning it.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetCSS, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method (with Headers containing "Accept : text/css") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetCSS, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method (with Headers containing "Accept : text/css") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTGETCUSTOM" displayText="RestGetCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Perform the "GET" method on a REST service with headers defined by user, and return the content.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers defined by user.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="NO">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetCustom, "relativeURL", "ResponseIDVariable", , customHeader</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method on REST service URL formed by prepending the <b>base-URL</b> to 
                               the relative-URI "relativeURL", the method will be requested with custom header defined by map item 'customHeader'</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" and "customHeader" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            customHeader=Accept : application/octet-stream<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetCustom, "http://www.service.com/relativeURL/", "ResponseIDVariable", , "rest\customHeader.txt"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The file "&lt;project&gt;\rest\customHeader.txt" holds the header information with which to make request.
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTGETHTML" displayText="RestGetHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "GET" method on a REST service, and verify the returned content is html before returning it.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetCustom, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method (with Headers containing "Accept : text/html") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetCustom, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method (with Headers containing "Accept : text/html") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTGETJSON" displayText="RestGetJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "GET" method on a REST service, and verify the returned content is json before returning it.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetJSON, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method (with Headers containing "Accept : application/json") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetJSON, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method (with Headers containing "Accept : application/json") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTGETIMAGE" displayText="RestGetImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "GET" method on a REST service, and verify the returned content is image before returning it.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetImage, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method (with Headers containing "Accept : image") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetImage, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method (with Headers containing "Accept : image") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTGETSCRIPT" displayText="RestGetScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "GET" method on a REST service, and verify the returned content is javascript before returning it.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetScript, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method (with Headers containing "Accept : application/javascript") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetScript, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method (with Headers containing "Accept : application/javascript") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTGETTEXT" displayText="RestGetText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "GET" method on a REST service, and verify the returned content is text before returning it.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetText, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method (with Headers containing "Accept : text/plain") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetText, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method (with Headers containing "Accept : text/plain") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTGETXML" displayText="RestGetXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "GET" method on a REST service, and verify the returned content is xml before returning it.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "GET" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestGetXML, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a GET method (with Headers containing "Accept : text/xml") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestGetXML, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a GET method (with Headers containing "Accept : text/xml") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>

        <keyword name="RESTHEADBINARY" displayText="RestHeadBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is binary before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : application/octet-stream".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadBinary, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : application/octet-stream") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadBinary, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : application/octet-stream") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADCSS" displayText="RestHeadCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is css before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : text/css".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadCSS, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : text/css") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadCSS, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : text/css") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADCUSTOM" displayText="RestHeadCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method (with headers defined by user) on a REST service, and get back the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers defined by user.
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadCustom, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers defined by user) on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadCustom, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers defined by user) on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADHTML" displayText="RestHeadHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is html before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : text/html".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadHTML, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : text/html") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadHTML, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : text/html") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADIMAGE" displayText="RestHeadImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is image before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : image".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>
                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadImage, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : image") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadImage, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : image") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADJSON" displayText="RestHeadJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is json before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : application/json".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadJSON, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : application/json") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadJSON, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : application/json") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADSCRIPT" displayText="RestHeadScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is javascript before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : application/javascript".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadScript, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : application/javascript") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadScript, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : application/javascript") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADTEXT" displayText="RestHeadText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is text before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : text/plain".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadText, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : text/plain") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadText, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : text/plain") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        <keyword name="RESTHEADXML" displayText="RestHeadXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "HEAD" method on a REST service, and verify the returned content is xml before returning the header part.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "HEAD" method with Headers containing "Accept : text/xml".
                        It only tells the server what type of content is expected, and it is not guarantee that the server will return it.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The body's content-type could be defined in the headers.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestHeadXML, "relativeURL", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a HEAD method (with Headers containing "Accept : text/xml") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "relativeURL"</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestHeadXML, "http://www.service.com/relativeURL/", "ResponseIDVariable"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a HEAD method (with Headers containing "Accept : text/xml") on REST service URL "http://www.service.com/relativeURL/".</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/relativeURL/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
            </examples>
        </keyword>
        
        <keyword name="RESTPATCHBINARY" displayText="RestPatchBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHCSS" displayText="RestPatchCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHCUSTOM" displayText="RestPatchCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHHTML" displayText="RestPatchHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHJSON" displayText="RestPatchJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHIMAGE" displayText="RestPatchImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHSCRIPT" displayText="RestPatchScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHTEXT" displayText="RestPatchText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPATCHXML" displayText="RestPatchXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PATCH" method on a REST service, and verify the returned status code is 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PATCH" method with Headers containing "Content-Type : text/xml".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "users/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be a part of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>
                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPatchXML, "users/1", "ResponseIDVariable", partialUserEntity.xml</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PATCH method (with Headers containing "Content-Type : text/xml") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "users/1"</p>
                            <p>the parameter partialUserEntity.xml is the file under the test project, and it contains the xml content (a part of the user entity) to send as body part with PATCH command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPatchXML, "http://www.service.com/users/1/", "ResponseIDVariable", partialUserEntity.xml</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PATCH method (with Headers containing "Content-Type : text/xml") on REST service URL "http://www.service.com/users/1/".</p>
                            <p>the parameter partialUserEntity.xml is the file under the test project, and it contains the xml content (a part of the user entity) to send as body part with PATCH command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        
        <keyword name="RESTPOSTBINARY" displayText="RestPostBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTCSS" displayText="RestPostCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTCUSTOM" displayText="RestPostCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTHTML" displayText="RestPostHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTJSON" displayText="RestPostJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTIMAGE" displayText="RestPostImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTSCRIPT" displayText="RestPostScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTTEXT" displayText="RestPostText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
        </keyword>
        <keyword name="RESTPOSTXML" displayText="RestPostXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "POST" method on a REST service, and verify the returned status code is 201 ("created").
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "POST" method with Headers containing "Content-Type : text/xml".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to a collection, such as "users/".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity of collection indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPostXML, "users/", "ResponseIDVariable", wholeUserEntity.xml</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a POST method (with Headers containing "Content-Type : text/xml") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "users/"</p>
                            <p>the parameter wholeUserEntity.xml is the file under the test project, and it contains the xml content (the entirety of entity user) to send as body part with POST command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/users/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPostXML, "http://www.service.com/users/", "ResponseIDVariable", wholeUserEntity.xml</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a POST method (with Headers containing "Content-Type : text/xml") on REST service URL "http://www.service.com/users/".</p>
                            <p>the parameter wholeUserEntity.xml is the file under the test project, and it contains the xml content (the entirety of entity user) to send as body part with POST command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/users/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        
        <keyword name="RESTPUTBINARY" displayText="RestPutBinary" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Put binary content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTPUTCSS" displayText="RestPutCSS" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PUT" method with Headers containing "Content-Type : text/css".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "cssContents/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPutCSS, "cssContents/1", "ResponseIDVariable", wholeUserStyleEntity.css</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PUT method (with Headers containing "Content-Type : text/css") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "cssContents/1"</p>
                            <p>the parameter wholeUserStyleEntity.css is the file under the test project, and it contains the css content (the entirety of entity user's style) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/cssContents/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPutCSS, "http://www.service.com/cssContents/1/", "ResponseIDVariable", wholeUserStyleEntity.css</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PUT method (with Headers containing "Content-Type : text/css") on REST service URL "http://www.service.com/cssContents/1/".</p>
                            <p>the parameter wholeUserStyleEntity.css is the file under the test project, and it contains the css content (the entirety of entity user's style) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/cssContents/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTPUTCUSTOM" displayText="RestPutCustom" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PUT" method with Headers defined by user.
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "entities/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPutCustom, "entities/1", "ResponseIDVariable", "entityFile", "customHeader.txt"</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PUT method (with Headers defined in project-relative file "customHeader.txt") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "entities/1"</p>
                            <p>the parameter "entityFile" is the file under the test project, and it contains the some content (the entirety of an entity) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/entities/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPutCustom, "http://www.service.com/entities/1/", "ResponseIDVariable", "entityFile", "customHeader.txt"</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PUT method (with Headers defined in project-relative file "customHeader.txt") on REST service URL "http://www.service.com/entities/1/".</p>
                            <p>the parameter "entityFile" is the file under the test project, and it contains the some content (the entirety of an entity) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/entities/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTPUTHTML" displayText="RestPutHTML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PUT" method with Headers containing "Content-Type : text/html".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "htmlContents/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPutHTML, "htmlContents/1", "ResponseIDVariable", wholeUserEntity.html</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PUT method (with Headers containing "Content-Type : text/html") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "htmlContents/1"</p>
                            <p>the parameter wholeUserEntity.html is the file under the test project, and it contains the html content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/htmlContents/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPutHTML, "http://www.service.com/htmlContents/1/", "ResponseIDVariable", wholeUserEntity.html</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PUT method (with Headers containing "Content-Type : text/html") on REST service URL "http://www.service.com/htmlContents/1/".</p>
                            <p>the parameter wholeUserEntity.html is the file under the test project, and it contains the html content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/htmlContents/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTPUTJSON" displayText="RestPutJSON" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PUT" method with Headers containing "Content-Type : application/json".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "users/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPutJSON, "users/1", "ResponseIDVariable", wholeUserEntity.json</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PUT method (with Headers containing "Content-Type : application/json") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "users/1"</p>
                            <p>the parameter wholeUserEntity.json is the file under the test project, and it contains the json content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPutJSON, "http://www.service.com/users/1/", "ResponseIDVariable", wholeUserEntity.json</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PUT method (with Headers containing "Content-Type : application/json") on REST service URL "http://www.service.com/users/1/".</p>
                            <p>the parameter wholeUserEntity.json is the file under the test project, and it contains the json content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTPUTIMAGE" displayText="RestPutImage" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Put image content. Not implemented yet.
                </short_desc>
            </description>
        </keyword>
        <keyword name="RESTPUTSCRIPT" displayText="RestPutScript" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PUT" method with Headers containing "Content-Type : application/javascript".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "users/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPutText, "users/1", "ResponseIDVariable", wholeUserEntity.txt</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PUT method (with Headers containing "Content-Type : application/javascript") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "users/1"</p>
                            <p>the parameter wholeUserEntity.txt is the file under the test project, and it contains the text content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPutText, "http://www.service.com/users/1/", "ResponseIDVariable", wholeUserEntity.txt</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PUT method (with Headers containing "Content-Type : application/javascript") on REST service URL "http://www.service.com/users/1/".</p>
                            <p>the parameter wholeUserEntity.txt is the file under the test project, and it contains the text content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTPUTTEXT" displayText="RestPutText" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PUT" method with Headers containing "Content-Type : text/plain".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180224">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "users/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPutText, "users/1", "ResponseIDVariable", wholeUserEntity.txt</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PUT method (with Headers containing "Content-Type : text/plain") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "users/1"</p>
                            <p>the parameter wholeUserEntity.txt is the file under the test project, and it contains the text content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPutText, "http://www.service.com/users/1/", "ResponseIDVariable", wholeUserEntity.txt</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PUT method (with Headers containing "Content-Type : text/plain") on REST service URL "http://www.service.com/users/1/".</p>
                            <p>the parameter wholeUserEntity.txt is the file under the test project, and it contains the text content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        <keyword name="RESTPUTXML" displayText="RestPutXML" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">
            <description>
                <short_desc>
                    Perform the "PUT" method on a REST service, and verify the returned status code is 201 ("created") or 200 or 204.
                </short_desc>
                <detailed_desc>
                    <p>
                        This action will send the "PUT" method with Headers containing "Content-Type : text/xml".
                    </p>
                    <p>
                        If the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>provided</b> in the map, the keyword <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> SHOULD be executed 
                        before executing this action, which will be handled within a session.<br/>
                        Otherwise, it will be considered as a one-shot connection, 
                        and NO <a href="#detail_RestStartServiceSession">RestStartServiceSession</a> needs to be called and user may need to provide authentication information.
                    </p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20180208">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI (the base-URL is provided in a session).
                           BUT it should be <b>full path URL</b> if the field <a href="#field_SessionIDItem">SessionIDItem</a> is <b>not provided</b> or <b>invalid</b>.<br/>
                           This URL should point to an entity to be updated, such as "users/{id}".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                          The name of the variable holding "response ID", which is used by rest driver commands to verify/delete response.  
                        </short_desc>
                       <detailed_desc>
                          The ID is generated internally, and it is used to get the Response Object from the internal Map.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal text string for something simple.</li>
                           <li>a project-relative or full path to a file of larger body content in the proper format.</li>
                           </ol>
                           The content should be the ENTIRETY of the entity indicated by the parameter 'relativeURI'.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be
                           <ol>
                           <li>a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".</li>
                           <li>a map item holding the literal-string or header-file-path.</li>
                           <li>a project-relative-path or full-path to a file holding the literal header string.</li>
                           </ol> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be 
                           <ul>
                           <li>a project-relative-path or full-path to a file holding the authentication/authorization information.</li>
                           <li>a map item holding the auth-file-path.</li>
                           </ul>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect only in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>

                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestPutXML, "users/1", "ResponseIDVariable", wholeUserEntity.xml</usage>
                    <description>
                        <short_desc>
                            <p>Within a session, execute a PUT method (with Headers containing "Content-Type : text/xml") on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "users/1"</p>
                            <p>the parameter wholeUserEntity.xml is the file under the test project, and it contains the xml content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            The session is identified by sessionID "ServiceSession001", according to which the base-URL is gotten.
                            If the base-URL is "http://www.service.com/", then the full REST Service URL is "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestPutXML, "http://www.service.com/users/1/", "ResponseIDVariable", wholeUserEntity.xml</usage>
                    <description>
                        <short_desc>
                            <p>Without session, execute a PUT method (with Headers containing "Content-Type : text/xml") on REST service URL "http://www.service.com/users/1/".</p>
                            <p>the parameter wholeUserEntity.xml is the file under the test project, and it contains the xml content (the entirety of entity user) to send as body part with PUT command</p>
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItemNonExist" should <b>NOT</b> be defined, or defined with an empty value in the map:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            This action is handled as one-shot connection.
                            The parameter "relativeURI" is provided as a <b>full path URL</b> "http://www.service.com/users/1/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>

        <keyword name="RESTREQUEST" displayText="RestRequest" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Perform an HTTP method on a REST service.
                </short_desc>
                <detailed_desc>
                    If the test field SessionIDItem is provided, the keyword <b>RestStartServiceSession</b> SHOULD be executed 
                    before executing this action, which will be handled within a session.
                    Otherwise, it will be considered as a one-shot connection, 
                    and NO <b>RestStartServiceSession</b> needs to be called and user may need to provide authentication information.
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="HTTPMETHOD" displayText="HTTPMethod" optional="NO">
                    <description>
                       <short_desc>The HTTP method to execute.</short_desc>
                       <detailed_desc>
                           It can be one of "GET" "DELETE" "POST" "PUT" "PATCH" "HEAD".
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RELATIVEURI" displayText="relativeURI" optional="NO">
                    <description>
                       <short_desc>The relative URI combined with a base-URL (stored in a session) to form a REST service URL.</short_desc>
                       <detailed_desc>
                           This is normally a relative URI as the base-URL is provided in a session.
                           BUT it should be <b>full path URL</b> if the parameter <b>sessionID</b> is <b>not provided</b>.
                       </detailed_desc>
                    </description>
                </parameter>
                <parameter name="RESPONSEIDVAR" displayText="responseIdVar" optional="NO">
                    <description>
                       <short_desc>
                           The name of the variable holding the ID (generated internally), which is used to
                           get the Response Object from the internal Map.
                        </short_desc>
                    </description>
                </parameter>
                <parameter name="BODY" displayText="body" optional="YES">
                    <description>
                        <short_desc>The body to send with this REST request.</short_desc>
                        <detailed_desc>
                            The body could be a literal text string for something simple.
                            The body could also be a project-relative or full path to a file of larger body content in the proper format.
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="HEADERS" displayText="headers" optional="YES">
                    <description>
                       <short_desc>
                           The custom headers to be included in this REST request.
                        </short_desc>
                        <detailed_desc>
                           It can be a literal string, such as "If-Modified-Since: Sat, 29 OCT 1994 19:43:31 GMT".<br/>
                           It can also be a project-relative-path or full-path to a file holding the literal header string.<br/>
                           It can also be a map item holding the literal-string or header-file-path.<br/> 
                        </detailed_desc>
                    </description>
                </parameter>
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The custom authentication/authorization information.
                        </short_desc>
                        <detailed_desc>
                           It can be a project-relative-path or full-path to a file holding the authentication/authorization information.<br/>
                           It can also be a map item holding the auth-file-path.<br/>
                           This custom authentication/authorization information will override the global settings (in .ini file or by VM parameter.)<br/>
                           and take effect in this keyword execution. In the next keyword execution, the global authentication/authorization setting<br/>
                           will still be taken in account if no custom auth information is specified.<br/>
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>
                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestRequest, GET, "sqlrest/PRODUCT/", "ResponseIDVariable", "", "Accept: text/xml"</usage>
                    <description>
                        <short_desc>
                            Execute a GET method on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "sqlrest/PRODUCT/"
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            <p>
                            It will GET XML content from the sever.
                            </p>
                            <p>
                            The <b>base-URL</b> is gotten according to sessionID "ServiceSession001" (assigned when executing keyword <b>RestStartServiceSession</b>).
                            If it is "http://www.thomas-bayer.com/", then the full REST Service URL is "http://www.thomas-bayer.com/sqlrest/PRODUCT/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                            </p>
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItem, RestRequest, PUT, "sqlrest/PRODUCT/61/", "ResponseIDVariable", "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>", "Content-Type: text/xml"</usage>
                    <description>
                        <short_desc>
                            Execute a PUT method on REST service URL formed by prepending the <b>base-URL</b> to the relative-URI "sqlrest/PRODUCT/61/"
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItem=ServiceSession001<br/>
                            <br/>
                            <p>
                            It will send XML body "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>" to sever so that "product #61" will be created.
                            </p>
                            <p>
                            The <b>base-URL</b> is gotten according to sessionID "ServiceSession001" (assigned when executing keyword <b>RestStartServiceSession</b>).
                            If it is "http://www.thomas-bayer.com/", then the full REST Service URL is "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                            </p>
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, ServiceIdItemNonExist, RestRequest, PUT, "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/", "ResponseIDVariable", "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>", "Content-Type: text/xml"</usage>
                    <description>
                        <short_desc>
                            Execute a PUT method on REST service URL "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/".
                        </short_desc>
                        <detailed_desc>
                            The item "ServiceIdItem" <b>MUST</b> be defined in the map such as:<br/>
                            [SAFSREST]<br/>
                            ServiceIdItemNonExist=<br/>
                            <br/>
                            <p>
                            It will send XML body "<![CDATA[<resource><NAME>CarSeat</NAME><PRICE>125.00</PRICE></resource>]]>" to sever so that "product #61" will be created.
                            </p>
                            <p>
                            The map item <b>ServiceIdItemNonExist</b> does <b>NOT exist</b>, this action is handled as one-shot connection.
                            The parameter <b>relativeURI</b> is provided as a <b>full path URL</b> "http://www.thomas-bayer.com/sqlrest/PRODUCT/61/".
                            The Response Object will be stored in an internal Map with a generated ID, which will be saved to a variable ResponseIDVariable.
                            </p>
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>
        
        <keyword name="RESTSTARTSERVICESESSION" displayText="RestStartServiceSession" deprecated="NO"
                 expectFailSupport="NO" expectWarnSupport="NO">

            <description>
                <short_desc>
                    Start a session for a REST service.
                </short_desc>
                <detailed_desc>
                    <p>Currently the "base URL" and "authentication information" will be stored for the opened session.</p>
                </detailed_desc>
            </description>

            <engines>
                <engine vendor="SAFS" tool="TIDComponent" name="SAFS TID Components" since="20161231">
                    <libraryInfo name="TIDRestFunctions" doc="TIDRestFunctions.htm"
                        sourcecode="TIDComponent.java" class="REST"/>
                </engine>
            </engines>

            <parameters>
                <parameter name="BASEURL" displayText="baseURL" optional="NO">
                    <description>
                       <short_desc>The base URL to be stored with a session.</short_desc>
                       <detailed_desc>
                           This base URL will be prepended in front of a relative URI to form a REST service URL for the 
                           later invocation of other REST actions. 
                       </detailed_desc>
                    </description>
                </parameter>
                <!-- We allow user to provide information about authentication, finer than global settings in .ini configure file-->
                <parameter name="AUTHENTICATION" displayText="authentication" optional="YES">
                    <description>
                       <short_desc>
                           The file holding authentication information to be used during this session.
                        </short_desc>
                        <detailed_desc>
                            Normally, the authentication information will be loaded from <a href="#authSettings">"JVM -D parameters", "Map", or global
                            external file</a>, those settings are considered to be global. This parameter can
                            be used to alternate the authentication information, it will override the global settings.<br/>
                            It is normally provided as a file name holding the authentication information. The file is relative
                            to the project's root directory, and it can contain sub directories.<br/>
                            If it is provided as <b>NOAUTHENTICATION</b>, then no authentication is needed during the session
                            even the global settings are set.
                        </detailed_desc>
                    </description>
                </parameter>
            </parameters>
            
            <examples>
                <example>
                    <usage>T, SAFSREST, BayerSessionID, RestStartServiceSession, "http://www.thomas-bayer.com/"</usage>
                    <description>
                        <short_desc>
                            Start a session for a REST service based on URL "http://www.thomas-bayer.com/".
                        </short_desc>
                        <detailed_desc>
                            <p>This session will be assigned with ID as value of map item BayerSessionID under section SAFSREST.</p>
                            <p>This session will use the <a href="#authSettings">global authentication</a> if exists.</p>
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, BayerSessionID, RestStartServiceSession, "http://www.thomas-bayer.com/", "configure/simpleauth.xml"</usage>
                    <description>
                        <short_desc>
                            Start a session for a REST service based on URL "http://www.thomas-bayer.com/", and this session will use
                            authentication information stored in file &lt;project&gt;/configure/simpleauth.xml.
                        </short_desc>
                        <detailed_desc>
                            <p>This session will be identified by ID, which is already defined by map-item BayerSessionID under section SAFSREST.</p>
                            The file &lt;project&gt;/configure/simpleauth.xml contains authentication information, example as below:
<pre>
  &lt;SimpleAuth classname="org.safs.auth.SimpleAuth"&gt;
    &lt;password&gt;unitA123&lt;/password&gt;
    &lt;userName&gt;Mark&lt;/userName&gt;
  &lt;/SimpleAuth&gt;
</pre>
                        </detailed_desc>
                    </description>
                </example>
                <example>
                    <usage>T, SAFSREST, BayerSessionID, RestStartServiceSession, "http://www.thomas-bayer.com/", "NOAUTHENTICATION"</usage>
                    <description>
                        <short_desc>
                            Start a session for a REST service based on URL "http://www.thomas-bayer.com/".
                        </short_desc>
                        <detailed_desc>
                            <p>This session will be assigned with ID as value of map item BayerSessionID under section SAFSREST.</p>
                            <p>This session will NOT use any authentication even if the <a href="#authSettings">global authentication</a> exists.</p>
                        </detailed_desc>
                    </description>
                </example>

            </examples>
        </keyword>

	</keywords>
</keyword_library>